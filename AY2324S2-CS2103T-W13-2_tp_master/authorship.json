[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"The-Dudeski"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-W13-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-W13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"The-Dudeski"},"content":"* This is **a project created by CS2103T students. It is a contact book **.\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"The-Dudeski"},"content":"  * It is meant to be used by secretaries in companies with different departments to be managed","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"The-Dudeski"},"content":"  * The project will be developed over the course of AY23/24 Semester 2","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"The-Dudeski"},"content":"* The project is written Java","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"The-Dudeski"},"content":"  * It is **written in OOP fashion**. ","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"The-Dudeski"},"content":"* The application will contain contacts for the secretary to manage","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"The-Dudeski"},"content":"  * This will include the option to view, add, delete and filter contacts","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"The-Dudeski"},"content":"* For the detailed documentation of this project, see the **[Contact Book Product Website]()**.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"The-Dudeski"},"content":"* This project is derived from AddressBook-Level3 created by [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"The-Dudeski":10,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"The-Dudeski"},"content":"You can reach us at the email `mashfi.i@u.nus.edu`","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"The-Dudeski"},"content":"### Mashfi Ishtiaque","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"The-Dudeski"},"content":"\u003cimg src\u003d\"/images/miffi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"The-Dudeski"},"content":"[[homepage](https://decadent.rest)]","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"The-Dudeski"},"content":"[[github](https://github.com/miffi)]","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"The-Dudeski"},"content":"[[portfolio](team/miffi.md)]","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"* Role: Team Lead","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"  - UI","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"  - Tools","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"The-Dudeski"},"content":"### Leong Jia Hao, Derek","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"The-Dudeski"},"content":"\u003cimg src\u003d\"/images/derekljh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"The-Dudeski"},"content":"[[github](http://github.com/derekljh)]","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"The-Dudeski"},"content":"[[portfolio](team/derekljh.md)]","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"- Role: Developer","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"  * Tasks and Deadlines","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"  - Scheduling and tracking","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"  - Logic","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"The-Dudeski"},"content":"### Mahindroo Aashim","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"The-Dudeski"},"content":"\u003cimg src\u003d\"/images/radeon2525.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"The-Dudeski"},"content":"[[github](http://github.com/radeon2525)] ","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"The-Dudeski"},"content":"[[portfolio](team/radeon2525.md)]","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"  - Testing","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"  - Model","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"The-Dudeski"},"content":"### Kyaw Swar Myint","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"The-Dudeski"},"content":"\u003cimg src\u003d\"/images/jukeboxk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"The-Dudeski"},"content":"[[github](http://github.com/jukeboxk)]","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"The-Dudeski"},"content":"[[portfolio](team/jukeboxk.md)]","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"  - Documentation","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"  - Main","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"  - Commons","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"The-Dudeski"},"content":"### Dude Lorenz Leonardo Crescenzio","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"The-Dudeski"},"content":"\u003cimg src\u003d\"/images/the-dudeski.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"The-Dudeski"},"content":"[[github](http://github.com/the-dudeski)]","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"The-Dudeski"},"content":"[[portfolio](team/the-dudeski.md)]","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"  - Integration","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"  - Storage","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"The-Dudeski":22,"miffi":19,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"* Idea of filter syntax from [taskwarrior](https://github.com/GothenburgBitFactory/taskwarrior/blob/0c8edfc50e422b69abb4b78af70fc2243e227e9d/doc/man/task.1.in#L809)","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"and edit diagrams.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"**`Main`** (consisting of","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"the command `delete 1`.","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"radeon2525"},"content":"The **API** of this component is specified","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"visible GUI.","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"is specified","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"**API","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"radeon2525"},"content":"** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"radeon2525"},"content":"call as an example.","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Derekljh"},"content":"Another sequence diagram below illustrates the interactions within the `Logic` component, taking","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"Derekljh"},"content":"`execute(\"tag 1 tag: example\")` API call as an example.","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"Derekljh"},"content":"![](C:\\Repos\\TeamProject\\docs\\images\\TagCommand.png)","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"radeon2525"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"radeon2525"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"radeon2525"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"   several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"radeon2525"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"radeon2525"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"radeon2525"},"content":"  a `Command` object.","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"radeon2525"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"radeon2525"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"radeon2525"},"content":"**API","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"radeon2525"},"content":"** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"radeon2525"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"radeon2525"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"radeon2525"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"radeon2525"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"radeon2525"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"radeon2525"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"radeon2525"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"radeon2525"},"content":"**API","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"radeon2525"},"content":"** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"radeon2525"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"radeon2525"},"content":"  objects.","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"radeon2525"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"radeon2525"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2024-03-07"},{"lineNumber":190,"author":{"gitId":"radeon2525"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"radeon2525"},"content":"  that belong to the `Model`)","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"JukeBoxK"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package. Each component comes from one of the","lastModifiedDate":"2024-03-24"},{"lineNumber":196,"author":{"gitId":"JukeBoxK"},"content":"three packages: `core`, `exceptions` and `util`. `DataLoadingException` for example is a components from the exception","lastModifiedDate":"2024-03-24"},{"lineNumber":197,"author":{"gitId":"JukeBoxK"},"content":"package, which `AddressBookStorage` and `UserPrefsSroage` throws and `MainApp` catches.","lastModifiedDate":"2024-03-24"},{"lineNumber":198,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"JukeBoxK"},"content":"\u003cimg src\u003d\"images/DataLoadingExceptionObjectDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"miffi"},"content":"### Filter","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"miffi"},"content":"The general outline of the filter commands architecture is as follows.","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"miffi"},"content":"![FilterCommand Architecture Diagram](images/ComponentPredicateClassDiagram.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"miffi"},"content":"The `FilterCommand` takes a nonempty list of `ComponentPredicate` which is an interface","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"miffi"},"content":"implementing `Predicate\u003cPerson\u003e`. It filters all the `Person`s in the `Model` with these predicates and keeps a specific","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"miffi"},"content":"person when any of the predicates match.","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"miffi"},"content":"`ComponentPredicate` extracts the values of a specific component and runs its test on those values. The specific values","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"miffi"},"content":"it can extract and manipulate on its implementation.","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"miffi"},"content":"- `ComponentStringPredicate` can extract all values that can be treated as a string and run string matching operations.","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"miffi"},"content":"- `ComponentExistencePredicate` can extract all values that can be empty and check for existence (empty or not).","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":221,"author":{"gitId":"miffi"},"content":"#### Implementation of specific predicates","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"miffi"},"content":"As an example of implementation here\u0027s the `Is` class.","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"miffi"},"content":"![Is class diagram](images/ComponentIs.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"miffi"},"content":"The `Is.test` method extracts the values of the component specified by the command with","lastModifiedDate":"2024-03-26"},{"lineNumber":227,"author":{"gitId":"miffi"},"content":"`ComponentStringPredicate`\u0027s `extract` method and runs an equality test between the strings with the input","lastModifiedDate":"2024-03-26"},{"lineNumber":228,"author":{"gitId":"miffi"},"content":"and returns `true` when any of the values match the input.","lastModifiedDate":"2024-03-26"},{"lineNumber":229,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":230,"author":{"gitId":"miffi"},"content":"In the case of singular values, `extract` returns a single element stream. In case of","lastModifiedDate":"2024-03-26"},{"lineNumber":231,"author":{"gitId":"miffi"},"content":"aggregate values like `tag` it extracts all the values out and returns them all in the stream.","lastModifiedDate":"2024-03-26"},{"lineNumber":232,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":233,"author":{"gitId":"miffi"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-26"},{"lineNumber":234,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":235,"author":{"gitId":"miffi"},"content":"The filter command matches the `Person`s in `Model`\u0027s currently filtered list according to the list of predicates given","lastModifiedDate":"2024-03-26"},{"lineNumber":236,"author":{"gitId":"miffi"},"content":"to it. A person passes if it matches any of the predicates. The predicates themselves also have to be disjunctive.","lastModifiedDate":"2024-03-26"},{"lineNumber":237,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":238,"author":{"gitId":"miffi"},"content":"By making all operations `or` by default, and providing `not` variations like `has` and `hasnt`, we can rely on","lastModifiedDate":"2024-03-26"},{"lineNumber":239,"author":{"gitId":"miffi"},"content":"the fact that subsequent `FilterCommand` operations is the same as an `and`. Therefore, we have full access to boolean","lastModifiedDate":"2024-03-26"},{"lineNumber":240,"author":{"gitId":"miffi"},"content":"logic.","lastModifiedDate":"2024-03-26"},{"lineNumber":241,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":242,"author":{"gitId":"miffi"},"content":"This is done because making the parser support boolean operations and parenthesizing would take more time than possible.","lastModifiedDate":"2024-03-26"},{"lineNumber":243,"author":{"gitId":"miffi"},"content":"This does make the user interface a bit more confusing to use, but our time limitations don\u0027t allow for a better","lastModifiedDate":"2024-03-26"},{"lineNumber":244,"author":{"gitId":"miffi"},"content":"implementation.","lastModifiedDate":"2024-03-26"},{"lineNumber":245,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"radeon2525"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2024-03-07"},{"lineNumber":251,"author":{"gitId":"radeon2525"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2024-03-07"},{"lineNumber":252,"author":{"gitId":"radeon2525"},"content":"following operations:","lastModifiedDate":"2024-03-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"radeon2525"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":255,"author":{"gitId":"radeon2525"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":256,"author":{"gitId":"radeon2525"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"radeon2525"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2024-03-07"},{"lineNumber":259,"author":{"gitId":"radeon2525"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-03-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"radeon2525"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2024-03-07"},{"lineNumber":264,"author":{"gitId":"radeon2525"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2024-03-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"radeon2525"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2024-03-07"},{"lineNumber":269,"author":{"gitId":"radeon2525"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2024-03-07"},{"lineNumber":270,"author":{"gitId":"radeon2525"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2024-03-07"},{"lineNumber":271,"author":{"gitId":"radeon2525"},"content":"state.","lastModifiedDate":"2024-03-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"radeon2525"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also","lastModifiedDate":"2024-03-07"},{"lineNumber":276,"author":{"gitId":"radeon2525"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2024-03-07"},{"lineNumber":277,"author":{"gitId":"radeon2525"},"content":"the `addressBookStateList`.","lastModifiedDate":"2024-03-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"radeon2525"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2024-03-07"},{"lineNumber":286,"author":{"gitId":"radeon2525"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2024-03-07"},{"lineNumber":287,"author":{"gitId":"radeon2525"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-03-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":308,"author":{"gitId":"radeon2525"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2024-03-07"},{"lineNumber":309,"author":{"gitId":"radeon2525"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2024-03-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"radeon2525"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2024-03-07"},{"lineNumber":316,"author":{"gitId":"radeon2525"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2024-03-07"},{"lineNumber":317,"author":{"gitId":"radeon2525"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"radeon2525"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2024-03-07"},{"lineNumber":322,"author":{"gitId":"radeon2525"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2024-03-07"},{"lineNumber":323,"author":{"gitId":"radeon2525"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2024-03-07"},{"lineNumber":324,"author":{"gitId":"radeon2525"},"content":"desktop applications follow.","lastModifiedDate":"2024-03-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"Derekljh"},"content":"**Target user profile**: Secretary of a tech company","lastModifiedDate":"2024-03-06"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"Derekljh"},"content":"**Value proposition**: Categorise people according to their department/origin, making it easier to assign tasks or get all the emails.","lastModifiedDate":"2024-03-06"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"| Priority | As a …​   | I want to …​                          | So that I can…​                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"JukeBoxK"},"content":"|----------|-----------|---------------------------------------|--------------------------------------------------------|","lastModifiedDate":"2024-03-21"},{"lineNumber":384,"author":{"gitId":"JukeBoxK"},"content":"| `* * *`  | secretary | view the added contact list           | see the details of the added contact                   |","lastModifiedDate":"2024-03-21"},{"lineNumber":385,"author":{"gitId":"JukeBoxK"},"content":"| `* * *`  | secretary | add contacts to a list                | record contact details                                 |","lastModifiedDate":"2024-03-21"},{"lineNumber":386,"author":{"gitId":"JukeBoxK"},"content":"| `* * *`  | secretary | remove contacts from a list           | clean up old/unused records                            |","lastModifiedDate":"2024-03-21"},{"lineNumber":387,"author":{"gitId":"JukeBoxK"},"content":"| `* *`    | secretary | tag individual contacts               | organize the contact based on tags                     |","lastModifiedDate":"2024-03-21"},{"lineNumber":388,"author":{"gitId":"JukeBoxK"},"content":"| `* *`    | secretary | delete a tag of an individual contact | make sure that the tag only is for the necessary users |","lastModifiedDate":"2024-03-21"},{"lineNumber":389,"author":{"gitId":"JukeBoxK"},"content":"| `*`      | user      | undo my command                       | save time on undoing the effects of a wrong command    |","lastModifiedDate":"2024-03-21"},{"lineNumber":390,"author":{"gitId":"JukeBoxK"},"content":"| `*`      | user      | redo my undo                          | save time on undoing the effects of a wrong undo       |","lastModifiedDate":"2024-03-21"},{"lineNumber":391,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"miffi"},"content":"(For all use cases below, the **System** is `OfficeHarbor` (OH) and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"JukeBoxK"},"content":"**UC01: View contacts**","lastModifiedDate":"2024-03-20"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"JukeBoxK"},"content":"1. User requests to list people.","lastModifiedDate":"2024-03-20"},{"lineNumber":402,"author":{"gitId":"JukeBoxK"},"content":"2. OH shows a list of people.","lastModifiedDate":"2024-03-20"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"JukeBoxK"},"content":"    * 2a1. No list is shown.","lastModifiedDate":"2024-03-20"},{"lineNumber":411,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"JukeBoxK"},"content":"**UC02: Add a contact**","lastModifiedDate":"2024-03-20"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"radeon2525"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"JukeBoxK"},"content":"1.  User requests to add a person along with details.","lastModifiedDate":"2024-03-20"},{"lineNumber":419,"author":{"gitId":"JukeBoxK"},"content":"2.  OH adds the person.","lastModifiedDate":"2024-03-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"radeon2525"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":422,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":423,"author":{"gitId":"radeon2525"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":424,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":425,"author":{"gitId":"radeon2525"},"content":"* 1a. The given format is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":426,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":427,"author":{"gitId":"radeon2525"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":428,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":429,"author":{"gitId":"radeon2525"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":430,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":431,"author":{"gitId":"JukeBoxK"},"content":"**UC03: Remove a contact**","lastModifiedDate":"2024-03-20"},{"lineNumber":432,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":433,"author":{"gitId":"radeon2525"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":434,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":435,"author":{"gitId":"JukeBoxK"},"content":"1. User requests to list contacts (UC01).","lastModifiedDate":"2024-03-20"},{"lineNumber":436,"author":{"gitId":"JukeBoxK"},"content":"2. User requests to remove a specific contact in the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":437,"author":{"gitId":"JukeBoxK"},"content":"3. OH removes the contact.","lastModifiedDate":"2024-03-20"},{"lineNumber":438,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":439,"author":{"gitId":"radeon2525"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":440,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":441,"author":{"gitId":"radeon2525"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":445,"author":{"gitId":"JukeBoxK"},"content":"    * 3a1. OH shows an error message.","lastModifiedDate":"2024-03-20"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-20"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":449,"author":{"gitId":"JukeBoxK"},"content":"**UC04: Tagging contacts**","lastModifiedDate":"2024-03-20"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":451,"author":{"gitId":"JukeBoxK"},"content":"**MSS**","lastModifiedDate":"2024-03-20"},{"lineNumber":452,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":453,"author":{"gitId":"JukeBoxK"},"content":"1. User requests to list contacts (UC01).","lastModifiedDate":"2024-03-20"},{"lineNumber":454,"author":{"gitId":"JukeBoxK"},"content":"2. User requests to add a tag to a specific contact in the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":455,"author":{"gitId":"JukeBoxK"},"content":"3. OH adds the tag to the contact.","lastModifiedDate":"2024-03-20"},{"lineNumber":456,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":457,"author":{"gitId":"JukeBoxK"},"content":"    Use case ends.","lastModifiedDate":"2024-03-20"},{"lineNumber":458,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":459,"author":{"gitId":"JukeBoxK"},"content":"**Extensions**","lastModifiedDate":"2024-03-20"},{"lineNumber":460,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":461,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":462,"author":{"gitId":"JukeBoxK"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":463,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":464,"author":{"gitId":"JukeBoxK"},"content":"  * 2a1. OH shows an error message.","lastModifiedDate":"2024-03-20"},{"lineNumber":465,"author":{"gitId":"miffi"},"content":"    ","lastModifiedDate":"2024-03-08"},{"lineNumber":466,"author":{"gitId":"JukeBoxK"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-03-20"},{"lineNumber":467,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":468,"author":{"gitId":"JukeBoxK"},"content":"* 2b. The given tag is empty or invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":469,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":470,"author":{"gitId":"JukeBoxK"},"content":"  * 2b. OH shows an error message.","lastModifiedDate":"2024-03-20"},{"lineNumber":471,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":472,"author":{"gitId":"JukeBoxK"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-03-20"},{"lineNumber":473,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":474,"author":{"gitId":"JukeBoxK"},"content":"**UC05: Deleting a tag**","lastModifiedDate":"2024-03-20"},{"lineNumber":475,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":476,"author":{"gitId":"JukeBoxK"},"content":"**MSS**","lastModifiedDate":"2024-03-09"},{"lineNumber":477,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":478,"author":{"gitId":"JukeBoxK"},"content":"1. User requests to list contacts (UC01).","lastModifiedDate":"2024-03-20"},{"lineNumber":479,"author":{"gitId":"JukeBoxK"},"content":"2. User requests to delete a specific tag of a person from the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":480,"author":{"gitId":"JukeBoxK"},"content":"3. OH deletes the specified tag of that person.","lastModifiedDate":"2024-03-20"},{"lineNumber":481,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":482,"author":{"gitId":"JukeBoxK"},"content":"   Use case ends.","lastModifiedDate":"2024-03-09"},{"lineNumber":483,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":484,"author":{"gitId":"JukeBoxK"},"content":"**Extensions**","lastModifiedDate":"2024-03-09"},{"lineNumber":485,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":486,"author":{"gitId":"JukeBoxK"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":487,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":488,"author":{"gitId":"JukeBoxK"},"content":"    * 2a1. OH shows an error message.","lastModifiedDate":"2024-03-20"},{"lineNumber":489,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":490,"author":{"gitId":"JukeBoxK"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-20"},{"lineNumber":491,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":492,"author":{"gitId":"JukeBoxK"},"content":"* 2b. The specified tag does not exist.","lastModifiedDate":"2024-03-20"},{"lineNumber":493,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":494,"author":{"gitId":"JukeBoxK"},"content":"    * 2b1. OH shows an error message.","lastModifiedDate":"2024-03-20"},{"lineNumber":495,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":496,"author":{"gitId":"JukeBoxK"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-09"},{"lineNumber":497,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":498,"author":{"gitId":"JukeBoxK"},"content":"**UC06: Undoing a Command**","lastModifiedDate":"2024-03-20"},{"lineNumber":499,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":500,"author":{"gitId":"JukeBoxK"},"content":"**MSS**","lastModifiedDate":"2024-03-20"},{"lineNumber":501,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":502,"author":{"gitId":"JukeBoxK"},"content":"1. User requests to undo a command.","lastModifiedDate":"2024-03-20"},{"lineNumber":503,"author":{"gitId":"JukeBoxK"},"content":"2. OH resets to the state before the latest command.","lastModifiedDate":"2024-03-20"},{"lineNumber":504,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":505,"author":{"gitId":"JukeBoxK"},"content":"   Use case ends.","lastModifiedDate":"2024-03-20"},{"lineNumber":506,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":507,"author":{"gitId":"JukeBoxK"},"content":"**Extensions**","lastModifiedDate":"2024-03-20"},{"lineNumber":508,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":509,"author":{"gitId":"JukeBoxK"},"content":"* 2a. No command has been run since opening the app.","lastModifiedDate":"2024-03-20"},{"lineNumber":510,"author":{"gitId":"JukeBoxK"},"content":"  ","lastModifiedDate":"2024-03-09"},{"lineNumber":511,"author":{"gitId":"JukeBoxK"},"content":"  * 2a1. OH shows an error message. ","lastModifiedDate":"2024-03-20"},{"lineNumber":512,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":513,"author":{"gitId":"JukeBoxK"},"content":"    Use case ends.","lastModifiedDate":"2024-03-20"},{"lineNumber":514,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":515,"author":{"gitId":"JukeBoxK"},"content":"**UC06: Redoing an Undo Command**","lastModifiedDate":"2024-03-20"},{"lineNumber":516,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":517,"author":{"gitId":"The-Dudeski"},"content":"**MSS**","lastModifiedDate":"2024-03-09"},{"lineNumber":518,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":519,"author":{"gitId":"JukeBoxK"},"content":"1. User requests to redo an undo.","lastModifiedDate":"2024-03-20"},{"lineNumber":520,"author":{"gitId":"JukeBoxK"},"content":"2. OH resets to the state before the latest command.","lastModifiedDate":"2024-03-20"},{"lineNumber":521,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":522,"author":{"gitId":"The-Dudeski"},"content":"   Use case ends.","lastModifiedDate":"2024-03-09"},{"lineNumber":523,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":524,"author":{"gitId":"The-Dudeski"},"content":"**Extensions**","lastModifiedDate":"2024-03-09"},{"lineNumber":525,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":526,"author":{"gitId":"JukeBoxK"},"content":"* 2a. No command has been run since opening the app.","lastModifiedDate":"2024-03-20"},{"lineNumber":527,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":528,"author":{"gitId":"JukeBoxK"},"content":"    * 2a1. OH shows an error message.","lastModifiedDate":"2024-03-20"},{"lineNumber":529,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":530,"author":{"gitId":"JukeBoxK"},"content":"      Use case ends.","lastModifiedDate":"2024-03-20"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"radeon2525"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2024-03-07"},{"lineNumber":540,"author":{"gitId":"radeon2525"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-07"},{"lineNumber":541,"author":{"gitId":"radeon2525"},"content":"4. Should be able to handle private contact details securely.","lastModifiedDate":"2024-03-07"},{"lineNumber":542,"author":{"gitId":"radeon2525"},"content":"5. Should be able to handle a large number of contacts without consuming a large amount of memory.","lastModifiedDate":"2024-03-07"},{"lineNumber":543,"author":{"gitId":"radeon2525"},"content":"6. Should be able to handle a large number of contacts without slowing down the app.","lastModifiedDate":"2024-03-07"},{"lineNumber":544,"author":{"gitId":"radeon2525"},"content":"7. Should be able to handle a large number of contacts without losing the data.","lastModifiedDate":"2024-03-07"},{"lineNumber":545,"author":{"gitId":"radeon2525"},"content":"8. Should be able to handle a large number of contacts without losing the data even in the event of a system crash.","lastModifiedDate":"2024-03-07"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":550,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"radeon2525"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2024-03-07"},{"lineNumber":570,"author":{"gitId":"radeon2525"},"content":"       optimum.","lastModifiedDate":"2024-03-07"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"radeon2525"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-03-07"},{"lineNumber":589,"author":{"gitId":"radeon2525"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-07"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"The-Dudeski":9,"Derekljh":7,"radeon2525":124,"miffi":50,"JukeBoxK":87,"-":328}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"OfficeHarbor (OH) is a **desktop app for managing the contacts of a tech firm\u0027s teams, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, OH can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"2. Download the latest `officeharbor.jar` from [here](https://github.com/AY2324S2-CS2103T-W13-2/tphone:releases).","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your OH.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"4. (a) Double-click on the `officeharbor.jar` file to run the application.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"   (b) (Or) Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar officeharbor.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"   * `add name:John Doe phone:98765432 email:johnd@example.com address:John street, block 123, #01-01` : Adds a contact named `John Doe` to OH.","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"JukeBoxK"},"content":"* Words enclosed between diamond brackets `\u003c\u003e`, are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"JukeBoxK"},"content":"  e.g. in `add name:\u003cname\u003e`, `\u003cname\u003e` is a parameter which can be used as `add name:John Doe`.","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"JukeBoxK"},"content":"* Space can be added between the prefix and the word.\u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"JukeBoxK"},"content":"  e.g. either `name: \u003cname\u003e phone: \u003cphone number\u003e` or `name:\u003cname\u003e phone:\u003cphone number\u003e` is acceptable.","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"JukeBoxK"},"content":"* In some commands like tag, `[tag/\u003ctag\u003e]...` means that you can have multiple optional prefixes at the end \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"JukeBoxK"},"content":"  e.g. the command `tag 1 tag:friends tag:colleagues` would add 2 tags directly to the contact at index 1.","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"JukeBoxK"},"content":"* Parameters can be in any order for adding a contact.\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"JukeBoxK"},"content":"  e.g. if the command specifies `name:\u003cname\u003e phone:\u003cphone number\u003e`, `phone:\u003cphone number\u003e name:\u003cname\u003e` is also acceptable.","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"JukeBoxK"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"JukeBoxK"},"content":"Adds a contact with the input details to OH.","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"JukeBoxK"},"content":"Format: `add name:\u003cname\u003e phone:\u003cphone number\u003e email:\u003cemail address\u003e address:\u003caddress\u003e`","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"JukeBoxK"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"JukeBoxK"},"content":"All components are necessary.","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"JukeBoxK"},"content":"* `add name:John Doe phone:98765432 email:johnd@example.com address:John street, block 123, #01-01`","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"JukeBoxK"},"content":"* `add name:Virat Kohli phone:98765432 email:virat@gmail.com address:Altamount Road, block 10, #05-02`","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"JukeBoxK"},"content":"Output:","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"JukeBoxK"},"content":"The message “A new contact `name` has been added to the list. Name: `\u003cname\u003e`, Phone: `\u003cphone number\u003e`, Email: `\u003cemail\u003e`, Address: `\u003caddress\u003e`.” will be shown. ","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"JukeBoxK"},"content":"A new contact entry with the given user will be displayed in the list.","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"JukeBoxK"},"content":"![add](images/user-guide/add_mock_output.png)","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"JukeBoxK"},"content":"Shows a list of all contacts in OH.","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"JukeBoxK"},"content":"Output:","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"JukeBoxK"},"content":"A list of added contacts if any in the form of a scrollable pane will be shown. ","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"JukeBoxK"},"content":"The contacts are listed in the order in which they are added.","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"JukeBoxK"},"content":"The message \"Empty list\" is shown when there is nothing added.","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"JukeBoxK"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"JukeBoxK"},"content":"Deletes the specified contact from OH.","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"JukeBoxK"},"content":"Format: `delete \u003cid\u003e`","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"JukeBoxK"},"content":"* Deletes the person at the specified `\u003cid\u003e`.","lastModifiedDate":"2024-02-29"},{"lineNumber":114,"author":{"gitId":"JukeBoxK"},"content":"* The id refers to the index number shown in the contact list.","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"JukeBoxK"},"content":"* The id **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"JukeBoxK"},"content":"* `delete 2` deletes the 2nd person of the contact list from OH.","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"JukeBoxK"},"content":"Output:","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"JukeBoxK"},"content":"The message \"Contact `name` has been deleted. Name: `name`, Phone: `phone number`, Email: `email`, Address: `address`.” will be shown.","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"JukeBoxK"},"content":"The entry with the given id will disappear from the list.","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"JukeBoxK"},"content":"![delete](images/user-guide/delete_mock_output.png)","lastModifiedDate":"2024-02-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"JukeBoxK"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2024-02-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"JukeBoxK"},"content":"Clears all entries from OH.","lastModifiedDate":"2024-02-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"JukeBoxK"},"content":"Format: `clear`","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"JukeBoxK"},"content":"Output:","lastModifiedDate":"2024-02-29"},{"lineNumber":133,"author":{"gitId":"JukeBoxK"},"content":"The message \"Address book has been cleared!\" will be shown.","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"JukeBoxK"},"content":"### Tagging a Contact : `tag`","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"JukeBoxK"},"content":"Tags the specified contact with the input tag name.","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"JukeBoxK"},"content":"* Tags the person at the specified `\u003cid\u003e`.","lastModifiedDate":"2024-02-29"},{"lineNumber":140,"author":{"gitId":"JukeBoxK"},"content":"* The id refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-02-29"},{"lineNumber":141,"author":{"gitId":"JukeBoxK"},"content":"* The id **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"JukeBoxK"},"content":"Format: `tag \u003cid\u003e tag:\u003ctag\u003e [tag:tag]...`","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"JukeBoxK"},"content":"Example:","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"JukeBoxK"},"content":"`tag 2 friends`","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"JukeBoxK"},"content":"Output:","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"JukeBoxK"},"content":"The message \"The following contact has been tagged with `\u003ctag name\u003e`: `contact info`.” will be shown, ","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"JukeBoxK"},"content":"where contact info is all the information of the contact.","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"JukeBoxK"},"content":"![tag](images/user-guide/tag_mock_output.png)","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"JukeBoxK"},"content":"### Deleting a tag : `untag`","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"JukeBoxK"},"content":"Deletes the specified tag from the specified contact","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"JukeBoxK"},"content":"* Delete the specified tag of the person at the specified `\u003cid\u003e`.","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"JukeBoxK"},"content":"* The id refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-02-29"},{"lineNumber":160,"author":{"gitId":"JukeBoxK"},"content":"* The id **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-02-29"},{"lineNumber":161,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"JukeBoxK"},"content":"Format: `untag \u003cid\u003e tag:\u003ctag\u003e [tag:tag]...`","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"JukeBoxK"},"content":"Output:","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"JukeBoxK"},"content":"The message \"The tag `\u003ctag\u003e` has been removed from contact: `contact info`.\" will be shown,","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"JukeBoxK"},"content":"where contact info is all the information of the contact. ","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"JukeBoxK"},"content":"The list entry of the user with \u003cid\u003e will not have the tag anymore.","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"JukeBoxK"},"content":"![delete-tag](images/user-guide/delete-tag_mock_output.png)","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"miffi"},"content":"### Filtering contacts : filter","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"miffi"},"content":"Filters the contacts.","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"miffi"},"content":"Format: `filter \u003ccomponent\u003e[.\u003cmodifier\u003e]:\u003cvalue\u003e ...`","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"miffi"},"content":"`component` is one of `name`,`phone`,`email`, or `address` corresponding to the values in add:","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"miffi"},"content":"name, phone, email and address respectively.","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"miffi"},"content":"There can be duplicate components, if there are multiple components, the","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"miffi"},"content":"contacts that match any of the components are shown.","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"miffi"},"content":"In order to filter with values that must all match, the only way to do so right","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"miffi"},"content":"now is to run multiple sequential filter commands.","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"miffi"},"content":"`modifier` is to specify how the filtering should be done, it is optional and","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"miffi"},"content":"defaults to `has`. The components are","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"miffi"},"content":"- `has`: value has to match part of the component","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"miffi"},"content":"- `hasnt`: negation of has","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"miffi"},"content":"- `is`: value has to match the component exactly","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"miffi"},"content":"- `isnt`: negation of is","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"miffi"},"content":"- `word`: value has to match a distinct word in the component, a word is any","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"miffi"},"content":"sequence of letters and numbers surrounded by spaces","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"miffi"},"content":"- `noword`: negation of word","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"miffi"},"content":"- `none`: the component is empty","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"miffi"},"content":"- `any`: the component is not empty","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"miffi"},"content":"Example","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"miffi"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"miffi"},"content":"filter address:queenstown","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"miffi"},"content":"\u003e The default modifier is has, so this lists every contact with an address that","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"miffi"},"content":"\u003e has queenstown in it.","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"miffi"},"content":"filter phone.is:12345678","lastModifiedDate":"2024-03-24"},{"lineNumber":205,"author":{"gitId":"miffi"},"content":"\u003e Returns the contact with the phone number 12345678","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"miffi"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"JukeBoxK"},"content":"### Undoing a command : `undo`","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"JukeBoxK"},"content":"Resets the state of OH to before the execution of the latest command.","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"JukeBoxK"},"content":"Format: `undo`","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"JukeBoxK"},"content":"Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"JukeBoxK"},"content":"The message \"Undo success!\" will be shown. ","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"JukeBoxK"},"content":"The list entry of the user will return to the state before the latest command. ","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"JukeBoxK"},"content":"If no command has been run at all, an error message \"No more commands to undo!\" will be shown instead.","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"JukeBoxK"},"content":"Example of undoing a delete command.","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"JukeBoxK"},"content":"Contact after a delete command:","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"JukeBoxK"},"content":"![delete_operation](images/user-guide/delete_operation-undo-mock.png)","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"JukeBoxK"},"content":"Contact after the delete command is undone:","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"JukeBoxK"},"content":"![undo](images/user-guide/undo_mock_output.png)","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"JukeBoxK"},"content":"### Redoing a command : `redo`","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"JukeBoxK"},"content":"Resets the state of OH to before the latest undo command.","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"JukeBoxK"},"content":"Format: `redo`","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"JukeBoxK"},"content":"Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"JukeBoxK"},"content":"The message \"Redo success!\" will be shown.","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"JukeBoxK"},"content":"The list entry of the user will return to the state before the latest undo command.","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"JukeBoxK"},"content":"If no undo command has been run at all, an error message \"No more commands to redo!\" will be shown instead.","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"JukeBoxK"},"content":"Example of redoing the previous undo command:","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"JukeBoxK"},"content":"![redo](images/user-guide/redo_mock_output.png)","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"miffi"},"content":"OfficeHarbor data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":253,"author":{"gitId":"JukeBoxK"},"content":"OfficeHarbor data are saved automatically as a JSON file `[JAR file location]/dataddress:officeharbor.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"miffi"},"content":"If your changes to the data file makes its format invalid, OfficeHarbor will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":257,"author":{"gitId":"JukeBoxK"},"content":"Furthermore, certain edits can cause the OfficeHarbor to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-02-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"miffi"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous OfficeHarbor home folder.","lastModifiedDate":"2024-02-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"JukeBoxK"},"content":"| Action         | Format, Examples                                                                                                                                                                         |","lastModifiedDate":"2024-02-29"},{"lineNumber":278,"author":{"gitId":"JukeBoxK"},"content":"|----------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"JukeBoxK"},"content":"| **Add**        | `add name:\u003cname\u003e phone:\u003cphone number\u003e email:\u003cemail address\u003e address:\u003caddress\u003e` \u003cbr\u003e e.g., `add name:James Ho phone:22224444 email:jamesho@example.com address:123, Clementi Rd, 1234665` |","lastModifiedDate":"2024-03-21"},{"lineNumber":280,"author":{"gitId":"JukeBoxK"},"content":"| **Delete**     | `delete \u003cid\u003e`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                       |","lastModifiedDate":"2024-03-20"},{"lineNumber":281,"author":{"gitId":"JukeBoxK"},"content":"| **Clear**      | `clear`                                                                                                                                                                                  |","lastModifiedDate":"2024-02-29"},{"lineNumber":282,"author":{"gitId":"JukeBoxK"},"content":"| **Tag**        | `tag \u003cid\u003e tag:\u003ctag\u003e [tag:tag]...`  \u003cbr\u003e e.g., `tag 2 tag:friends`                                                                                                                        |","lastModifiedDate":"2024-03-21"},{"lineNumber":283,"author":{"gitId":"JukeBoxK"},"content":"| **Delete Tag** | `untag \u003cid\u003e tag:\u003ctag\u003e [tag:tag]...` \u003cbr\u003e e.g., `untag 2 tag:friends`                                                                                                                     |","lastModifiedDate":"2024-03-21"},{"lineNumber":284,"author":{"gitId":"JukeBoxK"},"content":"| **List**       | `list`                                                                                                                                                                                   |","lastModifiedDate":"2024-02-29"},{"lineNumber":285,"author":{"gitId":"JukeBoxK"},"content":"| **Undo**       | `undo`                                                                                                                                                                                   |","lastModifiedDate":"2024-03-20"},{"lineNumber":286,"author":{"gitId":"JukeBoxK"},"content":"| **Redo**       | `redo`                                                                                                                                                                                   |","lastModifiedDate":"2024-03-20"},{"lineNumber":287,"author":{"gitId":"JukeBoxK"},"content":"| **Help**       | `help`                                                                                                                                                                                   |","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"JukeBoxK":124,"miffi":40,"-":123}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"miffi"},"content":"    content: \"OfficeHarbor\";","lastModifiedDate":"2024-02-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"miffi":1,"-":294}},{"path":"docs/diagrams/DataLoadingExceptionObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"!include style.puml","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"interface AddressBookStorage","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"interface UserPrefsStorage","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"class DataLoadingException \u003c\u003cexception\u003e\u003e LOGIC_COLOR_T2","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"class MainApp #grey","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"MainApp -[#grey]down-\u003e DataLoadingException : catches","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"UserPrefsStorage -[STORAGE_COLOR]up-\u003e DataLoadingException : throws","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"AddressBookStorage -[STORAGE_COLOR]up-\u003e DataLoadingException : throws","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"JukeBoxK":16}},{"path":"docs/diagrams/TagCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"!include Style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"box Logic LOGIC_COLOR_T2","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"participant \":TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"box Model MODEL_COLOR_T2","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"[-\u003e LogicManager : execute(\"tag 1 tag: example\")","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"tag 1 tag: example\")","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"create TagCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"AddressBookParser -\u003e TagCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"activate TagCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"TagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"deactivate TagCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"AddressBookParser -\u003e TagCommandParser : parse(\"1, example\")","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"activate TagCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"create TagCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"TagCommandParser -\u003e TagCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"activate TagCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"TagCommand --\u003e TagCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"deactivate TagCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"TagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"destroy TagCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"LogicManager -\u003e TagCommand: execute(m)","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"activate TagCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"TagCommand -\u003e Model : setPerson(personToTag, taggedPerson)","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"Model --\u003e TagCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"create CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"activate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"CommandResult --\u003e TagCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"TagCommand --\u003e LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"deactivate TagCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"\u003c-- LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Derekljh":67}},{"path":"docs/diagrams/redo_uml.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"class RedoCommand {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"    - COMMAND_WORD: String","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"    - MESSAGE_SUCCESS: String","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"    - MESSAGE_FAILURE: String","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"    + execute(model: Model, history: CommandHistory): CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"Model -- RedoCommand : model","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"CommandHistory -- RedoCommand : history","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"CommandResult -- RedoCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"RedoCommand --\u003e Model : updates","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"RedoCommand --\u003e CommandHistory : updates","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"radeon2525":18}},{"path":"docs/diagrams/undo_uml.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"class UndoCommand {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"    - COMMAND_WORD: String","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"    - MESSAGE_SUCCESS: String","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"    - MESSAGE_FAILURE: String","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"    + execute(model: Model, history: CommandHistory): CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"Model -- UndoCommand : model","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"CommandHistory -- UndoCommand : history","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"CommandResult -- UndoCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"UndoCommand --\u003e Model : updates","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"UndoCommand --\u003e CommandHistory : updates","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"radeon2525":18}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"title: OfficeHarbor","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"**OfficeHarbor is a desktop application for managing a tech firm\u0027s teams.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"* If you are interested in using OfficeHarbor, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"* If you are interested about developing OfficeHarbor, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"miffi":4,"-":15}},{"path":"src/main/java/seedu/address/commons/util/InvalidationListenerManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":" * Manages a list of {@link InvalidationListener}.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"public class InvalidationListenerManager {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"    public final ArrayList\u003cInvalidationListener\u003e listeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"     * Adds {@code listener} to the list of listeners.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"     * If the same listener is added more that once, then it will be notified more than once.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"        requireNonNull(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"        listeners.add(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"     * Calls {@link InvalidationListener#invalidated(Observable)} on all added listeners.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"     * Any modifications to the listeners list during the invocation of this method","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"     * will only take effect on the next invocation of this method.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"     * @param observable The {@code Observable} that became invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"    public void callListeners(Observable observable) {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"        // Make a copy of listeners such that any modifications to the listeners list during","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"        // the invocation of this method will only take effect on the next invocation of this method.","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"        ArrayList\u003cInvalidationListener\u003e listenersCopy \u003d new ArrayList\u003c\u003e(listeners);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"        for (InvalidationListener listener : listenersCopy) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"            listener.invalidated(observable);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"     * Removes {@code listener} from the list of listeners.","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"     * If the given listener was not previously added, then this method call is a no-op.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"     * If the given listener was added more than once, then only the first occurrence in the list will be removed.","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        requireNonNull(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        listeners.remove(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"radeon2525":50}},{"path":"src/main/java/seedu/address/logic/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":" * Stores the history of commands executed.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"public class CommandHistory {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    private final ObservableList\u003cString\u003e userInputHistory \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"    private final ObservableList\u003cString\u003e unmodifiableUserInputHistory \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"            FXCollections.unmodifiableObservableList(userInputHistory);","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    public CommandHistory() {}","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"    public CommandHistory(CommandHistory commandHistory) {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"        userInputHistory.addAll(commandHistory.userInputHistory);","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"     * Appends {@code userInput} to the list of user input entered.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"    public void add(String userInput) {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        userInputHistory.add(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"     * Returns an unmodifiable view of {@code userInputHistory}.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"    public ObservableList\u003cString\u003e getHistory() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"        return unmodifiableUserInputHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        if (!(obj instanceof CommandHistory)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        // state check","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"        CommandHistory other \u003d (CommandHistory) obj;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        return userInputHistory.equals(other.userInputHistory);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"        return userInputHistory.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"radeon2525":58}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"radeon2525":1,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"    private final CommandHistory history;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        history \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"        commandResult \u003d command.execute(model, history);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"radeon2525":4,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    public static final String MESSAGE_MISSING_TAG \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"            \"Tags [%2$s] not found for %1$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"miffi":2,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"radeon2525":4,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"radeon2525":3,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"    public abstract CommandResult execute(Model model, CommandHistory history) throws CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"radeon2525":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted %1$s People\";","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    public static final Object MESSAGE_USAGE \u003d \"delete \u003cindex\u003e \u003cindex\u003e...\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"            + \"Example: \" + \"delete\" + \" 1\";","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"    private final List\u003cIndex\u003e targetIndices;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndices) {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        this.targetIndices \u003d targetIndices;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        List\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        for (Index index : targetIndices) {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"            Person personToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"            personsToDelete.add(personToDelete);","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        for (Person personToDelete : personsToDelete) {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        return new CommandResult(getSuccessMessage(personsToDelete));","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"    public String getSuccessMessage(List\u003cPerson\u003e deletedPersons) {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"        StringBuilder message \u003d new StringBuilder(String.format(MESSAGE_DELETE_PERSON_SUCCESS, deletedPersons.size()));","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        for (Person person : deletedPersons) {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"            message.append(\"\\nDeleted Person: \").append(person.getName()).append(\"\\n\").append(person);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        return message.toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        return getClass().getSimpleName() + \"{targetIndices\u003d\" + targetIndices + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"        if (!(obj instanceof DeleteCommand)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand other \u003d (DeleteCommand) obj;","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"        return targetIndices.equals(other.targetIndices);","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"radeon2525":38,"-":46}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"radeon2525":3,"-":241}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"radeon2525":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":" * Finds and lists any contacts whose components pass any of the given predicates.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all persons whose components contain any of \"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"            + \"the specified keywords (case-insensitive) according to the different modifiers and\"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"            + \"displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"            + \"Parameters: [component[.attribute]:\u003cvalue\u003e...]...\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"            + \"Where component is any one of: name, address, phone, tag, email\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"            + \"And attribute is any one of: is, isnt, has, hasnt, word, noword, none, any\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"            + \"Refer to the user guide for more details\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"            + \"Example: \" + COMMAND_WORD + \" address.has:Kent Ridge\";","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    private final ArrayList\u003cComponentPredicate\u003e predicates;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"     * @param predicates The predicates to match the user component on.","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"    public FilterCommand(ArrayList\u003cComponentPredicate\u003e predicates) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        requireNonNull(predicates);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"    public Predicate\u003cPerson\u003e disjunctivelyCombinePredicates() {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"        return person -\u003e predicates.stream().anyMatch(predicate -\u003e predicate.test(person));","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"        model.updateFilteredPersonList(disjunctivelyCombinePredicates());","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"        return predicates.equals(otherFilterCommand.predicates);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"                .add(\"predicate\", predicates)","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"radeon2525":2,"miffi":33,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"radeon2525":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all contacts\";","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    public static final String MESSAGE_EMPTY \u003d \"The list is empty\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"            return new CommandResult(MESSAGE_EMPTY);","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"radeon2525":2,"JukeBoxK":5,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/MailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import java.awt.Desktop;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import java.net.URI;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":" * Lists all email of contacts associated with the tag.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"public class MailCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    public static final String COMMAND_WORD \u003d \"mail\";","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"            + \": Lists the email of contacts containing the inputted tag\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"            + \"Parameters: TAG\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"            + \"Example: \" + COMMAND_WORD + \"friends\";","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    public static final String MESSAGE_EMAIL_CONTACT_SUCCESS \u003d \"Here is the list of emails: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    public static final String MESSAGE_EMAIL_CONTACT_EMPTY \u003d \"There are no contacts associated with that tag.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    private final TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"    public MailCommand(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"            return new CommandResult(String.format(MESSAGE_EMAIL_CONTACT_EMPTY));","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"        for (int i \u003d 0; i \u003c model.getFilteredPersonList().size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"            if (i \u003d\u003d model.getFilteredPersonList().size() - 1) {","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"                builder.append(model.getFilteredPersonList().get(i).getEmail());","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"                builder.append(model.getFilteredPersonList().get(i).getEmail()).append(\",\");","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"            Desktop desktop;","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"            if (Desktop.isDesktopSupported()","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"                    \u0026\u0026 (desktop \u003d Desktop.getDesktop()).isSupported(Desktop.Action.MAIL)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"                URI mailto \u003d new URI(\"mailto:\" + builder);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"                desktop.mail(mailto);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"                throw new RuntimeException(\"Desktop doesn\u0027t support mailto\");","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"        } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"            throw new RuntimeException(\"Error\");","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"                String.format(MESSAGE_EMAIL_CONTACT_SUCCESS, builder));","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"        if (!(other instanceof MailCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"        MailCommand otherMailCommand \u003d (MailCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"        return predicate.equals(otherMailCommand.predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Derekljh":82}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":" * Reverts the {@code model}\u0027s address book to its previously undone state.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo success!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to redo!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        model.redoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"radeon2525":31}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":" * Tags a contact identified using its displayed index in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"            + \": Tags the contact identified by the index number\"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"            + \" used in the displayed contact list with the specified tag.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"            + \"Parameters: INDEX (must be a positive integer) tag: TAG\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 tag: friends\";","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"    public static final String MESSAGE_TAG_CONTACT_SUCCESS \u003d \"Tagged Contact: %1$s with %2$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"     * Creates a command to add a {@code tag} to the person at {@code index}.","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"    public TagCommand(Index index, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"        this.tags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        requireNonNull(history);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"        Person personToTag \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"        Person taggedPerson \u003d addTag(personToTag);","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"        model.setPerson(personToTag, taggedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        // Construct the command result message with the tag information","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"        String tagInfo \u003d String.format(MESSAGE_TAG_CONTACT_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"                Messages.format(taggedPerson), showTags(tags));","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"        CommandResult result \u003d new CommandResult(tagInfo);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"        // Add the executed command to the command history","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"        history.add(String.valueOf(this));","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"        return result;","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"    static String showTags(Collection\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"        return tags.stream().map((tag) -\u003e tag.tagName)","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"                .sorted() // making the output order deterministic","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Derekljh"},"content":"    private Person addTag(Person personToTag) {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Derekljh"},"content":"        HashSet\u003cTag\u003e personTags \u003d new HashSet\u003c\u003e(personToTag.getTags());","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"Derekljh"},"content":"        personTags.addAll(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Derekljh"},"content":"        return new Person(","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Derekljh"},"content":"                personToTag.getName(),","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Derekljh"},"content":"                personToTag.getPhone(),","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"Derekljh"},"content":"                personToTag.getEmail(),","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"Derekljh"},"content":"                personToTag.getAddress(),","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"Derekljh"},"content":"                personTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"Derekljh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"Derekljh"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"Derekljh"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"Derekljh"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"Derekljh"},"content":"        TagCommand otherTagCommand \u003d (TagCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"Derekljh"},"content":"        return targetIndex.equals(otherTagCommand.targetIndex)","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"Derekljh"},"content":"                \u0026\u0026 tags.equals(otherTagCommand.tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"Derekljh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"Derekljh"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"Derekljh"},"content":"                .add(\"tag\", tags)","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"Derekljh"},"content":"                .toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"Derekljh":72,"radeon2525":47}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":" * Reverts the {@code model}\u0027s address book to its previous state.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo success!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to undo!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        model.undoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"radeon2525":31}},{"path":"src/main/java/seedu/address/logic/commands/UntagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":" * Deletes a tag from a person with its displayed index.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"            + \": Deletes the tag from contact identified by the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"            + \"Parameters: INDEX (must be a positive integer) tag: TAG... (can take multiple tags)\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"            + \"Example: \" + COMMAND_WORD + \"1 tag: friends\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Deleted tag %2$s from %1$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"    private final Index index;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"     * Creates a command to delete a {@code tag} from the person at {@code index}.","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"    public UntagCommand(Index index, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        this.tags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"    public CommandResult execute(Model model, CommandHistory history) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        var lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        if (index.getZeroBased() \u003e lastShownList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"        var personToUntag \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"        var untaggedPerson \u003d untag(personToUntag);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"        model.setPerson(personToUntag, untaggedPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"                MESSAGE_DELETE_TAG_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"                Messages.format(untaggedPerson),","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"                showTags(tags)));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"    private Person untag(Person personToUntag) throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"        var personTags \u003d new HashSet\u003cTag\u003e(personToUntag.getTags());","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"        validateAllTagsExist(personToUntag, personTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"        personTags.removeAll(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"        return new Person(","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"                personToUntag.getName(),","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"                personToUntag.getPhone(),","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"                personToUntag.getEmail(),","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"                personToUntag.getAddress(),","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"                personTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"    private void validateAllTagsExist(Person personToUntag, HashSet\u003cTag\u003e personTags) throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"        var missingTagNames \u003d tags","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"                .stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"                .filter((tag) -\u003e !personTags.contains(tag))","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"        if (!missingTagNames.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"            throw new CommandException(","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"                    String.format(","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"                            Messages.MESSAGE_MISSING_TAG,","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"                            personToUntag.getName(),","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"                            showTags(missingTagNames)));","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"miffi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"miffi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"miffi"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"miffi"},"content":"        if (other instanceof UntagCommand) {","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"miffi"},"content":"            UntagCommand obj \u003d (UntagCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"miffi"},"content":"            return index.equals(obj.index) \u0026\u0026 tags.equals(obj.tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"miffi"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"miffi"},"content":"    private static String showTags(Collection\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"miffi"},"content":"        return tags.stream().map((tag) -\u003e tag.tagName)","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"miffi"},"content":"                .sorted() // making the output order deterministic","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"miffi"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Derekljh":2,"radeon2525":3,"miffi":104}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.MailCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"        case UntagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"            return new UntagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"            return new RedoCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"Derekljh"},"content":"        case MailCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Derekljh"},"content":"            return new MailCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Derekljh":8,"radeon2525":8,"miffi":7,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"The-Dudeski"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"name:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"The-Dudeski"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"phone:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"The-Dudeski"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"email:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"The-Dudeski"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"address:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"The-Dudeski"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"The-Dudeski":5,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"            String[] indexTokens \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"            List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"            for (String indexToken : indexTokens) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"                Index index \u003d ParserUtil.parseIndex(indexToken);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"                indices.add(index);","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"            return new DeleteCommand(indices);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"radeon2525":12,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        // TODO: fix this code","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"        return new FilterCommand(null);","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"miffi":10,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/MailCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.MailCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"public class MailCommandParser implements Parser\u003cMailCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    public MailCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MailCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"        return new MailCommand(new TagContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Derekljh":7,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"     * and returns an TagCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        Collection\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"        return new TagCommand(index, tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Derekljh":38}},{"path":"src/main/java/seedu/address/logic/parser/UntagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":" * Parses input arguments and creates an UntagCommand.","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"public class UntagCommandParser implements Parser\u003cUntagCommand\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    public UntagCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TAG);","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"        var tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"        return new UntagCommand(index, tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"miffi":28}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"import seedu.address.commons.util.InvalidationListenerManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"public class AddressBook implements ReadOnlyAddressBook, Observable {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"    final InvalidationListenerManager invalidationListenerManager \u003d new InvalidationListenerManager();","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        indicateModified();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"        indicateModified();","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"        indicateModified();","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"        indicateModified();","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"     * Notifies listeners that the address book has been modified.","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"    public void indicateModified() {","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.callListeners(this);","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"radeon2525"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"radeon2525"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.removeListener(listener);","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"radeon2525":27,"-":123}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"    void undoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"    void redoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"     * Saves the current address book state for undo/redo.","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"radeon2525"},"content":"    void commitAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"radeon2525":14,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"    private final VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        super();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"        //this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(versionedAddressBook.getPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        //filteredPersons.addListener(this::ensureSelectedPersonIsValid);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.resetData(addressBook);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"        return versionedAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"        return versionedAddressBook.hasPerson(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.removePerson(target);","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.addPerson(person);","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo/Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"        return versionedAddressBook.canUndo();","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"radeon2525"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"radeon2525"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"radeon2525"},"content":"        return versionedAddressBook.canRedo();","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"radeon2525"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"radeon2525"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"radeon2525"},"content":"        return versionedAddressBook.equals(otherModelManager.versionedAddressBook)","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"radeon2525":43,"-":138}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"radeon2525":1,"-":17}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":" * {@code AddressBook} that keeps track of its own history.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"    private final List\u003cReadOnlyAddressBook\u003e addressBookStateList;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    private int currentStatePointer;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    private final List\u003cPerson\u003e personList;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"    private List\u003cPerson\u003e archivedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"     * {@code AddressBook} that keeps track of its own history.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook initialState) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"        super(initialState);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"        addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        addressBookStateList.add(new AddressBook(initialState));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"        personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"     * Saves a copy of the current {@code AddressBook} state at the end of the state list.","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"     * Undone states are removed from the state list.","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"    public void commit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"        removeStatesAfterCurrentPointer();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        addressBookStateList.add(new AddressBook(this));","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        //indicateModified();","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"    private void removeStatesAfterCurrentPointer() {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        addressBookStateList.subList(currentStatePointer + 1, addressBookStateList.size()).clear();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"     * Restores the address book to its previous state.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"    public void undo() {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        if (!canUndo()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"            throw new NoUndoableStateException();","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"        currentStatePointer--;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"     * Restores the address book to its previously undone state.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"    public void redo() {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"        if (!canRedo()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"            throw new NoRedoableStateException();","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"     * Returns true if {@code undo()} has address book states to undo.","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"    public boolean canUndo() {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"     * Returns true if {@code redo()} has address book states to redo.","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"    public boolean canRedo() {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"        return currentStatePointer \u003c addressBookStateList.size() - 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"radeon2525"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"radeon2525"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"        if (!(other instanceof VersionedAddressBook)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook otherVersionedAddressBook \u003d (VersionedAddressBook) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"        // state check","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"        return super.equals(otherVersionedAddressBook)","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"radeon2525"},"content":"                \u0026\u0026 addressBookStateList.equals(otherVersionedAddressBook.addressBookStateList)","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"radeon2525"},"content":"                \u0026\u0026 currentStatePointer \u003d\u003d otherVersionedAddressBook.currentStatePointer;","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"radeon2525"},"content":"     * Thrown when trying to {@code undo()} but can\u0027t.","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"    public static class NoUndoableStateException extends RuntimeException {","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"        private NoUndoableStateException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"radeon2525"},"content":"            super(\"Current state pointer at start of addressBookState list, unable to undo.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"radeon2525"},"content":"     * Thrown when trying to {@code redo()} but can\u0027t.","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"radeon2525"},"content":"    public static class NoRedoableStateException extends RuntimeException {","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"radeon2525"},"content":"        private NoRedoableStateException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"radeon2525"},"content":"            super(\"Current state pointer at end of addressBookState list, unable to redo.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"radeon2525":124}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"        builder.append(getName())","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"radeon2525"},"content":"                .append(\" Phone: \")","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"radeon2525"},"content":"                .append(getPhone())","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"radeon2525"},"content":"                .append(\" Email: \")","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"radeon2525"},"content":"                .append(getEmail())","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"                .append(\" Address: \")","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"radeon2525"},"content":"                .append(getAddress())","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"                .append(\" Tags: \");","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"radeon2525"},"content":"        getTags().forEach(builder::append);","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"radeon2525"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"radeon2525":11,"-":108}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"                .anyMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Derekljh":45}},{"path":"src/main/java/seedu/address/model/person/predicate/ComponentExistencePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":" * A component that filters based on the existence of a nullable component of {@link Person}","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"public abstract class ComponentExistencePredicate implements ComponentPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"    private final Component component;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"     * The type of nullable components in {@link Person}","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"    public enum Component {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"        Tags","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    public ComponentExistencePredicate(Component component) {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"        this.component \u003d component;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    protected boolean exists(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"        switch (component) {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"        case Tags:","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"            return !person.getTags().isEmpty();","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"        default:","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + component);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the component is non-empty.","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    public static class Some extends ComponentExistencePredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"        public Some(Component component) {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"            super(component);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"            return exists(person);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the component is empty","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"    public static class None extends ComponentExistencePredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"        public None(Component component) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"            super(component);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"            return !exists(person);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"miffi":58}},{"path":"src/main/java/seedu/address/model/person/predicate/ComponentPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" * A predicate to filter a specific component of a Person class that can be treated like a string.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":" *     In the case of singular values, this means the predicate has to match.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":" *     However, with aggregate values such as tags, it\u0027s a success if any one of the elements match.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"public interface ComponentPredicate extends Predicate\u003cPerson\u003e {}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"miffi":14}},{"path":"src/main/java/seedu/address/model/person/predicate/ComponentStringPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":" * A predicate to filter a specific component of a Person class that can be treated like a string.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":" * The matching is case-insensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"public abstract class ComponentStringPredicate implements ComponentPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    private final String input;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    private final Component component;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"     * The available components in a {@link Person} class that can be searched through like a string.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    public enum Component {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"        Name,","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"        Address,","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"        Email,","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"        Tags,","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        Phone,","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"     * Constructs a component predicate.","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"     * @param input     The input to match with.","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"     * @param component The component to match on.","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"    public ComponentStringPredicate(String input, Component component) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        requireAllNonNull(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        assert !input.trim().isEmpty() : \"Input should not be empty\";","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"        this.input \u003d input.toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        this.component \u003d component;","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"    protected String getInput() {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"        return input;","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"    protected Pattern makeWordsPattern() {","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"        String alternatives \u003d Arrays.stream(input.split(\" \"))","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"                .map(Pattern::quote)","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"                .collect(Collectors.joining(\"|\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"        return Pattern.compile(String.format(\"\\\\b(%s)\\\\b\", alternatives));","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"     * Extracts the required component\u0027s values from the person.","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"     * @return All matchable values in the component.","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"    // TODO: Remove the indirection and create a Component abstract class for component values.","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"    // Determer is crying from looking at this code ngl.","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"    protected Stream\u003cString\u003e extract(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"        Stream\u003cString\u003e stream;","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"        switch (component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"        case Name:","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"            stream \u003d Stream.of(person.getName().fullName);","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"        case Email:","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"            stream \u003d Stream.of(person.getEmail().value);","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"        case Phone:","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"            stream \u003d Stream.of(person.getPhone().value);","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"        case Tags:","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"            stream \u003d person.getTags().stream().map(tag -\u003e tag.tagName);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"        case Address:","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"            stream \u003d Stream.of(person.getAddress().value);","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"        default:","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + component);","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"        return stream.map(String::toLowerCase);","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the component in Person is exactly equal to given input.","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"miffi"},"content":"    public static class Is extends ComponentStringPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"miffi"},"content":"        public Is(String input, Component component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"miffi"},"content":"            super(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"miffi"},"content":"            String input \u003d getInput();","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"miffi"},"content":"            return extract(person).anyMatch(str -\u003e str.equals(input));","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the component in Person is not equal to the given input.","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"miffi"},"content":"    public static class Isnt extends ComponentStringPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"miffi"},"content":"        public Isnt(String input, Component component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"miffi"},"content":"            super(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"miffi"},"content":"            String input \u003d getInput();","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"miffi"},"content":"            return extract(person).anyMatch(str -\u003e !str.equals(input));","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the component contains the given input.","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"miffi"},"content":"     * This is basically the same as a substring match.","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"miffi"},"content":"    public static class Has extends ComponentStringPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"miffi"},"content":"        public Has(String input, Component component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"miffi"},"content":"            super(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"miffi"},"content":"            String input \u003d getInput();","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"miffi"},"content":"            return extract(person).anyMatch(str -\u003e str.contains(input));","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the component doesn\u0027t contain the given input.","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"miffi"},"content":"    public static class Hasnt extends ComponentStringPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"miffi"},"content":"        public Hasnt(String input, Component component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"miffi"},"content":"            super(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"miffi"},"content":"            String input \u003d getInput();","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"miffi"},"content":"            return extract(person).anyMatch(str -\u003e !str.contains(input));","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the component starts with the given input.","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"miffi"},"content":"    public static class StartsWith extends ComponentStringPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"miffi"},"content":"        public StartsWith(String input, Component component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"miffi"},"content":"            super(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"miffi"},"content":"            String input \u003d getInput();","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"miffi"},"content":"            return extract(person).anyMatch(str -\u003e str.startsWith(input));","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the component ends with the given input.","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"miffi"},"content":"    public static class EndsWith extends ComponentStringPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"miffi"},"content":"        public EndsWith(String input, Component component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"miffi"},"content":"            super(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"miffi"},"content":"            String input \u003d getInput();","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"miffi"},"content":"            return extract(person).anyMatch(str -\u003e str.endsWith(input));","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the given component contains any of the given words.","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"miffi"},"content":"     * This predicate splits its input into different words by whitespace and checks all the words individually.","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"miffi"},"content":"    public static class Word extends ComponentStringPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"miffi"},"content":"        public Word(String input, Component component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"miffi"},"content":"            super(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":189,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":190,"author":{"gitId":"miffi"},"content":"            var matcher \u003d makeWordsPattern().asPredicate();","lastModifiedDate":"2024-03-24"},{"lineNumber":191,"author":{"gitId":"miffi"},"content":"            return extract(person).anyMatch(matcher);","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":193,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":194,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":195,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":196,"author":{"gitId":"miffi"},"content":"     * A predicate that checks whether the given component doesn\u0027t contain any of the given words.","lastModifiedDate":"2024-03-24"},{"lineNumber":197,"author":{"gitId":"miffi"},"content":"     * This predicate splits its input into different words by whitespace and checks all the words individually.","lastModifiedDate":"2024-03-24"},{"lineNumber":198,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"miffi"},"content":"    public static class NoWord extends ComponentStringPredicate {","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"miffi"},"content":"        public NoWord(String input, Component component) {","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"miffi"},"content":"            super(input, component);","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":203,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":204,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":205,"author":{"gitId":"miffi"},"content":"        public boolean test(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"miffi"},"content":"            var matcher \u003d makeWordsPattern().asPredicate();","lastModifiedDate":"2024-03-24"},{"lineNumber":207,"author":{"gitId":"miffi"},"content":"            return extract(person).anyMatch(str -\u003e !matcher.test(str));","lastModifiedDate":"2024-03-24"},{"lineNumber":208,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":209,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":210,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"miffi":210}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"radeon2525":5,"-":85}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"The-Dudeski"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"The-Dudeski":4,"-":196}},{"path":"src/test/java/seedu/address/commons/util/InvalidationListenerManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"public class InvalidationListenerManagerTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"    private final SimpleObjectProperty\u003cObject\u003e dummyObservable \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    private final InvalidationListenerManager invalidationListenerManager \u003d new InvalidationListenerManager();","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"    private int counter;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    public void addListener_sameListenerOnce_listenerAdded() {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(observable -\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"            assertEquals(dummyObservable, observable);","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"            counter++;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"        });","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"        assertEquals(1, counter);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"    public void addListener_sameListenerTwice_listenerAddedTwice() {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        InvalidationListener listener \u003d observable -\u003e counter++;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        assertEquals(2, counter);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"    public void addListener_listenersBeingCalled_listenerNotCalled() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"        InvalidationListener listener1 \u003d observable -\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        };","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        InvalidationListener listener2 \u003d observable -\u003e invalidationListenerManager.addListener(listener1);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener2);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"    public void removeListener_singleListenerAdded_listenerRemoved() {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        InvalidationListener listener \u003d observable -\u003e counter++;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.removeListener(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"        assertEquals(0, counter);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"    public void removeListener_sameListenerAddedTwice_firstListenerRemoved() {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        InvalidationListener listener \u003d observable -\u003e counter++;","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.removeListener(listener);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        assertEquals(1, counter);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"    public void removeListener_listenersBeingCalled_listenerStillCalled() {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        InvalidationListener listener1 \u003d observable -\u003e counter++;","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"        InvalidationListener listener2 \u003d observable -\u003e invalidationListenerManager.removeListener(listener1);","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener2);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.addListener(listener1);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"        assertEquals(1, counter);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"radeon2525":72}},{"path":"src/test/java/seedu/address/logic/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory history;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"        history \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    public void constructor_withCommandHistory_copiesCommandHistory() {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"        final CommandHistory commandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"        commandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"        assertEquals(commandHistoryWithA, new CommandHistory(commandHistoryWithA));","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    public void add() {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        final String validCommand \u003d \"clear\";","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"        final String invalidCommand \u003d \"adds Bob\";","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"        history.add(validCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"        history.add(invalidCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"        assertEquals(Arrays.asList(validCommand, invalidCommand), history.getHistory());","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"        final CommandHistory commandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"        commandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        final CommandHistory anotherCommandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        anotherCommandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        final CommandHistory commandHistoryWithB \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        commandHistoryWithB.add(\"b\");","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        assertTrue(commandHistoryWithA.equals(commandHistoryWithA));","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        assertTrue(commandHistoryWithA.equals(anotherCommandHistoryWithA));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        assertFalse(commandHistoryWithA.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"        assertFalse(commandHistoryWithA.equals(5.0f));","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"        assertFalse(commandHistoryWithA.equals(commandHistoryWithB));","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"    public void hashcode() {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"        final CommandHistory commandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"        commandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"        final CommandHistory anotherCommandHistoryWithA \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"        anotherCommandHistoryWithA.add(\"a\");","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"        final CommandHistory commandHistoryWithB \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"        commandHistoryWithB.add(\"b\");","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"        assertEquals(commandHistoryWithA.hashCode(), anotherCommandHistoryWithA.hashCode());","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"        // different values -\u003e returns different hashcode","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"        assertNotEquals(commandHistoryWithA.hashCode(), commandHistoryWithB.hashCode());","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"radeon2525":79}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"JukeBoxK"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_EMPTY, model);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"radeon2525":1,"JukeBoxK":1,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model, commandHistory,","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(new AddCommand(personInList), model, commandHistory,","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"radeon2525":7,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    private static final CommandHistory EMPTY_COMMAND_HISTORY \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    private static final Person ALICE \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub, commandHistory);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"                addCommand.execute(modelStub, commandHistory));","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"        assertThrows(NullPointerException.class, () -\u003e addCommand.execute(null, commandHistory));","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"radeon2525"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"radeon2525"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"radeon2525"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"radeon2525"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"radeon2525"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"radeon2525"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"radeon2525"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"radeon2525"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"radeon2525"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"radeon2525"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"radeon2525"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"radeon2525"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"radeon2525"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"radeon2525"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"radeon2525"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"radeon2525"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"radeon2525"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"radeon2525"},"content":"            // called by {@code AddCommand#execute()}","lastModifiedDate":"2024-03-18"},{"lineNumber":242,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"radeon2525":51,"-":199}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new ClearCommand(), model, commandHistory, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new ClearCommand(), model, commandHistory, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"radeon2525":6,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandHistory history,","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"                                            CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"        CommandHistory expectedCommandHistory \u003d new CommandHistory(history);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"            CommandResult result \u003d command.execute(actualModel, history);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"radeon2525"},"content":"            assertEquals(expectedCommandHistory, history);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandHistory, CommandResult, Model)}","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel,","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"                                            CommandHistory history, String expectedMessage, Model expectedModel) {","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(command, actualModel, history, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"    public static void assertCommandFailure(Command command, Model actualModel,","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"                                            CommandHistory history, String expectedMessage) {","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"        CommandHistory expectedCommandHistory \u003d new CommandHistory(history);","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel, history));","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"radeon2525"},"content":"     * Deletes the first person in {@code model}\u0027s filtered list from {@code model}\u0027s address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"    public static void deleteFirstPerson(Model model) {","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"        model.deletePerson(firstPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"radeon2525":23,"-":119}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        indices.add(outOfBoundIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indices);","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(deleteCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        // Create a model with an empty person list","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"        CommandHistory history \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"        Index outOfBoundIndex \u003d Index.fromZeroBased(0);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"        indices.add(outOfBoundIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"        // Create a DeleteCommand with a list of indices","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indices);","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"        // Execute command and assert CommandException is thrown","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"        assertThrows(CommandException.class, () -\u003e deleteCommand.execute(model, history));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"        indices.add(outOfBoundIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indices);","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(deleteCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"radeon2525"},"content":"        indices1.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"radeon2525"},"content":"        indices2.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(indices1);","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(indices2);","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices1Copy \u003d new ArrayList\u003c\u003e(indices1);","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(indices1Copy);","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"radeon2525"},"content":"        // different indices -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"radeon2525"},"content":"        indices.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indices);","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"        String expected \u003d DeleteCommand.class.getSimpleName() + \"{targetIndices\u003d\" + indices + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"radeon2525"},"content":"    public void getSuccessMessage_validDeletedPersons_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"radeon2525"},"content":"        // Create a list of deleted persons","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"radeon2525"},"content":"        List\u003cPerson\u003e deletedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"radeon2525"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"radeon2525"},"content":"                .withEmail(\"alice@example.com\").withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"radeon2525"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"radeon2525"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"radeon2525"},"content":"                .withEmail(\"johnd@example.com\").withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"radeon2525"},"content":"                .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"radeon2525"},"content":"        deletedPersons.add(person1);","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"radeon2525"},"content":"        deletedPersons.add(person2);","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"radeon2525"},"content":"        // Create a list of corresponding indices","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"radeon2525"},"content":"        for (int i \u003d 0; i \u003c deletedPersons.size(); i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"            indices.add(Index.fromZeroBased(i));","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"        // Create DeleteCommand instance","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indices);","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"        // Call getSuccessMessage() method","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"        String successMessage \u003d deleteCommand.getSuccessMessage(deletedPersons);","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"radeon2525"},"content":"        // Define the expected message","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"radeon2525"},"content":"        String expectedMessage \u003d \"Deleted 2 People\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"                + \"Deleted Person: Alice Pauline\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"                + \"Alice Pauline Phone: 94351253 Email: alice@example.com Address: 123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"radeon2525"},"content":"                + \" Tags:\"","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"radeon2525"},"content":"                + \" [friends]\\n\" + \"Deleted Person: Benson Meier\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"radeon2525"},"content":"                + \"Benson Meier Phone: 98765432 Email: johnd@example.com Address: 311, Clementi Ave 2, #02-25 Tags:\"","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"radeon2525"},"content":"                + \" [owesMoney][friends]\";","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"radeon2525"},"content":"        // Assert that the generated message matches the expected message","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"radeon2525"},"content":"        assertEquals(expectedMessage, successMessage);","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"radeon2525":83,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(editCommand, model, commandHistory, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(editCommand, model, commandHistory, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"    private void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(editCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(editCommand, model, commandHistory, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"radeon2525":23,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new ExitCommand(), model, commandHistory, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"radeon2525":3,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"public class FilterCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    public void execute_missingKeywords_noPersonFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        ArrayList\u003cComponentPredicate\u003e predicate \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"                new ComponentStringPredicate.Word(\"Alcia\", ComponentStringPredicate.Component.Name)));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        expectedModel.updateFilteredPersonList(val -\u003e predicate.stream().anyMatch(pred -\u003e pred.test(val)));","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        ArrayList\u003cComponentPredicate\u003e predicate \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"                new ComponentStringPredicate.Word(\"Kurz Elle Kunz\", ComponentStringPredicate.Component.Name)));","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"        expectedModel.updateFilteredPersonList(val -\u003e predicate.stream().anyMatch(pred -\u003e pred.test(val)));","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"        ArrayList\u003cComponentPredicate\u003e predicate \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"                new ComponentStringPredicate.Is(\"hello\", ComponentStringPredicate.Component.Name)));","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"        String expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"radeon2525":4,"miffi":20,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new HelpCommand(), model, commandHistory, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"radeon2525":3,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new ListCommand(), model, commandHistory, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new ListCommand(), model, commandHistory, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"radeon2525":4,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/MailCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"public class MailCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    private CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"        MailCommand mailFirstCommand \u003d new MailCommand(firstPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"        MailCommand mailSecondCommand \u003d new MailCommand(secondPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"        assertTrue(mailFirstCommand.equals(mailFirstCommand));","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        MailCommand mailFirstCommandCopy \u003d new MailCommand(firstPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        assertTrue(mailFirstCommand.equals(mailFirstCommandCopy));","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"        assertFalse(mailFirstCommand.equals(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"        assertFalse(mailFirstCommand.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"        assertFalse(mailFirstCommand.equals(mailSecondCommand));","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"        String expectedMessage \u003d String.format(MailCommand.MESSAGE_EMAIL_CONTACT_EMPTY);","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"        MailCommand command \u003d new MailCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"        assertCommandSuccess(command, model, commandHistory, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"    private TagContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Derekljh":71}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstPerson;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"public class RedoCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    private final CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"        // set up of both models\u0027 undo/redo history","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        model.undoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        model.undoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"    public void execute() {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        // multiple redoable states in model","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"        // single redoable state in model","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        // no redoable state in model","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(new RedoCommand(), model, commandHistory, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"radeon2525":49}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":" * Contains integration tests (interactions with the Model) and unit tests for TagCommand.","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"class TagCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    private static final Tag TAG_OWES_MONEY \u003d new Tag(\"owesMoney\");","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"    private static final Tag TAG_FRIENDS \u003d new Tag(\"friends\");","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"    private static final Collection\u003cTag\u003e TAGS \u003d List.of(TAG_OWES_MONEY, TAG_FRIENDS);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"    private Model model;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"    public void init() {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TagCommand(null, null));","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"    public void execute_indexOutOfBounds_failure() {","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"        Index index \u003d Index.fromOneBased(999);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"        TagCommand command \u003d new TagCommand(index, TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(command, model, new CommandHistory(), expectedMessage);","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"    public void showTags_singleTag_returnsSingleTag() {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"        // Create a collection containing a single tag","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        Collection\u003cTag\u003e tags \u003d Arrays.asList(new Tag(\"friend\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        // Call the showTags method","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        String result \u003d TagCommand.showTags(tags);","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"        // Verify that the result is the same as the single tag","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"        assertEquals(\"friend\", result);","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"        final TagCommand standardCommand \u003d new TagCommand(INDEX_FIRST_PERSON, TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"        // same object -\u003e equal","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"        // same values -\u003e equal","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"        var commandWithSameValues \u003d new TagCommand(INDEX_FIRST_PERSON, TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"        // tags in different order -\u003e equal","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"        var tagsInDifferentOrder \u003d List.of(TAG_FRIENDS, TAG_OWES_MONEY);","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"        assertEquals(standardCommand, new TagCommand(INDEX_FIRST_PERSON, tagsInDifferentOrder));","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"Derekljh"},"content":"        // null -\u003e not equal","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Derekljh"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"Derekljh"},"content":"        // different index -\u003e not equal","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"Derekljh"},"content":"        assertNotEquals(standardCommand, new TagCommand(INDEX_SECOND_PERSON, TAGS));","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Derekljh"},"content":"        // different tags -\u003e not equal","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Derekljh"},"content":"        assertNotEquals(standardCommand, new TagCommand(INDEX_FIRST_PERSON, List.of(TAG_OWES_MONEY)));","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Derekljh":76,"radeon2525":16}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstPerson;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"public class UndoCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    private final CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"        // set up of models\u0027 undo/redo history","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"        deleteFirstPerson(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"        deleteFirstPerson(expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"    public void execute() {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"        // multiple undoable states in model","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        // single undoable state in model","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        assertCommandSuccess(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"        // no undoable states in model","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(new UndoCommand(), model, commandHistory, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"radeon2525":45}},{"path":"src/test/java/seedu/address/logic/commands/UntagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":" * Contains integration tests (interactions with the Model) and unit tests for UntagCommand.","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"class UntagCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"    private static final Tag TAG_OWES_MONEY \u003d new Tag(\"owesMoney\");","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    private static final Tag TAG_FRIENDS \u003d new Tag(\"friends\");","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    private static final Collection\u003cTag\u003e TAGS \u003d List.of(TAG_OWES_MONEY, TAG_FRIENDS);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    private Model model;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"    public void init() {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"    public void execute_tagMissing_failure() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"        var index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        var personName \u003d model.getFilteredPersonList().get(index.getZeroBased()).getName();","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"        var command \u003d new UntagCommand(index, TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        var expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"                Messages.MESSAGE_MISSING_TAG,","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"                personName,","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"                \"owesMoney\");","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(command, model, new CommandHistory(), expectedMessage);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"    public void execute_indexOutOfBounds_failure() {","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"        var index \u003d Index.fromOneBased(999);","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"        var command \u003d new UntagCommand(index, TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"        var expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        assertCommandFailure(command, model, new CommandHistory(), expectedMessage);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"        final UntagCommand standardCommand \u003d new UntagCommand(INDEX_FIRST_PERSON, TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"        // same object -\u003e equal","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"        // same values -\u003e equal","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"        var commandWithSameValues \u003d new UntagCommand(INDEX_FIRST_PERSON, TAGS);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"        // tags in different order -\u003e equal","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"        var tagsInDifferentOrder \u003d List.of(TAG_FRIENDS, TAG_OWES_MONEY);","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"        assertEquals(standardCommand, new UntagCommand(INDEX_FIRST_PERSON, tagsInDifferentOrder));","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"        // null -\u003e not equal","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"        // different types -\u003e not equal","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"        // different index -\u003e not equal","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"        assertNotEquals(standardCommand, new UntagCommand(INDEX_SECOND_PERSON, TAGS));","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"        // different tags -\u003e not equal","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"        assertNotEquals(standardCommand, new UntagCommand(INDEX_FIRST_PERSON, List.of(TAG_OWES_MONEY)));","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"radeon2525":3,"miffi":86}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.MailCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"    public void parseCommand_undoCommand_returnsUndoCommand() throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        Command command \u003d parser.parseCommand(\"undo\");","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        assertTrue(command instanceof UndoCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"    public void parseCommand_redoCommand_returnsRedoCommand() throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        Command command \u003d parser.parseCommand(\"redo\");","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        assertTrue(command instanceof RedoCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"        // Create a command with multiple indices separated by space","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"                        + \" \" + INDEX_SECOND_PERSON.getOneBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"        // Create a list containing the indices used to construct the command","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"        indices.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"        indices.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"        // Assert that the parsed command is equal to a command constructed with the same indices","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"radeon2525"},"content":"        assertEquals(new DeleteCommand(indices), command);","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"miffi"},"content":"        // TODO: fix this test after implementing frontend for filter","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"miffi"},"content":"        // List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"miffi"},"content":"        // FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"miffi"},"content":"        //         FilterCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"miffi"},"content":"        // assertEquals(new FilterCommand(null), command);","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"Derekljh"},"content":"    public void parseCommand_tag() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"Derekljh"},"content":"        TagCommand expectedCommand \u003d new TagCommand(INDEX_FIRST_PERSON, List.of(new Tag(\"alpha\"), new Tag(\"beta\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"Derekljh"},"content":"        assertEquals(expectedCommand, parser.parseCommand(TagCommand.COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"Derekljh"},"content":"                + \" \"","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"Derekljh"},"content":"                + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"The-Dudeski"},"content":"                + \" tag:alpha tag:beta\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"miffi"},"content":"    public void parseCommand_untag() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"miffi"},"content":"        var index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"miffi"},"content":"        var expectedCommand \u003d new UntagCommand(index, List.of(new Tag(\"alpha\"), new Tag(\"beta\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"miffi"},"content":"        assertEquals(expectedCommand, parser.parseCommand(UntagCommand.COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"miffi"},"content":"                + \" \"","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"miffi"},"content":"                + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"The-Dudeski"},"content":"                + \" tag:alpha tag:beta\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"Derekljh"},"content":"    public void parseCommand_mail() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"Derekljh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"friends\", \"owesMoney\");","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"Derekljh"},"content":"        MailCommand expectedCommand \u003d (MailCommand) parser.parseCommand(","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"Derekljh"},"content":"                MailCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new MailCommand(new TagContainsKeywordsPredicate(keywords)), expectedCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"The-Dudeski":2,"Derekljh":20,"radeon2525":30,"miffi":15,"-":91}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    private static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"    private static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-1\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"abc\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"radeon2525":15,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"        // TODO: redo this test after Filter Parser is done","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        //// no leading and trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"        // FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"        //         new FilterCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"        // assertParseSuccess(parser, \"Alice Bob\", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"        // // multiple whitespaces between keywords","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        // assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"miffi":12,"-":19}},{"path":"src/test/java/seedu/address/logic/parser/MailCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.MailCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"public class MailCommandParserTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    private MailCommandParser parser \u003d new MailCommandParser();","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"                MailCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"        MailCommand expectedMailCommand \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"                new MailCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"friends\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        assertParseSuccess(parser, \"friends\", expectedMailCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        assertParseSuccess(parser, \" \\n friends  \\t\", expectedMailCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Derekljh":11,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"class TagCommandParserTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"    private static final Tag TAG1 \u003d new Tag(\"friend\");","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    private static final Tag TAG2 \u003d new Tag(\"husband\");","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    private static final Collection\u003cTag\u003e TAGS \u003d List.of(TAG1, TAG2);","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    private final TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    public void parse_validArgs_returnsTagCommand() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"        var index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        assertParseSuccess(parser, index.getOneBased() + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"                new TagCommand(index, TAGS));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"        // order should not matter","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"        assertParseSuccess(parser, index.getOneBased() + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"                new TagCommand(index, TAGS));","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"        // one tag","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"        assertParseSuccess(parser, index.getOneBased() + TAG_DESC_HUSBAND,","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"                new TagCommand(index, List.of(TAG2)));","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"        // no tags given","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"        // no index given","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"        assertParseFailure(parser, \"t/friend\",","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Derekljh":54}},{"path":"src/test/java/seedu/address/logic/parser/UntagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"class UntagCommandParserTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    private static final Tag TAG1 \u003d new Tag(\"friend\");","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    private static final Tag TAG2 \u003d new Tag(\"husband\");","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"    private static final Collection\u003cTag\u003e TAGS \u003d List.of(TAG1, TAG2);","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    private final UntagCommandParser parser \u003d new UntagCommandParser();","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    public void parse_validArgs_returnsUntagCommand() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"        var index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"        assertParseSuccess(parser, index.getOneBased() + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"                new UntagCommand(index, TAGS));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"        // order should not matter","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        assertParseSuccess(parser, index.getOneBased() + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"                new UntagCommand(index, TAGS));","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        // one tag","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"        assertParseSuccess(parser, index.getOneBased() + TAG_DESC_HUSBAND,","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"                new UntagCommand(index, List.of(TAG2)));","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"        // no tags given","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"        // no index given","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"        assertParseFailure(parser, \"t/friend\",","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"miffi":54}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"import seedu.address.commons.util.InvalidationListenerManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"    public void removeListener_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        InvalidationListenerManager manager \u003d addressBook.invalidationListenerManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        // Create a listener","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        InvalidationListener listener \u003d new InvalidationListener() {","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"            @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"            public void invalidated(Observable observable) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"                // Do nothing","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"        };","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"        // Remove the listener","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        addressBook.removeListener(listener);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        // Ensure the listener is removed","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        assertFalse(manager.listeners.contains(listener));","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"    public void addListener_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"        InvalidationListenerManager manager \u003d addressBook.invalidationListenerManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"        // Create a listener","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"        TestInvalidationListener listener \u003d new TestInvalidationListener();","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"        // Add the listener","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"        addressBook.addListener(listener);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"        // Trigger an invalidation event","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"        addressBook.indicateModified();","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"        // Ensure the listener is notified","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"        assertTrue(listener.isInvalidated());","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"radeon2525"},"content":"    // Define a test InvalidationListener implementation","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"    private static class TestInvalidationListener implements InvalidationListener {","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"radeon2525"},"content":"        private boolean invalidated \u003d false;","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"radeon2525"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"        public void invalidated(Observable observable) {","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"radeon2525"},"content":"            invalidated \u003d true;","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"        public boolean isInvalidated() {","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"            return invalidated;","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"radeon2525":56,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"    public void setPerson_personInAddressBook_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        // Create initial state","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        ReadOnlyAddressBook initialAddressBook \u003d modelManager.getAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        ReadOnlyUserPrefs initialUserPrefs \u003d modelManager.getUserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        // Add a valid person to the address book","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        modelManager.addPerson(validPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        // Create an edited version of the person","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        Person editedPerson \u003d new PersonBuilder(validPerson).withName(\"New Name\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"        // Set edited person in the model","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        modelManager.setPerson(validPerson, editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        // Check if the edited person is in the filteredPersons list","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"        assertEquals(editedPerson, modelManager.getFilteredPersonList().get(0));","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        assertNotEquals(validPerson, modelManager.getFilteredPersonList().get(0));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"        // Ensure that the address book\u0027s state was not changed","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"        assertEquals(initialAddressBook, modelManager.getAddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"        // Ensure that the user prefs remain unchanged","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        assertEquals(initialUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"radeon2525"},"content":"    public void constructor_validArguments_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"radeon2525"},"content":"        // Create a ReadOnlyAddressBook with typical persons","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"radeon2525"},"content":"        ReadOnlyAddressBook addressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"        // Create a ReadOnlyUserPrefs with typical preferences","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"radeon2525"},"content":"        ReadOnlyUserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"        // Create a ModelManager instance using the constructor with arguments","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"        ModelManager modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"        // Verify that the versionedAddressBook is correctly initialized with the data from the ReadOnlyAddressBook","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"        assertEquals(addressBook, modelManager.getAddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"radeon2525"},"content":"        // Verify that the userPrefs is correctly initialized with the data from the ReadOnlyUserPrefs","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"radeon2525"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"        assertTrue(modelManager.getFilteredPersonList().containsAll(addressBook.getPersonList()));","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"radeon2525"},"content":"    public void setUserPrefs_validUserPrefs_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"radeon2525"},"content":"        // Create initial user preferences","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"radeon2525"},"content":"        UserPrefs initialUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"radeon2525"},"content":"        // Create a new set of user preferences","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"radeon2525"},"content":"        UserPrefs newUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"radeon2525"},"content":"        GuiSettings defaultGuiSettings \u003d new GuiSettings(800, 600, 0, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"radeon2525"},"content":"        newUserPrefs.setGuiSettings(defaultGuiSettings);","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"radeon2525"},"content":"        // Create a ModelManager instance","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"radeon2525"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"radeon2525"},"content":"        // Set the user preferences","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"radeon2525"},"content":"        modelManager.setUserPrefs(newUserPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"radeon2525"},"content":"        // Verify that the user preferences in the ModelManager are updated","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"radeon2525"},"content":"        ReadOnlyUserPrefs retrievedUserPrefs \u003d modelManager.getUserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"radeon2525"},"content":"        assertEquals(newUserPrefs, retrievedUserPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"radeon2525":73,"-":132}},{"path":"src/test/java/seedu/address/model/VersionedAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"public class VersionedAddressBookTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"    private final ReadOnlyAddressBook addressBookWithAmy \u003d new AddressBookBuilder().withPerson(AMY).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    private final ReadOnlyAddressBook addressBookWithBob \u003d new AddressBookBuilder().withPerson(BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    private final ReadOnlyAddressBook addressBookWithCarl \u003d new AddressBookBuilder().withPerson(CARL).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"    private final ReadOnlyAddressBook emptyAddressBook \u003d new AddressBookBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"    public void commit_singleAddressBook_noStatesRemovedCurrentStateSaved() {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"                Collections.singletonList(emptyAddressBook),","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"                Collections.emptyList());","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"    public void equals_sameInstance_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        assertTrue(versionedAddressBook.equals(versionedAddressBook));","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.equals(new Object()));","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"    public void equals_differentState_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook1 \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook2 \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook2.commit();","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook1.equals(versionedAddressBook2));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"    public void equals_sameState_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook1 \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook2 \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"        assertTrue(versionedAddressBook1.equals(versionedAddressBook2));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"    public void commit_multipleAddressBookPointerAtEndOfStateList_noStatesRemovedCurrentStateSaved() {","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"                Arrays.asList(emptyAddressBook, addressBookWithAmy, addressBookWithBob),","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"                addressBookWithBob,","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"                Collections.emptyList());","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"radeon2525"},"content":"    public void commit_multipleAddressBookPointerNotAtEndOfStateList_statesAfterPointerRemovedCurrentStateSaved() {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.commit();","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"                Collections.singletonList(emptyAddressBook),","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"                Collections.emptyList());","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"    public void canUndo_multipleAddressBookPointerAtEndOfStateList_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"radeon2525"},"content":"        assertTrue(versionedAddressBook.canUndo());","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"radeon2525"},"content":"    public void canUndo_multipleAddressBookPointerAtStartOfStateList_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"radeon2525"},"content":"        assertTrue(versionedAddressBook.canUndo());","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"    public void canUndo_singleAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.canUndo());","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"radeon2525"},"content":"    public void canUndo_multipleAddressBookPointerAtStartOfStateList_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.canUndo());","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"radeon2525"},"content":"    public void canRedo_multipleAddressBookPointerNotAtEndOfStateList_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"radeon2525"},"content":"        assertTrue(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"    public void canRedo_multipleAddressBookPointerAtStartOfStateList_returnsTrue() {","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"radeon2525"},"content":"        assertTrue(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"radeon2525"},"content":"    public void canRedo_singleAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"radeon2525"},"content":"    public void canRedo_multipleAddressBookPointerAtEndOfStateList_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"radeon2525"},"content":"    public void undo_multipleAddressBookPointerAtEndOfStateList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"radeon2525"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"radeon2525"},"content":"                Collections.singletonList(emptyAddressBook),","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"radeon2525"},"content":"                addressBookWithAmy,","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"radeon2525"},"content":"                Collections.singletonList(addressBookWithBob));","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"radeon2525"},"content":"    public void undo_multipleAddressBookPointerNotAtStartOfStateList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"radeon2525"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"radeon2525"},"content":"                Collections.emptyList(),","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"radeon2525"},"content":"                Arrays.asList(addressBookWithAmy, addressBookWithBob));","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"radeon2525"},"content":"    public void undo_singleAddressBook_throwsNoUndoableStateException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"radeon2525"},"content":"        assertThrows(VersionedAddressBook.NoUndoableStateException.class, versionedAddressBook::undo);","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"radeon2525"},"content":"    public void undo_multipleAddressBookPointerAtStartOfStateList_throwsNoUndoableStateException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"radeon2525"},"content":"        assertThrows(VersionedAddressBook.NoUndoableStateException.class, versionedAddressBook::undo);","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"radeon2525"},"content":"    public void redo_multipleAddressBookPointerNotAtEndOfStateList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"radeon2525"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"radeon2525"},"content":"                Arrays.asList(emptyAddressBook, addressBookWithAmy),","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"radeon2525"},"content":"                addressBookWithBob,","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"radeon2525"},"content":"                Collections.emptyList());","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"radeon2525"},"content":"    public void redo_multipleAddressBookPointerAtStartOfStateList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 2);","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"radeon2525"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"radeon2525"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"radeon2525"},"content":"                Collections.singletonList(emptyAddressBook),","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"radeon2525"},"content":"                addressBookWithAmy,","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"radeon2525"},"content":"                Collections.singletonList(addressBookWithBob));","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"radeon2525"},"content":"    public void redo_singleAddressBook_throwsNoRedoableStateException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(emptyAddressBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"radeon2525"},"content":"        assertThrows(VersionedAddressBook.NoRedoableStateException.class, versionedAddressBook::redo);","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"radeon2525"},"content":"    public void redo_multipleAddressBookPointerAtEndOfStateList_throwsNoRedoableStateException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":237,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":238,"author":{"gitId":"radeon2525"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":239,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":240,"author":{"gitId":"radeon2525"},"content":"        assertThrows(VersionedAddressBook.NoRedoableStateException.class, versionedAddressBook::redo);","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":242,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":243,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"radeon2525"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":245,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d prepareAddressBookList(addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"radeon2525"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook copy \u003d prepareAddressBookList(addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"radeon2525"},"content":"        assertTrue(versionedAddressBook.equals(copy));","lastModifiedDate":"2024-03-19"},{"lineNumber":250,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"radeon2525"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":252,"author":{"gitId":"radeon2525"},"content":"        assertTrue(versionedAddressBook.equals(versionedAddressBook));","lastModifiedDate":"2024-03-19"},{"lineNumber":253,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":254,"author":{"gitId":"radeon2525"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":255,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":256,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":257,"author":{"gitId":"radeon2525"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":258,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.equals(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":259,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":260,"author":{"gitId":"radeon2525"},"content":"        // different state list -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":261,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook differentAddressBookList \u003d prepareAddressBookList(addressBookWithBob, addressBookWithCarl);","lastModifiedDate":"2024-03-19"},{"lineNumber":262,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.equals(differentAddressBookList));","lastModifiedDate":"2024-03-19"},{"lineNumber":263,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":264,"author":{"gitId":"radeon2525"},"content":"        // different current pointer index -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":265,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook differentCurrentStatePointer \u003d prepareAddressBookList(","lastModifiedDate":"2024-03-19"},{"lineNumber":266,"author":{"gitId":"radeon2525"},"content":"                addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2024-03-19"},{"lineNumber":267,"author":{"gitId":"radeon2525"},"content":"        shiftCurrentStatePointerLeftwards(versionedAddressBook, 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":268,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.equals(differentCurrentStatePointer));","lastModifiedDate":"2024-03-19"},{"lineNumber":269,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":270,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":271,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":272,"author":{"gitId":"radeon2525"},"content":"     * Asserts that {@code versionedAddressBook} is currently pointing at {@code expectedCurrentState},","lastModifiedDate":"2024-03-19"},{"lineNumber":273,"author":{"gitId":"radeon2525"},"content":"     * states before {@code versionedAddressBook#currentStatePointer} is equal to {@code expectedStatesBeforePointer},","lastModifiedDate":"2024-03-19"},{"lineNumber":274,"author":{"gitId":"radeon2525"},"content":"     * and states after {@code versionedAddressBook#currentStatePointer} is equal to {@code expectedStatesAfterPointer}.","lastModifiedDate":"2024-03-19"},{"lineNumber":275,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":276,"author":{"gitId":"radeon2525"},"content":"    private void assertAddressBookListStatus(VersionedAddressBook versionedAddressBook,","lastModifiedDate":"2024-03-19"},{"lineNumber":277,"author":{"gitId":"radeon2525"},"content":"                                             List\u003cReadOnlyAddressBook\u003e expectedStatesBeforePointer,","lastModifiedDate":"2024-03-19"},{"lineNumber":278,"author":{"gitId":"radeon2525"},"content":"                                             ReadOnlyAddressBook expectedCurrentState,","lastModifiedDate":"2024-03-19"},{"lineNumber":279,"author":{"gitId":"radeon2525"},"content":"                                             List\u003cReadOnlyAddressBook\u003e expectedStatesAfterPointer) {","lastModifiedDate":"2024-03-19"},{"lineNumber":280,"author":{"gitId":"radeon2525"},"content":"        // check state currently pointing at is correct","lastModifiedDate":"2024-03-19"},{"lineNumber":281,"author":{"gitId":"radeon2525"},"content":"        assertEquals(new AddressBook(versionedAddressBook), expectedCurrentState);","lastModifiedDate":"2024-03-19"},{"lineNumber":282,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":283,"author":{"gitId":"radeon2525"},"content":"        // shift pointer to start of state list","lastModifiedDate":"2024-03-19"},{"lineNumber":284,"author":{"gitId":"radeon2525"},"content":"        while (versionedAddressBook.canUndo()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":285,"author":{"gitId":"radeon2525"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2024-03-19"},{"lineNumber":286,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":287,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":288,"author":{"gitId":"radeon2525"},"content":"        // check states before pointer are correct","lastModifiedDate":"2024-03-19"},{"lineNumber":289,"author":{"gitId":"radeon2525"},"content":"        for (ReadOnlyAddressBook expectedAddressBook : expectedStatesBeforePointer) {","lastModifiedDate":"2024-03-19"},{"lineNumber":290,"author":{"gitId":"radeon2525"},"content":"            assertEquals(expectedAddressBook, new AddressBook(versionedAddressBook));","lastModifiedDate":"2024-03-19"},{"lineNumber":291,"author":{"gitId":"radeon2525"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2024-03-19"},{"lineNumber":292,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":293,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":294,"author":{"gitId":"radeon2525"},"content":"        // check states after pointer are correct","lastModifiedDate":"2024-03-19"},{"lineNumber":295,"author":{"gitId":"radeon2525"},"content":"        for (ReadOnlyAddressBook expectedAddressBook : expectedStatesAfterPointer) {","lastModifiedDate":"2024-03-19"},{"lineNumber":296,"author":{"gitId":"radeon2525"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2024-03-19"},{"lineNumber":297,"author":{"gitId":"radeon2525"},"content":"            assertEquals(expectedAddressBook, new AddressBook(versionedAddressBook));","lastModifiedDate":"2024-03-19"},{"lineNumber":298,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":299,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":300,"author":{"gitId":"radeon2525"},"content":"        // check that there are no more states after pointer","lastModifiedDate":"2024-03-19"},{"lineNumber":301,"author":{"gitId":"radeon2525"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2024-03-19"},{"lineNumber":302,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":303,"author":{"gitId":"radeon2525"},"content":"        // revert pointer to original position","lastModifiedDate":"2024-03-19"},{"lineNumber":304,"author":{"gitId":"radeon2525"},"content":"        expectedStatesAfterPointer.forEach(unused -\u003e versionedAddressBook.undo());","lastModifiedDate":"2024-03-19"},{"lineNumber":305,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":306,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":307,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":308,"author":{"gitId":"radeon2525"},"content":"     * Creates and returns a {@code VersionedAddressBook} with the {@code addressBookStates} added into it, and the","lastModifiedDate":"2024-03-19"},{"lineNumber":309,"author":{"gitId":"radeon2525"},"content":"     * {@code VersionedAddressBook#currentStatePointer} at the end of list.","lastModifiedDate":"2024-03-19"},{"lineNumber":310,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":311,"author":{"gitId":"radeon2525"},"content":"    private VersionedAddressBook prepareAddressBookList(ReadOnlyAddressBook... addressBookStates) {","lastModifiedDate":"2024-03-19"},{"lineNumber":312,"author":{"gitId":"radeon2525"},"content":"        assertFalse(addressBookStates.length \u003d\u003d 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":313,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":314,"author":{"gitId":"radeon2525"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(addressBookStates[0]);","lastModifiedDate":"2024-03-19"},{"lineNumber":315,"author":{"gitId":"radeon2525"},"content":"        for (int i \u003d 1; i \u003c addressBookStates.length; i++) {","lastModifiedDate":"2024-03-19"},{"lineNumber":316,"author":{"gitId":"radeon2525"},"content":"            versionedAddressBook.resetData(addressBookStates[i]);","lastModifiedDate":"2024-03-19"},{"lineNumber":317,"author":{"gitId":"radeon2525"},"content":"            versionedAddressBook.commit();","lastModifiedDate":"2024-03-19"},{"lineNumber":318,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":319,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":320,"author":{"gitId":"radeon2525"},"content":"        return versionedAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":321,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":322,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":323,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":324,"author":{"gitId":"radeon2525"},"content":"     * Shifts the {@code versionedAddressBook#currentStatePointer} by {@code count} to the left of its list.","lastModifiedDate":"2024-03-19"},{"lineNumber":325,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":326,"author":{"gitId":"radeon2525"},"content":"    private void shiftCurrentStatePointerLeftwards(VersionedAddressBook versionedAddressBook, int count) {","lastModifiedDate":"2024-03-19"},{"lineNumber":327,"author":{"gitId":"radeon2525"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2024-03-19"},{"lineNumber":328,"author":{"gitId":"radeon2525"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2024-03-19"},{"lineNumber":329,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":330,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":331,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"radeon2525":331}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"        String expected \u003d ALICE.getName() + \" Phone: \" + ALICE.getPhone()","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"                + \" Email: \" + ALICE.getEmail() + \" Address: \" + ALICE.getAddress() + \" Tags: [friends]\";","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"radeon2525"},"content":"    public void samePersonObject_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"radeon2525"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"radeon2525"},"content":"        assertTrue(person.isSamePerson(person));","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"radeon2525"},"content":"    public void nullPerson_returnsFalse() {","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"radeon2525"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"radeon2525"},"content":"        assertFalse(person.isSamePerson(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"    public void differentPerson_returnsFalse() {","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"radeon2525"},"content":"        Person person1 \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"radeon2525"},"content":"        Person person2 \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"radeon2525"},"content":"        assertFalse(person1.isSamePerson(person2));","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"radeon2525"},"content":"    public void samePersonTagsDifferentOrder_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"radeon2525"},"content":"        Person person1 \u003d new PersonBuilder().withTags(\"friend\", \"colleague\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"radeon2525"},"content":"        Person person2 \u003d new PersonBuilder().withTags(\"colleague\", \"friend\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"radeon2525"},"content":"        assertTrue(person1.equals(person2));","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"radeon2525":30,"-":97}},{"path":"src/test/java/seedu/address/model/person/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"friends\");","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"friends\", \"owesMoney\");","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"        // One keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"friends\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"        // Multiple keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"owesMoney\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"owesMoney\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"owesMoney\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"noMoney\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"fRieNds\", \"oWesMoney\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"owesMoney\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friends\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"owesMoney\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"        String expected \u003d TagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Derekljh":80}},{"path":"src/test/java/seedu/address/model/person/predicate/ComponentExistencePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import static seedu.address.model.person.predicate.ComponentExistencePredicate.Component;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import static seedu.address.model.person.predicate.ComponentExistencePredicate.None;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentExistencePredicate.Some;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"class ComponentExistencePredicateTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    private static final Component STUBBED_COMPONENT \u003d Component.Tags;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"    private final Set\u003cTag\u003e nonEmpty \u003d new HashSet\u003c\u003e(List.of(new Tag(\"hello\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    private final Set\u003cTag\u003e empty \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"     * A Person stub that is used to unit test ComponentExistencePredicate.","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    private static class PersonStub extends Person {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"        /**","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"         * @param tags The tags to test with.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"         */","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        public PersonStub(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"            super(new Name(\"something\"), new Phone(\"123\"), new Email(\"unnecessary@unnecessary.com\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"                    new Address(\"somewhere\"), tags);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        public Name getName() {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        public Phone getPhone() {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"        public Email getEmail() {","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"        public Address getAddress() {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"        public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"        public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"        public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"    public class SomeTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"        private final Some some \u003d new Some(STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"        void test_exists_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"            assertTrue(some.test(new PersonStub(nonEmpty)));","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"miffi"},"content":"        void test_doesNotExist_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"miffi"},"content":"            assertFalse(some.test(new PersonStub(empty)));","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"miffi"},"content":"    public class NoneTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"miffi"},"content":"        private final None none \u003d new None(STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"miffi"},"content":"        void test_exists_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"miffi"},"content":"            assertFalse(none.test(new PersonStub(nonEmpty)));","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"miffi"},"content":"        void test_doesNotExist_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"miffi"},"content":"            assertTrue(none.test(new PersonStub(empty)));","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"miffi":111}},{"path":"src/test/java/seedu/address/model/person/predicate/ComponentStringPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Nested;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.Component;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.EndsWith;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.Has;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.Hasnt;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.Is;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.Isnt;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.NoWord;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.StartsWith;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"import seedu.address.model.person.predicate.ComponentStringPredicate.Word;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"class ComponentStringPredicateTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    private static final Component STUBBED_COMPONENT \u003d Component.Address;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"     * A Person stub that is used to check ComponentStringPredicate\u0027s general","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"     * input manipulation functions.","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"    private static class PersonStub extends Person {","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        /**","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"         * Address is used because it has the least number of restrictions.","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"         *","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"         * @param address The test address","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"         */","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"        public PersonStub(String address) {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"            super(new Name(\"something\"), new Phone(\"123\"), new Email(\"unnecessary@unnecessary.com\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"                    new Address(address), new HashSet\u003cTag\u003e(List.of(new Tag(\"unnecessary\"))));","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"        public Name getName() {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"        public Phone getPhone() {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"        public Email getEmail() {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"        public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"        public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"        public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"        public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"            throw new AssertionError(\"This should not be called\");","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"miffi"},"content":"    void getInput_normalInput_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"miffi"},"content":"        var predicate \u003d new Is(\"wow\", Component.Name);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"miffi"},"content":"        assertEquals(predicate.getInput(), \"wow\");","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"miffi"},"content":"    void constructor_emptyInput_assertionErrorThrown() {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"miffi"},"content":"        assertThrows(AssertionError.class, () -\u003e new Is(\"  \", Component.Name));","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"miffi"},"content":"        assertThrows(AssertionError.class, () -\u003e new Is(\"\", Component.Name));","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"miffi"},"content":"    void extract() {","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"miffi"},"content":"        final var name \u003d \"someone\";","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"miffi"},"content":"        final var phone \u003d \"123\";","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"miffi"},"content":"        final var email \u003d \"someone@somesite.com\";","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"miffi"},"content":"        final var address \u003d \"somewhere\";","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"miffi"},"content":"        final var tag \u003d \"unnecessary\";","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"miffi"},"content":"        var testPerson \u003d new Person(new Name(name), new Phone(phone), new Email(email),","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"miffi"},"content":"                new Address(address), new HashSet\u003c\u003e(List.of(new Tag(tag))));","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"miffi"},"content":"        assertTrue(new Is(name, Component.Name).test(testPerson));","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"miffi"},"content":"        assertTrue(new Is(phone, Component.Phone).test(testPerson));","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"miffi"},"content":"        assertTrue(new Is(email, Component.Email).test(testPerson));","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"miffi"},"content":"        assertTrue(new Is(address, Component.Address).test(testPerson));","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"miffi"},"content":"        assertTrue(new Is(tag, Component.Tags).test(testPerson));","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"miffi"},"content":"    class IsTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"miffi"},"content":"        private final Is is \u003d new Is(\"test\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"miffi"},"content":"        void test_exactMatch_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"miffi"},"content":"            assertTrue(is.test(new PersonStub(\"test\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"miffi"},"content":"        void test_notExactMatch_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"miffi"},"content":"            // contains the input","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"miffi"},"content":"            assertFalse(is.test(new PersonStub(\"tester\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"miffi"},"content":"            assertFalse(is.test(new PersonStub(\"attest\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"miffi"},"content":"            assertFalse(is.test(new PersonStub(\"test this\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"miffi"},"content":"            // does not contain the input","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"miffi"},"content":"            assertFalse(is.test(new PersonStub(\"empty\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"miffi"},"content":"            // contains parts of the input","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"miffi"},"content":"            assertFalse(is.test(new PersonStub(\"teaser\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"miffi"},"content":"            assertFalse(is.test(new PersonStub(\"cast\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"miffi"},"content":"    class IsntTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"miffi"},"content":"        private final Isnt isnt \u003d new Isnt(\"test\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"miffi"},"content":"        void test_exactMatch_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"miffi"},"content":"            assertFalse(isnt.test(new PersonStub(\"test\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"miffi"},"content":"        void test_notExactMatch_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"miffi"},"content":"            // contains the input","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"miffi"},"content":"            assertTrue(isnt.test(new PersonStub(\"tester\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"miffi"},"content":"            assertTrue(isnt.test(new PersonStub(\"attest\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"miffi"},"content":"            assertTrue(isnt.test(new PersonStub(\"test this\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"miffi"},"content":"            // does not contain the input","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"miffi"},"content":"            assertTrue(isnt.test(new PersonStub(\"empty\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"miffi"},"content":"            // contains parts of the input","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"miffi"},"content":"            assertTrue(isnt.test(new PersonStub(\"teaser\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"miffi"},"content":"            assertTrue(isnt.test(new PersonStub(\"cast\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"miffi"},"content":"    class HasTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"miffi"},"content":"        private final Has has \u003d new Has(\"test\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"miffi"},"content":"        void test_containsInput_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"miffi"},"content":"            // exact match","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"miffi"},"content":"            assertTrue(has.test(new PersonStub(\"test\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"miffi"},"content":"            // word match","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"miffi"},"content":"            assertTrue(has.test(new PersonStub(\"some test\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"miffi"},"content":"            assertTrue(has.test(new PersonStub(\"test some\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"miffi"},"content":"            // sub-word match","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"miffi"},"content":"            assertTrue(has.test(new PersonStub(\"tester\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"miffi"},"content":"        void test_doesntContainInput_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"miffi"},"content":"            assertFalse(has.test(new PersonStub(\"missing\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"miffi"},"content":"    class HasntTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"miffi"},"content":"        private final Hasnt hasnt \u003d new Hasnt(\"test\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":199,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"miffi"},"content":"        void test_containsInput_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"miffi"},"content":"            // exact match","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"miffi"},"content":"            assertFalse(hasnt.test(new PersonStub(\"test\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"miffi"},"content":"            // word match","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"miffi"},"content":"            assertFalse(hasnt.test(new PersonStub(\"some test\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"miffi"},"content":"            assertFalse(hasnt.test(new PersonStub(\"test some\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"miffi"},"content":"            // sub-word match","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"miffi"},"content":"            assertFalse(hasnt.test(new PersonStub(\"tester\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"miffi"},"content":"        void test_doesNotContainInput_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"miffi"},"content":"            assertTrue(hasnt.test(new PersonStub(\"missing\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"miffi"},"content":"    class StartsWithTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"miffi"},"content":"        private final StartsWith startsWith \u003d new StartsWith(\"test\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"miffi"},"content":"        void test_startsWithInput_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"miffi"},"content":"            assertTrue(startsWith.test(new PersonStub(\"tester\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":228,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":229,"author":{"gitId":"miffi"},"content":"        void test_doesNotStartWithInput_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"miffi"},"content":"            // ends with","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"miffi"},"content":"            assertFalse(startsWith.test(new PersonStub(\"attest\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":233,"author":{"gitId":"miffi"},"content":"            // somewhere inside","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"miffi"},"content":"            assertFalse(startsWith.test(new PersonStub(\"contestant\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":235,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"miffi"},"content":"            // missing","lastModifiedDate":"2024-03-25"},{"lineNumber":237,"author":{"gitId":"miffi"},"content":"            assertFalse(startsWith.test(new PersonStub(\"missing\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":239,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":240,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":242,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"miffi"},"content":"    class EndsWithTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"miffi"},"content":"        private final EndsWith endsWith \u003d new EndsWith(\"test\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"miffi"},"content":"        void test_endsWithInput_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":248,"author":{"gitId":"miffi"},"content":"            assertTrue(endsWith.test(new PersonStub(\"attest\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":249,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":250,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":251,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"miffi"},"content":"        void test_doesNotEndWithInput_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":253,"author":{"gitId":"miffi"},"content":"            // ends with","lastModifiedDate":"2024-03-25"},{"lineNumber":254,"author":{"gitId":"miffi"},"content":"            assertFalse(endsWith.test(new PersonStub(\"tester\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":255,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":256,"author":{"gitId":"miffi"},"content":"            // somewhere inside","lastModifiedDate":"2024-03-25"},{"lineNumber":257,"author":{"gitId":"miffi"},"content":"            assertFalse(endsWith.test(new PersonStub(\"contestant\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":258,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":259,"author":{"gitId":"miffi"},"content":"            // missing","lastModifiedDate":"2024-03-25"},{"lineNumber":260,"author":{"gitId":"miffi"},"content":"            assertFalse(endsWith.test(new PersonStub(\"missing\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":261,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":262,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":263,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":264,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":265,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":266,"author":{"gitId":"miffi"},"content":"    class WordTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":267,"author":{"gitId":"miffi"},"content":"        private final Word word \u003d new Word(\"one two 3\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":268,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":269,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":270,"author":{"gitId":"miffi"},"content":"        void test_matchingInputs_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":271,"author":{"gitId":"miffi"},"content":"            // individual","lastModifiedDate":"2024-03-25"},{"lineNumber":272,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"one\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":273,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"two\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":274,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":275,"author":{"gitId":"miffi"},"content":"            // more than one match in any order","lastModifiedDate":"2024-03-25"},{"lineNumber":276,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"one two\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":277,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"two one three\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":278,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":279,"author":{"gitId":"miffi"},"content":"            // non-matching alongside matching","lastModifiedDate":"2024-03-25"},{"lineNumber":280,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"four one three\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"miffi"},"content":"            // duplicate matches","lastModifiedDate":"2024-03-25"},{"lineNumber":283,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"one one one\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":285,"author":{"gitId":"miffi"},"content":"            // symbols aren\u0027t in word ends","lastModifiedDate":"2024-03-25"},{"lineNumber":286,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"one?\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":287,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\".two\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":288,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"!3\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":289,"author":{"gitId":"miffi"},"content":"            assertTrue(word.test(new PersonStub(\"file.one\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":290,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":291,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":292,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":293,"author":{"gitId":"miffi"},"content":"        void test_nonMatchingInputs_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":294,"author":{"gitId":"miffi"},"content":"            var predicate \u003d new Word(\"one two 3\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":296,"author":{"gitId":"miffi"},"content":"            // can\u0027t be part of a word","lastModifiedDate":"2024-03-25"},{"lineNumber":297,"author":{"gitId":"miffi"},"content":"            assertFalse(predicate.test(new PersonStub(\"onetwo3\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":299,"author":{"gitId":"miffi"},"content":"            // doesn\u0027t match if no words exist","lastModifiedDate":"2024-03-25"},{"lineNumber":300,"author":{"gitId":"miffi"},"content":"            assertFalse(predicate.test(new PersonStub(\"2\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":301,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"miffi"},"content":"        /**","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"miffi"},"content":"         * Indirect test of the makeWordsPattern.","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"miffi"},"content":"         */","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":307,"author":{"gitId":"miffi"},"content":"        void makeWordsPattern_specialRegexCharacters_quoted() {","lastModifiedDate":"2024-03-25"},{"lineNumber":308,"author":{"gitId":"miffi"},"content":"            var regexCharPredicate \u003d new Word(\"wo?w\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":309,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":310,"author":{"gitId":"miffi"},"content":"            var shouldNotMatch \u003d new PersonStub(\"wow ww wo?wb\");","lastModifiedDate":"2024-03-25"},{"lineNumber":311,"author":{"gitId":"miffi"},"content":"            assertFalse(regexCharPredicate.test(shouldNotMatch));","lastModifiedDate":"2024-03-25"},{"lineNumber":312,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":313,"author":{"gitId":"miffi"},"content":"            var shouldMatch \u003d new PersonStub(\"wo?w\");","lastModifiedDate":"2024-03-25"},{"lineNumber":314,"author":{"gitId":"miffi"},"content":"            assertTrue(regexCharPredicate.test(shouldMatch));","lastModifiedDate":"2024-03-25"},{"lineNumber":315,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":316,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":317,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":318,"author":{"gitId":"miffi"},"content":"    @Nested","lastModifiedDate":"2024-03-25"},{"lineNumber":319,"author":{"gitId":"miffi"},"content":"    class NoWordTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":320,"author":{"gitId":"miffi"},"content":"        private final NoWord noWord \u003d new NoWord(\"one two 3\", STUBBED_COMPONENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":321,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":322,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":323,"author":{"gitId":"miffi"},"content":"        void test_matchingInputs_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":324,"author":{"gitId":"miffi"},"content":"            assertTrue(noWord.test(new PersonStub(\"2 three four\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":325,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":326,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":327,"author":{"gitId":"miffi"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":328,"author":{"gitId":"miffi"},"content":"        void test_nonMatchingInputs_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":329,"author":{"gitId":"miffi"},"content":"            // different order","lastModifiedDate":"2024-03-25"},{"lineNumber":330,"author":{"gitId":"miffi"},"content":"            assertFalse(noWord.test(new PersonStub(\"two 3 one\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":331,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":332,"author":{"gitId":"miffi"},"content":"            // non-matching alongside matching","lastModifiedDate":"2024-03-25"},{"lineNumber":333,"author":{"gitId":"miffi"},"content":"            assertFalse(noWord.test(new PersonStub(\"four one three 3 two\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":334,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":335,"author":{"gitId":"miffi"},"content":"            // duplicate matches","lastModifiedDate":"2024-03-25"},{"lineNumber":336,"author":{"gitId":"miffi"},"content":"            assertFalse(noWord.test(new PersonStub(\"one one one two two 3 3 3\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":337,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":338,"author":{"gitId":"miffi"},"content":"            // symbols aren\u0027t in word ends","lastModifiedDate":"2024-03-25"},{"lineNumber":339,"author":{"gitId":"miffi"},"content":"            assertFalse(noWord.test(new PersonStub(\"file.one?\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":340,"author":{"gitId":"miffi"},"content":"            assertFalse(noWord.test(new PersonStub(\"two!\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":341,"author":{"gitId":"miffi"},"content":"            assertFalse(noWord.test(new PersonStub(\"\u00273\u0027\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":342,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":343,"author":{"gitId":"miffi"},"content":"            // Not all","lastModifiedDate":"2024-03-25"},{"lineNumber":344,"author":{"gitId":"miffi"},"content":"            assertFalse(noWord.test(new PersonStub(\"one\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":345,"author":{"gitId":"miffi"},"content":"            assertFalse(noWord.test(new PersonStub(\"3 two\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":346,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":347,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":348,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"miffi":348}}]
