[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T09-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-T09-3/tp/actions)","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103-T09-3/tp/graph/badge.svg?token\u003d7N2EZAM58I)](https://codecov.io/gh/AY2324S2-CS2103-T09-3/tp)","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"**Elder Scrolls is a desktop volunteer management system application for managing both volunteers, and befriendees.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"* If you are interested in using Elder Scrolls, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"* If you are interested about developing Elder Scrolls, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"**Acknowledgements**","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"chaaaaun":10,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"mainClassName \u003d \u0027scrolls.elder.Main\u0027","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    String jacksonVersion \u003d \u00272.16.2\u0027","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: jacksonVersion","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: jacksonVersion","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"    archiveFileName \u003d \u0027elderscrolls.jar\u0027","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"run {","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"chaaaaun":9,"-":68}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"### Tu Jia En","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"\u003cimg src\u003d\"images/chaaaaun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"[[github](https://github.com/chaaaaun)]","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"[[portfolio](team/chaaaaun.md)]","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"* Role: Developer","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"### Soh Soon Wei","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"\u003cimg src\u003d\"images/soons1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"[[github](http://github.com/soons1)]","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"[[portfolio](team/soons1.md)]","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"* Role: Developer","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":"### S Devi Harshitha","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"\u003cimg src\u003d\"images/sdevih.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"[[github](http://github.com/sdevih)]","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"[[portfolio](team/sdevih.md)]","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"### Chong Jer Rong","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"\u003cimg src\u003d\"images/cjerrong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"[[github](http://github.com/CJerrong)]","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"### Chan Ger Teck","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"\u003cimg src\u003d\"images/gerteck.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"[[github](https://github.com/gerteck)]","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"[[portfolio](team/gerteck.md)]","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"soons1":5,"CJerrong":3,"gerteck":4,"chaaaaun":7,"-":36,"sdevih":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-T09-3/tp/src/main/java/scrolls/elder/model/Model.java)","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"* stores all in-memory application data (i.e., `Datastore` and `UserPref` objects)","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"* stores a `Datastore` object that represents the functional data in an application. This is exposed to the outside as a `ReadOnlyDatastore` object.","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"#### Datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"Contains the `PersonStore`:","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"Contains the `LogStore`:","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"* stores the currently \u0027selected\u0027 `Log` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cLog\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T09-3/tp/master/src/main/java/scrolls/elder/storage/Storage.java)","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"* can save both application data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"* inherits from both `DatastoreStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"Classes used by multiple components are in the `scrolls.elder.commons` package.","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"gerteck"},"content":"### Find feature","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"gerteck"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"gerteck"},"content":"##### `FindCommandParser` Class","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"gerteck"},"content":"The `FindCommandParser` class is responsible for parsing user input and creating a corresponding `FindCommand` object for execution. The implementation involves several key steps:","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"gerteck"},"content":"* **Role Parsing**: The parser first identifies the roles specified in the user input, such as \"volunteer\" or \"befriendee\", using predefined flags (`SEARCH_VOLUNTEER_FLAG` and `SEARCH_BEFRIENDEE_FLAG`).","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"gerteck"},"content":"It determines whether the search should be restricted to a specific role, both roles, or neither.","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"gerteck"},"content":"* **Pair Flag Parsing**: Next, the parser extracts any flags indicating whether the search should include paired or unpaired individuals.","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"gerteck"},"content":"It determines whether the search should include paired individuals, unpaired individuals, both, or neither.","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"gerteck"},"content":"* **Tag Parsing**: The parser then parses any tags specified in the user input, which are prefixed with a tag indicator (`t/`). Tags are extracted and used to create a `TagListContainsTagsPredicate` object for filtering.","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"gerteck"},"content":"* **Name Parsing**: After extracting roles, pair flags, and tags, the parser processes the remaining input as potential name keywords for filtering.","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"gerteck"},"content":"It constructs a `NameContainsKeywordsPredicate` object to filter individuals based on their names.","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"gerteck"},"content":"* **Search Criteria Combination**: The parser combines the parsed search criteria (roles, pair flags, tags, and name keywords) into a single `FindCommand` object.","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"gerteck"},"content":"* **Handling Search Exceptions**: The parser checks for any invalid command formats or missing input parameters and throws a `ParseException` if necessary.","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"gerteck"},"content":"* **Return `FindCommand` Object**: Finally, the parser returns the constructed `FindCommand` object, encapsulating the parsed search criteria, for further execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"gerteck"},"content":"##### `FindCommand` Class","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"gerteck"},"content":"The find command finds all persons whose names contain any of the given keywords, supports searches in separate Volunteer and Befriendee lists, search by tags, and by pairing status. The `FindCommand` class is responsible for executing the find operation based on parsed user input.","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"gerteck"},"content":"* **Command Execution:** The `execute()` method overrides the parent class Command method to perform the actual find operation.","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"gerteck"},"content":"It retrieves the PersonStore from the model to access the list of persons.","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"gerteck"},"content":"* **Search Criteria:** The class contains boolean flags (`isSearchingVolunteer`, `isSearchingBefriendee`) to determine whether to search volunteers, befriendees, or both.","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"gerteck"},"content":"Similar flags (`isSearchingPaired`, `isSearchingUnpaired`) are used to filter persons based on their pairing status.","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"gerteck"},"content":"* **Search Methods:*** `searchAllPersons()`, `searchVolunteerOnly()`, and `searchBefriendeeOnly()` methods are used to perform searches based on the specified criteria.","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"gerteck"},"content":"These methods update the filtered person list in the PersonStore based on the search predicates.","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"gerteck"},"content":"* **Result Handling:** The search results are wrapped in a `CommandResult` object, which contains a message indicating the number of persons found.","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"gerteck"},"content":"The message is formatted using the Messages class constants.","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"gerteck"},"content":"* **Error Handling:** The class throws a CommandException if the search operation fails due to an invalid search predicate or an empty search result.","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"gerteck"},"content":"* **Equality Check:** The `equals()` method is overridden to compare two `FindCommand` objects based on their search predicates and flags.","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"gerteck"},"content":"The following sequence diagram shows how a Find operation goes through the `Logic` component:","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"gerteck"},"content":"![FindSequenceDiagram1](images/FindSequenceDiagram.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"gerteck"},"content":"![FindSequenceDiagram2](images/FindSequenceDiagram2.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"gerteck"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"gerteck"},"content":"##### **Aspect: Tag Parsing in FindCommandParser:**","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"gerteck"},"content":"* **Alternative 1: (Current Choice):** Parsing tags separately from other search criteria.","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"gerteck"},"content":"  * Pros: Allows users to specify additional search criteria based on tags.","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"gerteck"},"content":"  * Cons: Requires additional parsing logic and potentially increases complexity in handling multiple search parameters.","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"gerteck"},"content":"* **Alternative 2:** Incorporating tags into the main search query without separate parsing.","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"gerteck"},"content":"  * Pros: Simplifies parsing logic by integrating tags directly into the search query.","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"gerteck"},"content":"  * Cons: May limit flexibility in specifying tag-based search criteria or require more sophisticated parsing algorithms.","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"gerteck"},"content":"##### **Aspect: Handling Search Criteria in FindCommand:**","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"gerteck"},"content":"* **Alternative 1 (Current Choice)**: Implementing separate predicates for name and tag search criteria.","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"gerteck"},"content":"  * Pros: Offers flexibility in defining and combining different search parameters.","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"gerteck"},"content":"  * Cons: May lead to redundant filtering or increased complexity in managing multiple predicates.","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"gerteck"},"content":"* **Alternative 2**: Consolidating search criteria into a single unified predicate.","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"gerteck"},"content":"  * Pros: Simplifies filtering logic by reducing the number of separate predicates.","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"gerteck"},"content":"    * Cons: May limit the flexibility to apply different search parameters independently or require more complex predicate structures.","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"soons1"},"content":"### Pair feature","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"soons1"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"soons1"},"content":"The pair mechanism is facilitated by updating the `pairedWithName` and `pairedWithId` fields of the `Person` object. Two paired `Person`s will have their `pairedWithName` and `pairedWithId` fields updated to reflect the `name` and `personId` of the `Person` they are paired with.","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"soons1"},"content":"The `name` is saved to facilitate easy identification of the paired `Person` when displaying the `Person` object. The `personId` is saved to facilitate easy retrieval of the paired `Person` object when needed.","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"soons1"},"content":"The `PairCommand` class is responsible for pairing two persons, and the `UnpairCommand` class is responsible for unpairing two persons. The `PairCommand` and `UnpairCommand` classes are executed by the `Logic` component.","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"soons1"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"soons1"},"content":"![PairSequenceDiagram](images/PairSequenceDiagram-Logic.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"soons1"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"soons1"},"content":"**Aspect: What attribute(s) should be saved in the `Person` object:**","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"soons1"},"content":"* **Alternative 1 (current choice):** Save the `name` and `personId` of the paired `Person`.","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"soons1"},"content":"    * Pros: Might need extra steps to search for the paired `Person` as only the `name` and `personId` are saved.","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"soons1"},"content":"    * Cons: Uses less memory.","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"soons1"},"content":"* **Alternative 2:** Save the paired `Person` within the `Person` object.","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"soons1"},"content":"  itself.","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"soons1"},"content":"    * Pros: Easy to access and manipulate the paired `Person`.","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"soons1"},"content":"    * Cons: Uses more memory and includes redundant information.","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"chaaaaun"},"content":"### Add Log feature","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"chaaaaun"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"chaaaaun"},"content":"The Add Log feature allows users to add a new log entry to the application.","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"chaaaaun"},"content":"The `LogAddCommand` class is responsible for creating a new log entry, and the `LogAddCommandParser` class is responsible for parsing the user input to create a `LogAddCommand` object.","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"chaaaaun"},"content":"The `LogAddCommand` class is executed by the `Logic` component.","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"chaaaaun"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"chaaaaun"},"content":"**Aspect: Whether to use unique `logId` for each `Log` object:**","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"chaaaaun"},"content":"* **Alternative 1 (current choice):** The `logId` is automatically generated for each `Log` object, ensuring that each log entry has a unique identifier.","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"chaaaaun"},"content":"    * Pros: Ensures that each log entry is uniquely identified.","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"chaaaaun"},"content":"    * Cons: Adds complexity to the implementation of the `LogStore` (e.g., maintaining a `logIdSequence` to generate unique `logId` values)","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"chaaaaun"},"content":"* **Alternative 2:** The `logId` is not used, and the `Log` object is identified by its position in the list of logs.","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"chaaaaun"},"content":"    * Pros: Simplifies the process of adding a log entry.","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"chaaaaun"},"content":"    * Cons: May lead to confusion if log entries are deleted or reordered.","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"chaaaaun"},"content":"Here\u0027s an example of how you can use the Add Log feature:","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"chaaaaun"},"content":"1. To add a log entry, use the `addlog` command followed by the `volunteerId`, `befriendeeId`, `startdate`, `duration` and `remarks`. For example, `addlog v/1 b/2 s/2022-03-01-10:00 d/2 r/Visited Mr. Tan`.","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"chaaaaun"},"content":"2. The application will create a new log entry with the provided details and add it to the list of logs.","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"chaaaaun"},"content":"3. If the command is successful, the application will display a message indicating that the log entry has been added.","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"chaaaaun"},"content":"Please note that the `volunteerId` and `befriendeeId` must correspond to existing volunteers and befriendees in the application. The `startdate` should be in the format `YYYY-MM-DD` and the `duration` should be the number of hours the visit lasted. The `remarks` field is optional and can be used to add any additional notes about the visit.","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"sdevih"},"content":"### Edit log feature","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"sdevih"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"gerteck"},"content":"The edit log feature allows user to modify the details of an existing log entry in the address book. The index of the log entry has to be edited is specified by the user in order to execute the `LogEditCommand`.","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"sdevih"},"content":"The `LogEditCommand` class is responsible for editing the details of a log entry,","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"sdevih"},"content":"and the `LogEditCommandParser` class is responsible for parsing the user input to create a `LogEditCommand` object.","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"sdevih"},"content":"The `LogEditCommand` class is executed by the `Logic` component.","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"sdevih"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"sdevih"},"content":"**Aspect: What attribute(s) can be edited in the `Log` object:**","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"sdevih"},"content":"* **Alternative 1 (current choice):** The `volunteerId`, `befriendeeId`, `startdate`, `duration` and `remarks` of the","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"sdevih"},"content":"    `Log` can be edited.","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"sdevih"},"content":"    * Pros: Provides flexibility for users to update various attributes of a log entry.","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"sdevih"},"content":"    * Cons: Accidental edits when editing contact ids in `Log` may lead to cascading effects in other","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"sdevih"},"content":"      attributes displayed, such as timeServed in volunteer contacts.","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"sdevih"},"content":"* **Alternative 2:** The `startdate`, `duration` and `remarks` of the `Log` can be edited, ","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"sdevih"},"content":"    while the `volunteerId`, `befriendeeId` is kept immutable.","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"sdevih"},"content":"    * Pros: Prevents cascading modifications of attributes displayed in `Person` contact.","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"sdevih"},"content":"    * Cons: Restricts the flexibility of the `LogEdit` feature","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"CJerrong"},"content":"### Undo/redo feature","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"CJerrong"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"CJerrong"},"content":"The undo/redo mechanism is facilitated by `DatastoreVersionStorage`. It is a data structure storing the undo/redo history of the datastores stored in the model, stored internally as an `datastoreVersions` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"CJerrong"},"content":"* `DatastoreVersionStorage#commitDatastore()` — Saves the current datastore state in its history.","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"CJerrong"},"content":"* `DatastoreVersionStorage#executeUndo()` — Returns the previous address book state from its history, for the model to reset the datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"CJerrong"},"content":"* `DatastoreVersionStorage#executeRedo()` — Returns a previously undone address book state from its history, for the model to reset the datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"CJerrong"},"content":"`DatastoreVersionStorage#commitDatastore()` is exposed in the `Model` interface as `Model#commitDatastore()` while `Model#undoChanges()` and `Model#redoChanges()` call `DatastoreVersionStorage#executeUndo()` and `DatastoreVersionStorage#executeRedo()` respectively to carry out the undo and redo actions.","lastModifiedDate":"2024-03-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"CJerrong"},"content":"Step 1. The user launches the application for the first time. The `DatastoreVersionStorage` will be initialized with the initial datastore state, and the `currentStatePointer` pointing to that single datastore state.","lastModifiedDate":"2024-03-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"CJerrong"},"content":"Step 2. The user executes `delete 5 r/volunteer` command to delete the 5th volunteer in the datastore. The `delete` command calls `Model#commitDatastore()`, causing the modified state of the datastore after the `delete 5 r/volunteer` command executes to be saved in the `datastoreVersions`, and the `currentStatePointer` is shifted to the newly inserted datastore state.","lastModifiedDate":"2024-03-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"CJerrong"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitDatastore()`, causing another modified datastore state to be saved into the `datastoreVersions`.","lastModifiedDate":"2024-03-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"CJerrong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitDatastore()`, so the datastore state will not be saved into the `datastoreVersions`.","lastModifiedDate":"2024-03-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"CJerrong"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command.","lastModifiedDate":"2024-03-29"},{"lineNumber":344,"author":{"gitId":"CJerrong"},"content":"The `undo` command will call `Model#undoChanges()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous datastore state, and restores the datastore to that state.","lastModifiedDate":"2024-03-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"CJerrong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial Datastore state, then there are no previous Datastore states to restore. The `undo` command uses `Model#canUndoDatastore()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-03-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":365,"author":{"gitId":"CJerrong"},"content":"The `redo` command does the opposite — it calls `Model#redoChanges()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the datastore to that state.","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"CJerrong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `datastoreVersions.size() - 1`, pointing to the latest datastore state, then there are no undone Datastore states to restore. The `redo` command uses `Model#canRedoDatastore()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"CJerrong"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the datastore, such as `list`, will usually not call `Model#commitDatastore()`, `Model#undoChanges()` or `Model#redoChanges()`. Thus, the `datastoreVersions` remains unchanged.","lastModifiedDate":"2024-03-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"CJerrong"},"content":"Step 6. The user executes `clear`, which calls `Model#commitDatastore()`. Since the `currentStatePointer` is not pointing at the end of the `datastoreVersions`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-03-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"chaaaaun"},"content":"* is a manager of a befriending volunteer organisation","lastModifiedDate":"2024-03-03"},{"lineNumber":422,"author":{"gitId":"chaaaaun"},"content":"* has a need to keep track of many befriendees/elderly of the volunteer programme","lastModifiedDate":"2024-03-03"},{"lineNumber":423,"author":{"gitId":"chaaaaun"},"content":"* has a need to keep track of volunteers in the organisation","lastModifiedDate":"2024-03-03"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"chaaaaun"},"content":"**Value proposition**: manage the volunteer organisation faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-03"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"| Priority | As a …​   | I want to …​                                                                           | So that I can…​                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"gerteck"},"content":"|-----|-----------|----------------------------------------------------------------------------------------|---------------------------------------------------------------|","lastModifiedDate":"2024-03-04"},{"lineNumber":438,"author":{"gitId":"soons1"},"content":"| `* * *` | manager   | add volunteers’ and elderly befriendees’ contacts                                      |                                                               |","lastModifiedDate":"2024-03-03"},{"lineNumber":439,"author":{"gitId":"soons1"},"content":"| `* * *` | manager   | edit volunteers’ and elderly befriendees’ details                                      |                                                               |","lastModifiedDate":"2024-03-03"},{"lineNumber":440,"author":{"gitId":"soons1"},"content":"| `* * *` | manager   | delete volunteer and elderly befriendee contacts                                       |                                                               |","lastModifiedDate":"2024-03-03"},{"lineNumber":441,"author":{"gitId":"gerteck"},"content":"| `* * *` | manager   | view list of volunteers and elderly befriendees                                        | keep track of the roster                                      |","lastModifiedDate":"2024-03-04"},{"lineNumber":442,"author":{"gitId":"soons1"},"content":"| `* * *` | manager   | tag elderly befriendees with relevant details                                          | accommodate for any special circumstances                     |","lastModifiedDate":"2024-03-03"},{"lineNumber":443,"author":{"gitId":"soons1"},"content":"| `* * *` | manager   | pair volunteers with befriendee contacts                                               | assign the pairings                                           |","lastModifiedDate":"2024-03-03"},{"lineNumber":444,"author":{"gitId":"gerteck"},"content":"| `* * *` | manager   | view details of elderly befriendee                                                     | know the address and case details                             |","lastModifiedDate":"2024-03-04"},{"lineNumber":445,"author":{"gitId":"gerteck"},"content":"| `* * *` | manager   | view details of volunteer befriender                                                   | know the details of the volunteer                             |","lastModifiedDate":"2024-03-04"},{"lineNumber":446,"author":{"gitId":"soons1"},"content":"| `* *` | first-time user   | access a help page                                                                     | refer to the features that come along with the application    |","lastModifiedDate":"2024-03-03"},{"lineNumber":447,"author":{"gitId":"soons1"},"content":"| `* *` | manager   | have a one-stop view of all the important information about the elderly and volunteers | contact each person easily                                    |","lastModifiedDate":"2024-03-03"},{"lineNumber":448,"author":{"gitId":"soons1"},"content":"| `* *` | manager   | see a timetable with meeting details                                                   | quickly see the planned meeting sessions                      |","lastModifiedDate":"2024-03-03"},{"lineNumber":449,"author":{"gitId":"soons1"},"content":"| `* *` | manager   | search for specific contact based on keywords                                          | quickly see contact details of specific people                |","lastModifiedDate":"2024-03-03"},{"lineNumber":450,"author":{"gitId":"gerteck"},"content":"| `* *` | manager   | add details directly to pairings                                                       | add information specific to pairings                          |","lastModifiedDate":"2024-03-04"},{"lineNumber":451,"author":{"gitId":"gerteck"},"content":"| `* *` | manager   | search for specific contact based on keywords                                          | quickly see contact details of specific people                |","lastModifiedDate":"2024-03-04"},{"lineNumber":452,"author":{"gitId":"soons1"},"content":"| `*` | first-time user   | see sample befriendee and volunteer profiles                                           | try out the features with pre-loaded data                     |","lastModifiedDate":"2024-03-03"},{"lineNumber":453,"author":{"gitId":"soons1"},"content":"| `*` | first-time user   | follow a guided tour                                                                   | be aware of how to use and access features in the application |","lastModifiedDate":"2024-03-03"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"sdevih"},"content":"(For all use cases below, the **System** is the `Elder Scrolls` and the **Actor** is the","lastModifiedDate":"2024-03-15"},{"lineNumber":460,"author":{"gitId":"sdevih"},"content":"`volunteer organisation manager`, unless specified otherwise)","lastModifiedDate":"2024-03-15"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"sdevih"},"content":"**Use case: UC01 - Add a contact**","lastModifiedDate":"2024-03-15"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"CJerrong"},"content":"1. User requests to add contact, entering contact information","lastModifiedDate":"2024-03-03"},{"lineNumber":467,"author":{"gitId":"CJerrong"},"content":"2. Elder Scrolls adds the contact","lastModifiedDate":"2024-03-03"},{"lineNumber":468,"author":{"gitId":"CJerrong"},"content":"3. Elder Scrolls displays the details of the contact added","lastModifiedDate":"2024-03-03"},{"lineNumber":469,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":470,"author":{"gitId":"CJerrong"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":471,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":472,"author":{"gitId":"CJerrong"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":473,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":474,"author":{"gitId":"CJerrong"},"content":"* 2a. The given contact details are invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":475,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":476,"author":{"gitId":"CJerrong"},"content":"  * 2a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":477,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":478,"author":{"gitId":"CJerrong"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":479,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":480,"author":{"gitId":"CJerrong"},"content":"* 3a. The given contact details are already in the contact book","lastModifiedDate":"2024-03-03"},{"lineNumber":481,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":482,"author":{"gitId":"CJerrong"},"content":"    * 3a1. Elder scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":483,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":484,"author":{"gitId":"CJerrong"},"content":"     Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":485,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":486,"author":{"gitId":"sdevih"},"content":"**Use case: UC02 - Delete a contact**","lastModifiedDate":"2024-03-15"},{"lineNumber":487,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":488,"author":{"gitId":"CJerrong"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":489,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":490,"author":{"gitId":"CJerrong"},"content":"1.  User requests to list all contacts","lastModifiedDate":"2024-03-03"},{"lineNumber":491,"author":{"gitId":"CJerrong"},"content":"2.  Elder Scrolls shows a list of all contacts","lastModifiedDate":"2024-03-03"},{"lineNumber":492,"author":{"gitId":"CJerrong"},"content":"3.  User requests to delete a specific contact using its unique ID (UID)","lastModifiedDate":"2024-03-03"},{"lineNumber":493,"author":{"gitId":"CJerrong"},"content":"4.  Elder Scrolls deletes the contact based on its UID","lastModifiedDate":"2024-03-03"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"CJerrong"},"content":"  * 2a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":502,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"CJerrong"},"content":"* 3a. The given UID is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"CJerrong"},"content":"    * 3a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"CJerrong"},"content":"* 4a. The contact requested to be deleted is still paired.","lastModifiedDate":"2024-03-03"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":513,"author":{"gitId":"CJerrong"},"content":"  * 4a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":514,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":515,"author":{"gitId":"CJerrong"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":516,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":517,"author":{"gitId":"sdevih"},"content":"**Use case: UC03 - List all contacts**","lastModifiedDate":"2024-03-15"},{"lineNumber":518,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":519,"author":{"gitId":"CJerrong"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":520,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":521,"author":{"gitId":"CJerrong"},"content":"1. User requests to list all contacts","lastModifiedDate":"2024-03-03"},{"lineNumber":522,"author":{"gitId":"CJerrong"},"content":"2. Elder Scrolls shows a list of all contacts","lastModifiedDate":"2024-03-03"},{"lineNumber":523,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":524,"author":{"gitId":"CJerrong"},"content":"   Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":525,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":526,"author":{"gitId":"CJerrong"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":527,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":528,"author":{"gitId":"CJerrong"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":529,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":530,"author":{"gitId":"CJerrong"},"content":"    * 2a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":531,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":532,"author":{"gitId":"CJerrong"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"sdevih"},"content":"**Use case: UC04 - List all volunteer contacts**","lastModifiedDate":"2024-03-15"},{"lineNumber":535,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":536,"author":{"gitId":"CJerrong"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":537,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":538,"author":{"gitId":"CJerrong"},"content":"1. User requests to list all volunteer contacts","lastModifiedDate":"2024-03-03"},{"lineNumber":539,"author":{"gitId":"CJerrong"},"content":"2. Elder Scrolls shows a list of all volunteer contacts","lastModifiedDate":"2024-03-03"},{"lineNumber":540,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":541,"author":{"gitId":"CJerrong"},"content":"   Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":542,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":543,"author":{"gitId":"CJerrong"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":544,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":545,"author":{"gitId":"CJerrong"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":546,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":547,"author":{"gitId":"CJerrong"},"content":"    * 2a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":548,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":549,"author":{"gitId":"CJerrong"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":550,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":551,"author":{"gitId":"CJerrong"},"content":"* 3a. The incorrect filtering parameter used, ie. \u0027vol\u0027 not used","lastModifiedDate":"2024-03-03"},{"lineNumber":552,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":553,"author":{"gitId":"CJerrong"},"content":"  * 3a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":554,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":555,"author":{"gitId":"CJerrong"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":556,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":557,"author":{"gitId":"sdevih"},"content":"**Use case: UC05 - List all befriendee contacts**","lastModifiedDate":"2024-03-15"},{"lineNumber":558,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":559,"author":{"gitId":"CJerrong"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":560,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":561,"author":{"gitId":"CJerrong"},"content":"1. User requests to list all befriendee contacts","lastModifiedDate":"2024-03-03"},{"lineNumber":562,"author":{"gitId":"CJerrong"},"content":"2. Elder Scrolls shows a list of all befriendee contacts","lastModifiedDate":"2024-03-03"},{"lineNumber":563,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":564,"author":{"gitId":"CJerrong"},"content":"   Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":565,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":566,"author":{"gitId":"CJerrong"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":567,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":568,"author":{"gitId":"CJerrong"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":569,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":570,"author":{"gitId":"CJerrong"},"content":"    * 2a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":571,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":572,"author":{"gitId":"CJerrong"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":574,"author":{"gitId":"CJerrong"},"content":"* 3a. The incorrect filtering parameter used, ie. \u0027bef\u0027 is not used","lastModifiedDate":"2024-03-03"},{"lineNumber":575,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":576,"author":{"gitId":"CJerrong"},"content":"    * 3a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":577,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":578,"author":{"gitId":"CJerrong"},"content":"      Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":579,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":580,"author":{"gitId":"sdevih"},"content":"**Use case: UC06 - Pair a volunteer and befriendee**","lastModifiedDate":"2024-03-15"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"sdevih"},"content":"1.  User \u003cu\u003erequests to list all contacts (UC03)\u003c/u\u003e.","lastModifiedDate":"2024-03-15"},{"lineNumber":585,"author":{"gitId":"sdevih"},"content":"2.  Elder Scrolls shows a list of contacts.","lastModifiedDate":"2024-03-15"},{"lineNumber":586,"author":{"gitId":"sdevih"},"content":"3.  User requests to pair a specific volunteer and befriendee in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":587,"author":{"gitId":"sdevih"},"content":"4.  Elder Scrolls pairs the specified volunteer and befriendee.","lastModifiedDate":"2024-03-03"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"sdevih"},"content":"* 3a. The given UID is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"sdevih"},"content":"    * 3a1. Elder Scrolls shows an error message indicating that the given UID is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":597,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":598,"author":{"gitId":"sdevih"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":599,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":600,"author":{"gitId":"sdevih"},"content":"* 3b. The given UIDs are both volunteers or both befriendees.","lastModifiedDate":"2024-03-03"},{"lineNumber":601,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":602,"author":{"gitId":"sdevih"},"content":"    * 3b1. Elder Scrolls shows an error message indicating that the given UIDs are not of different types.","lastModifiedDate":"2024-03-15"},{"lineNumber":603,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":604,"author":{"gitId":"sdevih"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-03"},{"lineNumber":605,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":606,"author":{"gitId":"sdevih"},"content":"* 3b. One or both given UIDs are already paired.","lastModifiedDate":"2024-03-15"},{"lineNumber":607,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":608,"author":{"gitId":"sdevih"},"content":"    * 3b1. Elder Scrolls shows an error message indicating that the given UID(s) are already paired.","lastModifiedDate":"2024-03-15"},{"lineNumber":609,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":610,"author":{"gitId":"sdevih"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-15"},{"lineNumber":611,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":612,"author":{"gitId":"sdevih"},"content":"**Use case: UC07 - Tag contacts**","lastModifiedDate":"2024-03-15"},{"lineNumber":613,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":614,"author":{"gitId":"sdevih"},"content":"**MSS**","lastModifiedDate":"2024-03-03"},{"lineNumber":615,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":616,"author":{"gitId":"sdevih"},"content":"1.  User \u003cu\u003erequests to list all contacts (UC03)\u003c/u\u003e.","lastModifiedDate":"2024-03-15"},{"lineNumber":617,"author":{"gitId":"sdevih"},"content":"2.  Elder Scrolls shows a list of contacts.","lastModifiedDate":"2024-03-15"},{"lineNumber":618,"author":{"gitId":"sdevih"},"content":"3.  User requests to tag a specific person with a property.","lastModifiedDate":"2024-03-03"},{"lineNumber":619,"author":{"gitId":"sdevih"},"content":"4.  Elder Scrolls tags the specified person in the list with that specified property.","lastModifiedDate":"2024-03-03"},{"lineNumber":620,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":621,"author":{"gitId":"sdevih"},"content":"    Use case ends.","lastModifiedDate":"2024-03-03"},{"lineNumber":622,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":623,"author":{"gitId":"sdevih"},"content":"**Extensions**","lastModifiedDate":"2024-03-03"},{"lineNumber":624,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":625,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":626,"author":{"gitId":"sdevih"},"content":"* 3a. The given UID is invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":627,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":628,"author":{"gitId":"sdevih"},"content":"    * 3a1. Elder Scrolls shows an error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2024-03-03"},{"lineNumber":633,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"chaaaaun"},"content":"4. Should have a simple menu structure with clear labels, guiding users to key actions without extensive tutorials.","lastModifiedDate":"2024-03-03"},{"lineNumber":639,"author":{"gitId":"soons1"},"content":"5. Should have graceful error handling with clear human-readable messages to the user to guide them in fixing their command.","lastModifiedDate":"2024-03-15"},{"lineNumber":640,"author":{"gitId":"chaaaaun"},"content":"6. Ability to filter contacts based on relevant criteria (location, demographics, skills, availability) to aid in pairing.","lastModifiedDate":"2024-03-03"},{"lineNumber":641,"author":{"gitId":"chaaaaun"},"content":"7. Should have a robust data storage mechanism that can handle data corruption and large data sets.","lastModifiedDate":"2024-03-03"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"soons1"},"content":"* **Befriendee**: Elderly person seeking companionship","lastModifiedDate":"2024-03-03"},{"lineNumber":646,"author":{"gitId":"soons1"},"content":"* **Befriending Volunteer Organisations**: An organisation that aims to provide companionship to seniors by pairing them with volunteers","lastModifiedDate":"2024-03-03"},{"lineNumber":647,"author":{"gitId":"soons1"},"content":"* **Pairing**: Assigning of a volunteer to a befriendee and a befriendee to a volunteer (one-to-one)) so that they become a pair","lastModifiedDate":"2024-03-15"},{"lineNumber":648,"author":{"gitId":"soons1"},"content":"* **Tagging**: Adding an arbitrary detail(s) to a volunteer or befriendee profile to aid in identifying special conditions","lastModifiedDate":"2024-03-15"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CJerrong":113,"soons1":43,"gerteck":67,"chaaaaun":53,"-":355,"sdevih":70}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"   1. Run the `scrolls.elder.Main` and try a few commands.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"chaaaaun":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"   e.g. `storage.scrolls.elder.StorageManagerTest`","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"   e.g. `logic.scrolls.elder.LogicManagerTest`","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"chaaaaun":2,"-":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"## **Introduction - What is Elder Scrolls?**","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"**Elder Scrolls**, our Volunteer Management System (VMS), simplifies organizing volunteers and befriendees. Developed for efficiency by our team, it streamlines coordination and fosters community connections.","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"Elder Scrolls, is a desktop application designed for efficient management. Optimized for use via a Command Line Interface (CLI), Elder Scrolls combines the speed of CLI interaction with the benefits of a Graphical User Interface (GUI). Whether you prefer the agility of typing or the convenience of visual interaction, Elder Scrolls ensures that your volunteer management tasks are completed swiftly and seamlessly.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"No more cumbersome scheduling or scattered communication. Manage volunteers and befriendees seamlessly in one intuitive platform. Say goodbye to endless emails and spreadsheets – Elder Scrolls centralizes tasks, making them faster and more effective. Experience efficient volunteer management – where organizing, coordinating, and connecting has never been easier.","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"## **About this User Guide**","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"Welcome to the user guide for Elder Scrolls! Whether you\u0027re new or experienced, this guide has everything you need to make the most of Elder Scrolls:","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"* Quick Start: Get started with Elder Scrolls quickly and easily.","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"* Features: Explore all the functionalities of Elder Scrolls.","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"* Command Summary: Find all the essential commands at a glance.","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"* FAQs: Get answers to common questions about Elder Scrolls.","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"Let\u0027s dive in and maximize your Elder Scrolls experience!","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"## **1. Setting Up**","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"Before getting started with Elder Scrolls, let\u0027s ensure everything is set up for Elder Scrolls to run correctly:","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"1. Ensure you have `Java 11` installed on your computer. This is crucial for Elder Scrolls to function properly.","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"    * If you\u0027re unsure whether Java 11 is installed, follow this short [guide](https://www.baeldung.com/java-check-is-installed) to check.","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    * Install Java 11 (if needed): If Java 11 is not installed, follow the provided installation instructions [here](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html#GUID-8677A77F-231A-40F7-98B9-1FD0B48C346A). If you\u0027re using a Mac computer with Apple Silicon, you can download Java 11 from [here](https://www.azul.com/downloads/?version\u003djava-11-lts\u0026os\u003dmacos\u0026architecture\u003darm-64-bit\u0026package\u003djdk-fx#zulu) instead.","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"2. Next, download our latest `elderscrolls.jar` release [here](https://github.com/AY2324S2-CS2103T-T09-3/tp/releases).","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"3. Next, copy the downloaded `elderscrolls.jar` to the desired home folder for Elder Scrolls. Elder Scrolls will store all application files and data in this folder, so it is best to create an empty folder for this purpose.","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"## **2. Quick Start**","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"Once you\u0027ve completed the setup, you\u0027re ready to launch Elder Scrolls! Follow these steps to get started:","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"1. Launch Elder Scrolls: Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar elderscrolls.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"A GUI similar to the below should appear in a few seconds. If this is your first time launching Elder Scrolls, the application should contain some sample data to get you started!","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"After this, you\u0027re all set to begin using Elder Scrolls! Let\u0027s make managing volunteers and befriendees a breeze.","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"Here are some commands to get you started:","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"   * `find David`: Finds all contacts with names containing `David`.","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"   * `list` : Lists all befriendee and volunteer contacts.","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 r/volunteer` : Adds a volunteer named `John Doe` to the Elder Scrolls.","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"   * `delete 4 r/volunteer ` : Deletes the 4th contact shown in the current list.","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"   * Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"Great! Now that you\u0027re familiar with the fundamental commands and have successfully launched Elder Scrolls, let\u0027s delve deeper into its intricacies and explore its advanced functionalities.","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"## **3. User Interface**","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"Elder Scrolls has a simple and intuitive user interface. The GUI is divided into two main sections: the `Persons` section and the `Logs` section.","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"## **4. Features**","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"* Words in `UPPER_CASE` are placeholders to represent parameters that should be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"gerteck"},"content":"### 3.1 Volunteer / Befriendee Management","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"gerteck"},"content":"#### Adding a Volunteer or Befriendee: `add`","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"Adds a volunteer / Befriendee to the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"Format: `add n/NAME r/ROLE p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"Where `ROLE` must be either `volunteer` or `befriendee` to add a volunteer or befriendee respectively.","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"* `add n/John Doe r/volunteer p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"* `add n/Betsy Crowe r/befriendee t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal t/homicide`","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"gerteck"},"content":"#### Editing a person : `edit`","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"gerteck"},"content":"Edits an existing person in Elder Scrolls.","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"gerteck"},"content":"Format: `edit INDEX r/ROLE [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"gerteck"},"content":"*  `edit 1 r/volunteer p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"gerteck"},"content":"*  `edit 2 r/befriendee n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"soons1"},"content":"#### Pairing a befriendee and volunteer : `pair`","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"soons1"},"content":"Pairs an existing befriendee and volunteer in Elder Scrolls.","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"Format: `pair BEFRIENDEE_INDEX VOLUNTEER_INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"soons1"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"* The Person at `BEFRIENDEE_INDEX` must be a volunteer and the Person at `VOLUNTEER_INDEX` must be a befriendee.","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"soons1"},"content":"* Neither of the two Persons must be paired, if they are, they must be unpaired before pairing again.","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"soons1"},"content":"Examples:","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"soons1"},"content":"*  `pair 1 2` Pairs the befriendee at Index 1 of the befriendee list and the volunteer at Index 2 of the volunteer list.","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"soons1"},"content":"*  `pair 3 3` Pairs the befriendee at Index 3 of the befriendee list and the volunteer at Index 3 of the volunteer list.","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"soons1"},"content":"#### Unpairing a befriendee and volunteer : `unpair`","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"soons1"},"content":"Pairs an existing befriendee and volunteer in Elder Scrolls.","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"Format: `unpair BEFRIENDEE_INDEX VOLUNTEER_INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"soons1"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"* The Person at `BEFRIENDEE_INDEX` must be a volunteer and the Person at `VOLUNTEER_INDEX` must be a befriendee.","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"soons1"},"content":"* The befriendee and volunteer must be paired with each other before they can be unpaired.","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"soons1"},"content":"Examples:","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"soons1"},"content":"*  `unpair 1 2` Unpairs the befriendee at Index 1 of the befriendee list and the volunteer at Index 2 of the volunteer list.","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"soons1"},"content":"*  `unpair 3 3` Unpairs the befriendee at Index 3 of the befriendee list and the volunteer at Index 3 of the volunteer list.","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"gerteck"},"content":"#### Listing all persons : `list`","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"gerteck"},"content":"Shows a list of all persons in Elder Scrolls.","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"gerteck"},"content":"Format: `list`","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"gerteck"},"content":"* Persons are listed in the order they were added.","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"gerteck"},"content":"* The list command is commonly used with the `find` command to reset the view after a search.","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"gerteck"},"content":"#### Locating persons by name: `find`","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"gerteck"},"content":"Find all persons whose names contain any of the given keywords. The find command also supports searches in the two","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"gerteck"},"content":"separate Volunteer and Befriendee lists, if the role is specified. It also supports search by tags, and by pairing status.","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"gerteck"},"content":"The order in which the role, tags or pair flag is specified does not matter.","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"gerteck"},"content":"Format: `find [r/ROLE] [t/TAG] [--paired]/[--unpaired] KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"gerteck"},"content":"* An alias for the command is `search`.","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"gerteck"},"content":"* The search is **case-insensitive**. The order of the keywords also does not matter. e.g. `hans bo` will match `Bo Hans`","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"gerteck"},"content":"* If the **role** is specified, the search will be limited to the specified respective List. The other list remains unaffected.","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"gerteck"},"content":"* If a **pairing status** is specified, the search will narrow down to either paired or non-paired persons. ","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"gerteck"},"content":"* Keyword only searches on name. Search via tag is also supported, by adding in appropriate tags..","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"gerteck"},"content":"* `find r/volunteer John` returns only the `John Doe` present in the volunteer list. ","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"gerteck"},"content":"* `find t/friend` returns all persons with the tag `friend`.","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"gerteck"},"content":"* `find --paired` returns all persons who are paired.","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"gerteck"},"content":"* Mix and match to customize your search! e.g. `find r/volunteer t/friend --paired John` returns all ","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"gerteck"},"content":"paired volunteers with the tag `friend` and name `John`.","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"gerteck"},"content":"* `find alex david` returns: \u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"gerteck"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Pro-Tip:**","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"gerteck"},"content":"Use the `list` command to reset your view after using the `find` command.","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"gerteck"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"gerteck"},"content":"#### Deleting a person : `delete`","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"gerteck"},"content":"Format: `delete INDEX r/ROLE`","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"soons1"},"content":"* `list` followed by `delete 2 r/volunteer` Deletes the 2nd volunteer in the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":220,"author":{"gitId":"soons1"},"content":"* `find Betsy` followed by `delete 1 r/befriendee` Deletes the 1st befriendee in the results of the `find` command.","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"gerteck"},"content":"### 3.2 Log Management","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"soons1"},"content":"#### Adding a log : `logadd`","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"soons1"},"content":"Adds a log between a pair of befriendee and volunteer.  ","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"CJerrong"},"content":"If it is the most recent log for a befriendee or volunteer, their `latest log` section will also be updated accordingly.","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"chaaaaun"},"content":"Format: `logadd BEFRIENDEE_INDEX VOLUNTEER_INDEX t/TITLE s/START_DATE d/DURATION r/REMARKS`","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":231,"author":{"gitId":"soons1"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"chaaaaun"},"content":"* The Person at `BEFRIENDEE_INDEX` must be a befriendee and the Person at `VOLUNTEER_INDEX` must be a volunteer.","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"soons1"},"content":"* The two Persons must be paired before a log can be added.","lastModifiedDate":"2024-04-01"},{"lineNumber":234,"author":{"gitId":"soons1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"soons1"},"content":"* The `START_DATE` must be in the format `YYYY-MM-DD`.","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"soons1"},"content":"* The `DURATION` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"soons1"},"content":"Examples:","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"soons1"},"content":"* `logadd 1 1 t/Movies s/2020-01-09 d/3 r/had popcorn` Adds a log between the befriendee at Index 1 and the volunteer at Index 1 with the title `Movies`, start date `2020-01-09`, duration `3` and remarks `had popcorn`.","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"soons1"},"content":"* `logadd 2 3 t/Shopping s/2020-09-09 d/2 r/bought groceries` Adds a log between the befriendee at Index 2 and the volunteer at Index 3 with the title `Shopping`, start date `2020-09-09`, duration `2` and remarks `bought groceries`.","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"chaaaaun"},"content":"#### Editing a log : `logedit`","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"chaaaaun"},"content":"Edits an existing log in Elder Scrolls.","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"chaaaaun"},"content":"Format: `logedit INDEX [t/TITLE] [s/START_DATE] [d/DURATION] [r/REMARKS]`","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"chaaaaun"},"content":"* Edits the log at the specified `INDEX`. The index refers to the index number shown in the displayed log list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"chaaaaun"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"chaaaaun"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"chaaaaun"},"content":"* The `START_DATE` must be in the format `YYYY-MM-DD`.","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"chaaaaun"},"content":"* The `DURATION` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"chaaaaun"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"chaaaaun"},"content":"* `logedit 1 t/Movies s/2020-01-09 d/3 r/had popcorn` Edits the title, start date, duration and remarks of the 1st log to be `Movies`, `2020-01-09`, `3` and `had popcorn` respectively.","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"chaaaaun"},"content":"* `logedit 2 t/Shopping s/2020-09-09 d/2` Edits the title, start date and duration of the 2nd log to be `Shopping`, `2020-09-09` and `2` respectively.","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"sdevih"},"content":"#### Deleting a log : `logdelete`, `logdel`, `logremove`, `logrm`","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"sdevih"},"content":"Deletes the specified log from the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"sdevih"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":264,"author":{"gitId":"sdevih"},"content":"* Deletes the log at the specified `INDEX`.","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"sdevih"},"content":"* The index refers to the index number shown in the displayed log list.","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"sdevih"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-03"},{"lineNumber":267,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":268,"author":{"gitId":"sdevih"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"sdevih"},"content":"* `list` followed by `logdelete 1` deletes the 1st log in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":270,"author":{"gitId":"sdevih"},"content":"* `logfind 1 r/befriendee` followed by `logdelete 1` deletes the 1st log in the results of the `logfind` command.","lastModifiedDate":"2024-04-03"},{"lineNumber":271,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":272,"author":{"gitId":"gerteck"},"content":"#### Finding a log associated with a person: `logfind`","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"gerteck"},"content":"Find all logs associated with a person.","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"gerteck"},"content":"Format: `logfind INDEX r/ROLE`","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"gerteck"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"gerteck"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":280,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"gerteck"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"gerteck"},"content":"* `logfind 1 r/befriendee` returns all logs associated with the befriendee at Index 1.","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":284,"author":{"gitId":"CJerrong"},"content":"### 3.3 Undo and Redo commands","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"CJerrong"},"content":"#### Undo the most recent command : `undo`","lastModifiedDate":"2024-04-03"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":287,"author":{"gitId":"CJerrong"},"content":"Undo the latest command that made a change to the data stored in Elder Scrolls.","lastModifiedDate":"2024-04-03"},{"lineNumber":288,"author":{"gitId":"CJerrong"},"content":"This excludes commands like `list`,`find` and `logfind` which do not mutate the state of any data in Elder Scrolls.","lastModifiedDate":"2024-04-03"},{"lineNumber":289,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":290,"author":{"gitId":"CJerrong"},"content":"Format: `undo`","lastModifiedDate":"2024-04-03"},{"lineNumber":291,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":292,"author":{"gitId":"CJerrong"},"content":"* The persons list and logs list will be refreshed to show all entries.","lastModifiedDate":"2024-04-03"},{"lineNumber":293,"author":{"gitId":"CJerrong"},"content":"* There must have been a previous command executed that modified data in Elder Scrolls.","lastModifiedDate":"2024-04-03"},{"lineNumber":294,"author":{"gitId":"CJerrong"},"content":"* At every launch of the application, there will be no commands to be undone.","lastModifiedDate":"2024-04-03"},{"lineNumber":295,"author":{"gitId":"CJerrong"},"content":"* Undo history will be erased when you exit the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":296,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":297,"author":{"gitId":"CJerrong"},"content":"Example:","lastModifiedDate":"2024-04-03"},{"lineNumber":298,"author":{"gitId":"CJerrong"},"content":"* You have just mistakenly executed a `clear` command and cleared every entry in Elder Scrolls. You can simply execute the command `undo` to revert the changes and all your entries in Elder Scrolls will be restored to their previous state, before the `clear` command was executed.","lastModifiedDate":"2024-04-03"},{"lineNumber":299,"author":{"gitId":"CJerrong"},"content":"* If you\u0027ve just performed multiple `delete` commands in sequence, and realised you\u0027ve deleted the wrong entries. You can execute simultaneous `undo` commands to revert the changes made by the wrongful delete commands.","lastModifiedDate":"2024-04-03"},{"lineNumber":300,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":301,"author":{"gitId":"CJerrong"},"content":"#### Revert the most recent undo command : `redo`","lastModifiedDate":"2024-04-03"},{"lineNumber":302,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":303,"author":{"gitId":"CJerrong"},"content":"Reverts the data stored in Elder Scrolls back to its state before the latest undo command was executed.","lastModifiedDate":"2024-04-03"},{"lineNumber":304,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":305,"author":{"gitId":"CJerrong"},"content":"Format: `redo`","lastModifiedDate":"2024-04-03"},{"lineNumber":306,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":307,"author":{"gitId":"CJerrong"},"content":"* The persons list and logs list will be refreshed to show all entries.","lastModifiedDate":"2024-04-03"},{"lineNumber":308,"author":{"gitId":"CJerrong"},"content":"* When a command that modifies data in Elder Scrolls is executed after an undo command is executed, the redo command will no longer be available.","lastModifiedDate":"2024-04-03"},{"lineNumber":309,"author":{"gitId":"CJerrong"},"content":"* There must have been a previous undo command executed in Elder Scrolls.","lastModifiedDate":"2024-04-03"},{"lineNumber":310,"author":{"gitId":"CJerrong"},"content":"* Redo history will be erased when you exit the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":311,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":312,"author":{"gitId":"CJerrong"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":313,"author":{"gitId":"CJerrong"},"content":"* Let\u0027s say you\u0027ve just executed a successful `undo` command. If you were to call any command that modifies the data in Elder Scrolls, such as `delete`, the `redo` command will not longer be available.","lastModifiedDate":"2024-04-03"},{"lineNumber":314,"author":{"gitId":"CJerrong"},"content":"* Let\u0027s say you\u0027ve just executed a `add`, and mistakenly executed a `undo` command right after. You can then call `redo` to once again execute the `add` that was previously undone.","lastModifiedDate":"2024-04-03"},{"lineNumber":315,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":316,"author":{"gitId":"CJerrong"},"content":"### 3.4 Other Commands: Help and Exiting","lastModifiedDate":"2024-04-03"},{"lineNumber":317,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":318,"author":{"gitId":"gerteck"},"content":"#### Viewing help : `help`","lastModifiedDate":"2024-03-26"},{"lineNumber":319,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":320,"author":{"gitId":"gerteck"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2024-03-26"},{"lineNumber":321,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":322,"author":{"gitId":"gerteck"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":323,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":324,"author":{"gitId":"gerteck"},"content":"Format: `help`","lastModifiedDate":"2024-03-26"},{"lineNumber":325,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":326,"author":{"gitId":"gerteck"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2024-03-26"},{"lineNumber":327,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":328,"author":{"gitId":"gerteck"},"content":"Clears all entries from Elder Scrolls.","lastModifiedDate":"2024-03-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"gerteck"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2024-03-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"gerteck"},"content":"## **4. Saving the data**","lastModifiedDate":"2024-03-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"gerteck"},"content":"Elder Scrolls data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually!","lastModifiedDate":"2024-03-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"gerteck"},"content":"## **5. Editing the data file**","lastModifiedDate":"2024-03-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":344,"author":{"gitId":"chaaaaun"},"content":"All application data is saved automatically as a JSON file `[JAR file location]/data/datastore.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-04"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":347,"author":{"gitId":"gerteck"},"content":"If your changes to the data file makes its format invalid, Elder Scrolls will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":348,"author":{"gitId":"gerteck"},"content":"Furthermore, certain edits can cause the Elder Scrolls to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":351,"author":{"gitId":"gerteck"},"content":"## **6. FAQ**","lastModifiedDate":"2024-03-26"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"gerteck"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Elder Scrolls home folder.","lastModifiedDate":"2024-03-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"gerteck"},"content":"## **7. Known issues**","lastModifiedDate":"2024-03-26"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":361,"author":{"gitId":"gerteck"},"content":"## **8. Command summary**","lastModifiedDate":"2024-03-26"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"gerteck"},"content":"**Add** | `add n/NAME r/ROLE p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho r/volunteer p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2024-03-26"},{"lineNumber":366,"author":{"gitId":"gerteck"},"content":"**Edit** | `edit INDEX r/ROLE [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-03-26"},{"lineNumber":367,"author":{"gitId":"chaaaaun"},"content":"**Pair** | `pair BEFRIENDEE_INDEX VOLUNTEER_INDEX`\u003cbr\u003e e.g., `pair 1 2`","lastModifiedDate":"2024-04-04"},{"lineNumber":368,"author":{"gitId":"chaaaaun"},"content":"**Unpair** | `unpair BEFRIENDEE_INDEX VOLUNTEER_INDEX`\u003cbr\u003e e.g., `unpair 1 2`","lastModifiedDate":"2024-04-04"},{"lineNumber":369,"author":{"gitId":"soons1"},"content":"**Delete** | `delete INDEX r/ROLE`\u003cbr\u003e e.g., `delete 3 r/befriendee`","lastModifiedDate":"2024-04-01"},{"lineNumber":370,"author":{"gitId":"gerteck"},"content":"**Find** | `find [r/ROLE] [t/TAG] [--paired]/[--unpaired] KEYWORD [MORE_KEYWORDS]...` \u003cbr\u003e e.g., `find r/volunteer --paired James`","lastModifiedDate":"2024-04-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"chaaaaun"},"content":"**LogAdd** | `logadd BEFRIENDEE_INDEX VOLUNTEER_INDEX t/TITLE s/START_DATE d/DURATION r/REMARKS`\u003cbr\u003e e.g., `logadd 1 2 t/Movies s/2020-01-09 d/3 r/had popcorn`","lastModifiedDate":"2024-04-04"},{"lineNumber":373,"author":{"gitId":"chaaaaun"},"content":"**LogEdit** | `logedit INDEX [t/TITLE] [s/START_DATE] [d/DURATION] [r/REMARKS]`\u003cbr\u003e e.g., `logedit 1 t/Movies s/2020-01-09 d/3 r/had popcorn`","lastModifiedDate":"2024-04-04"},{"lineNumber":374,"author":{"gitId":"chaaaaun"},"content":"**LogDelete** | `logdelete INDEX`\u003cbr\u003e e.g., `logdelete 1`","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"gerteck"},"content":"**LogFind** | `logfind INDEX r/ROLE`\u003cbr\u003e e.g., `logfind 1 r/befriendee`","lastModifiedDate":"2024-04-02"},{"lineNumber":376,"author":{"gitId":"soons1"},"content":"**Clear** | `clear`","lastModifiedDate":"2024-04-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":379,"author":{"gitId":"soons1"},"content":"## **9. Glossary**","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"CJerrong":35,"soons1":43,"gerteck":116,"chaaaaun":43,"-":128,"sdevih":14}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"gerteck"},"content":"    content: \"Elder Scrolls\";","lastModifiedDate":"2024-03-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"gerteck":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1 r/volunteer\"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1 r/volunteer\")","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"sdevih":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"Volunteer .left.|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"Befriendee .left.|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"Person *--\u003e \"0..1\" pairedWith","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"Person *--\u003e Role","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":3,"soons1":2,"-":21}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"if () then ([command commits Datastore])","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    :Save Datastore to","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    datastoreVersions;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":3,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"[-\u003e LogicManager : execute(\"delete 1 r/volunteer\")","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1 r/volunteer\")","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1 r/volunteer\")","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":67,"sdevih":3}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"[-\u003e LogicManager : execute(\"find r/volunteer --unpaired\")","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"activate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find r/volunteer --unpaired\")","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"create FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"r/volunteer --unpaired\")","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"create FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"activate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"FindCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.\u0027","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"activate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"ref over FindCommand : Execute FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"FindCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"destroy FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"gerteck":54}},{"path":"docs/diagrams/FindSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"mainframe Execute FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"participant \":Datastore\" as Datastore MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"participant \":PersonStore\" as PersonStore MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"activate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"\u0027get PersonStore\u0027","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"FindCommand -\u003e Model : getMutableDatastore()","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"Model --\u003e FindCommand : Datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"FindCommand -\u003e Datastore : getPersonStore()","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"activate Datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"Datastore --\u003e FindCommand : PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"deactivate Datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"alt isSearchingVolunteer \u0026\u0026 isSearchingBefriendee","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"    FindCommand -\u003e FindCommand : searchAllPersons()","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"    activate FindCommand #FFBBBB","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    opt isSearchingPaired","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredPersonList(Person::isPaired)","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"    opt isSearchingName","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredPersonList(namePredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"    opt isSearchingTag","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredPersonList(tagPredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"        deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"else isSearchingVolunteer","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"    FindCommand -\u003e FindCommand : searchVolunteerOnly()","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"    activate FindCommand #b0e396","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"    opt isSearchingPaired","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredVolunteerList(Person::isPaired)","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"    opt isSearchingName","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredVolunteerList(namePredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"    opt isSearchingTag","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredVolunteerList(tagPredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"else else","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"    FindCommand -\u003e FindCommand : searchBefriendeeOnly()","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"    activate FindCommand #96ace3","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"    opt isSearchingPaired","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredBefriendeeList(Person::isPaired)","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"    opt isSearchingName","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredBefriendeeList(namePredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"gerteck"},"content":"    opt isSearchingTag","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"        FindCommand -\u003e PersonStore : updateFilteredBefriendeeList(tagPredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"        activate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"        deactivate PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"        deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"    end","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"gerteck"},"content":"end","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"create CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"activate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"\u003c-- FindCommand : result","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"gerteck":105}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyDatastore\" as ReadOnlyDatastore","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyPersonStore\" as ReadOnlyPersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyLogStore\" as ReadOnlyLogStore","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"Class Datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"Class PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"Class LogStore","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"Class \"{abstract}\\nPerson\" as Person","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"Class Role","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"Class Log","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"Class Volunteer","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"Class Befriendee","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"Datastore .up.|\u003e ReadOnlyDatastore","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"PersonStore .up.|\u003e ReadOnlyPersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"LogStore .up.|\u003e ReadOnlyLogStore","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"ReadOnlyPersonStore .up.\u003e ReadOnlyDatastore","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"ReadOnlyLogStore .up.\u003e ReadOnlyDatastore","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"Model .left.\u003e ReadOnlyDatastore","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"ModelManager -left-\u003e \"1\" Datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"Datastore *-down-\u003e \"1\" PersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"Datastore *-down-\u003e \"1\" LogStore","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"LogStore *--\u003e \"*\" Log","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"PersonStore *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"Person *--\u003e Role","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"Volunteer .up.|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"Befriendee .up.|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"Volunteer -[hidden]right--\u003e Befriendee","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"Person -[hidden]right--\u003e Volunteer","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"Person -[hidden]right--\u003e Befriendee","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"ReadOnlyPersonStore -[hidden]right--\u003e Datastore","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"ReadOnlyLogStore -[hidden]right--\u003e ReadOnlyPersonStore","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"Volunteer\"0..1\" - \"0..1\"Befriendee: pairedWith","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"(Volunteer, Befriendee) .. Log","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"Befriendee -[hidden]down Volunteer","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"\u0027ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"soons1":1,"gerteck":12,"chaaaaun":34,"-":45}},{"path":"docs/diagrams/PairSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"participant \"u:PairCommand\" as PairCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"[-\u003e LogicManager : execute(pair)","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"activate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(pair)","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"create PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"AddressBookParser -\u003e PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"activate PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"PairCommand --\u003e AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"deactivate PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"LogicManager -\u003e PairCommand : execute()","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"activate PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"PairCommand -\u003e Model : getMutableDatastore()","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"Model --\u003e PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"PairCommand -\u003e Model : setPerson()","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"PairCommand -\u003e Model : setPerson()","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"PairCommand -\u003e Model : updateFilteredPersonList()","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"Model --\u003e PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"PairCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"deactivate PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"PairCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"destroy PairCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"soons1":54}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"package \"Datastore Storage\" #F4F6F6{","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nDatastoreStorage\" as DatastoreStorage","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"Class JsonDatastoreStorage","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"Class JsonSerializableDatastore","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"StorageManager -up-\u003e \"1\" DatastoreStorage","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"Storage -right-|\u003e DatastoreStorage","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"JsonDatastoreStorage .up.|\u003e DatastoreStorage","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"JsonDatastoreStorage ..\u003e JsonSerializableDatastore","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"JsonSerializableDatastore --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chaaaaun":9,"-":34}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"MainWindow *-down-\u003e \"2\" PersonListPanel","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":1,"-":59}},{"path":"docs/diagrams/UndoRedoState0-InitialState.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"title Initial state","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"package States {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"    class State1 as \"\u003cu\u003eds0:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    class State2 as \"\u003cu\u003eds1:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    class State3 as \"\u003cu\u003eds2:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"hide State2","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"hide State3","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"@end","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":21}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"    class State1 as \"\u003cu\u003eds0:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":1,"-":18}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"title After command \"delete 5 r/volunteer\"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"    class State1 as \"\u003cu\u003eds:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    class State2 as \"\u003cu\u003eds1:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"    class State1 as \"\u003cu\u003eds0:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    class State2 as \"\u003cu\u003eds1:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    class State3 as \"\u003cu\u003eds2:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":3,"-":18}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"    class State1 as \"\u003cu\u003eds0:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    class State2 as \"\u003cu\u003eds1:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    class State3 as \"\u003cu\u003eds2:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"    class State1 as \"\u003cu\u003eds0:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    class State2 as \"\u003cu\u003eds1:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    class State3 as \"\u003cu\u003eds2:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":3,"-":18}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"    class State1 as \"\u003cu\u003eds0:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    class State2 as \"\u003cu\u003eds1:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    class State3 as \"\u003cu\u003eds3:Datastore\u003c/u\u003e\"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"note right on link: State ds2 deleted.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":4,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"UndoCommand -\u003e Model : canUndoDatastore()","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"UndoCommand -\u003e Model : undoChanges()","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CJerrong":3,"-":45}},{"path":"docs/diagrams/UndoSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"participant \":DatastoreVersionStorage\" as DatastoreVersionStorage MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"[-\u003e Model : canUndoDatastore()","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"Model -\u003e DatastoreVersionStorage : canUndo()","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"activate DatastoreVersionStorage","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"DatastoreVersionStorage --\u003e Model","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"[\u003c-- Model","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"[-\u003e Model : undoChanges()","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"Model -\u003e DatastoreVersionStorage : executeUndo()","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"DatastoreVersionStorage --\u003e Model : prevDatastore","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"deactivate DatastoreVersionStorage","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"Model -\u003e Model : setDataStore(prevDatastore)","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"[\u003c-- Model","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"CJerrong":13,"-":16}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"title: Elder Scrolls","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"[//]: # (![Ui]\u0026#40;images/Ui.png\u0026#41;{: width\u003d\"600\"})","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"\u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"  \u003cimg src\u003d\"images/Ui.png\" alt\u003d\"Ui\" width\u003d\"600\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"  \u003ctext\u003e Elder Scrolls \u003c/text\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"  \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"**Elder Scrolls is a desktop volunteer management system application for managing both volunteers, and befriendees.**","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"Elder Scrolls, our Volunteer Management System (VMS), simplifies organizing volunteers and befriendees. Developed for efficiency by our team, it streamlines coordination and fosters community connections.","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"No more cumbersome scheduling or scattered communication. Manage volunteers and befriendees seamlessly in one intuitive platform. Say goodbye to endless emails and spreadsheets – Elder Scrolls centralizes tasks, making them faster and more effective. Experience efficient volunteer management – where organizing, coordinating, and connecting has never been easier.","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"* If you are interested in using Elder Scrolls, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"* If you are interested about developing Elder Scrolls, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"gerteck":20,"-":16}},{"path":"docs/team/chaaaaun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"layout: page","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"title: Tu Jia En\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"### Project: Elder Scrolls","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"chaaaaun":6}},{"path":"docs/team/cjerrong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"                                    ---","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"layout: page","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"title: CJerrong\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"* **Project management**:","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    * User Guide:","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"* **Community**:","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"* **Tools**:","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"CJerrong":46}},{"path":"docs/team/gerteck.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"layout: page","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"title: Ger Teck\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"* **Project management**:","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"  * User Guide:","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"* **Community**:","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"* **Tools**:","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"gerteck":46}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"_---","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"* _{you can add/remove categories in the list above}__","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"CJerrong":2,"-":44}},{"path":"docs/team/sdevih.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"layout: page","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"title: S Devi Harshitha\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"* **Project management**:","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":"    * User Guide:","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"* **Community**:","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"sdevih"},"content":"* **Tools**:","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"sdevih"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"sdevih"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"sdevih":46}},{"path":"docs/team/soons1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"layout: page","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"---","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"* **Project management**:","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"  * User Guide:","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"* **Community**:","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"* **Tools**:","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"soons1":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"import model.scrolls.elder.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"import static util.commons.scrolls.elder.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"chaaaaun"},"content":"Simply add the following to [`ui.scrolls.elder.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"chaaaaun":3,"-":396}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"The `address` field in `Person` is actually an instance of the `person.model.scrolls.elder.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chaaaaun":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `logic.scrolls.elder.Logic`.","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"A quick look at the `logic.scrolls.elder.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chaaaaun":2,"-":299}},{"path":"src/main/java/scrolls/elder/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.FileUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"chaaaaun":4,"-":69}},{"path":"src/main/java/scrolls/elder/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"chaaaaun":2,"-":39}},{"path":"src/main/java/scrolls/elder/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.Config;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.Version;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ConfigUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Logic;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.LogicManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.DatastoreStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.JsonDatastoreStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.Storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.StorageManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.UserPrefsStorage;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.ui.Ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.ui.UiManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Elder Scrolls ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        DatastoreStorage datastoreStorage \u003d new JsonDatastoreStorage(userPrefs.getDatastoreFilePath());","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        storage \u003d new StorageManager(datastoreStorage, userPrefsStorage);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s datastore and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"     * The data from the sample datastore will be used instead if {@code storage}\u0027s datastore is not found,","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"     * or an empty datastore will be used instead if errors occur when reading {@code storage}\u0027s datastore.","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"        logger.info(\"Using data file : \" + storage.getDatastoreFilePath());","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        Optional\u003cReadOnlyDatastore\u003e datastoreOptional;","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        ReadOnlyDatastore initialData;","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"            datastoreOptional \u003d storage.readDatastore();","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"            if (datastoreOptional.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"                logger.info(\"Creating a new data file \" + storage.getDatastoreFilePath()","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"                        + \" populated with sample data.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"            initialData \u003d datastoreOptional.orElseGet(SampleDataUtil::getSampleDatastore);","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"            logger.warning(\"Data file at \" + storage.getDatastoreFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"                    + \" Will be starting no data.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"            initialData \u003d new Datastore();","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"chaaaaun"},"content":"        logger.info(\"Starting Elder Scrolls \" + MainApp.VERSION);","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"chaaaaun"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Elder Scrolls ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":43,"-":143}},{"path":"src/main/java/scrolls/elder/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    @JsonProperty(\"userPrefsFilePath\")","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    public String getUserPrefsFilePathString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        return userPrefsFilePath.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":9,"-":64}},{"path":"src/main/java/scrolls/elder/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CJerrong":1,"chaaaaun":2,"-":79}},{"path":"src/main/java/scrolls/elder/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":1,"-":105}},{"path":"src/main/java/scrolls/elder/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":1,"-":120}},{"path":"src/main/java/scrolls/elder/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core.index;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chaaaaun":2,"-":67}},{"path":"src/main/java/scrolls/elder/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"chaaaaun":1,"-":10}},{"path":"src/main/java/scrolls/elder/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":1,"-":20}},{"path":"src/main/java/scrolls/elder/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.MainApp;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chaaaaun":2,"-":40}},{"path":"src/main/java/scrolls/elder/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":1,"-":34}},{"path":"src/main/java/scrolls/elder/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.Config;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chaaaaun":3,"-":20}},{"path":"src/main/java/scrolls/elder/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":1,"-":82}},{"path":"src/main/java/scrolls/elder/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    private static final ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":4,"-":140}},{"path":"src/main/java/scrolls/elder/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":2,"-":66}},{"path":"src/main/java/scrolls/elder/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"chaaaaun":1,"-":52}},{"path":"src/main/java/scrolls/elder/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.CommandResult;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    ObservableList\u003cPerson\u003e getFilteredVolunteerList();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    ObservableList\u003cPerson\u003e getFilteredBefriendeeList();","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    /** Returns an unmodifiable view of the filtered list of logs */","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    ObservableList\u003cLog\u003e getLogList();","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    /** Returns the datastore of the model */","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    ReadOnlyDatastore getDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    Path getDatastoreFilePath();","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"CJerrong":14,"chaaaaun":7,"-":35}},{"path":"src/main/java/scrolls/elder/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.Command;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.CommandResult;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.AddressBookParser;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.Storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"            storage.saveDatastore(model.getDatastore());","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        return model.getDatastore().getPersonStore().getFilteredPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"    public ObservableList\u003cPerson\u003e getFilteredVolunteerList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        return model.getDatastore().getPersonStore().getFilteredVolunteerList();","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"    public ObservableList\u003cPerson\u003e getFilteredBefriendeeList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"        return model.getDatastore().getPersonStore().getFilteredBefriendeeList();","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"    public ObservableList\u003cLog\u003e getLogList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"        return model.getDatastore().getLogStore().getLogList();","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"    public ReadOnlyDatastore getDatastore() {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"        return model.getDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"    public Path getDatastoreFilePath() {","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"        return model.getDatastoreFilePath();","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"CJerrong":17,"chaaaaun":17,"-":70}},{"path":"src/main/java/scrolls/elder/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.Prefix;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_INVALID_LOG_DISPLAYED_INDEX \u003d \"The log index provided is invalid\";","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE \u003d \"%1$d persons listed with role %2$s!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_CONTACT_PAIRED_BEFORE_DELETE \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"            \"Contact is paired. Please unpair before deleting.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"sdevih"},"content":"    public static String formatPerson(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"                .append(\"; Role: \")","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"                .append(person.getRole())","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"sdevih"},"content":"     * Formats the {@code log} for display to the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"    public static String formatLog(Log log) {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"sdevih"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"        builder.append(\"Title: \")","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"                .append(log.getLogTitle())","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"                .append(\"; Volunteer ID: \")","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"sdevih"},"content":"                .append(log.getVolunteerId())","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"sdevih"},"content":"                .append(\"; Befriendee ID: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"sdevih"},"content":"                .append(log.getBefriendeeId())","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"sdevih"},"content":"                .append(\"; Start Date: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"sdevih"},"content":"                .append(log.getStartDate())","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"sdevih"},"content":"                .append(\"; Duration: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"sdevih"},"content":"                .append(log.getDuration())","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"sdevih"},"content":"                .append(\"; Remarks: \")","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"sdevih"},"content":"                .append(log.getRemarks());","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"sdevih"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CJerrong":3,"gerteck":4,"chaaaaun":3,"-":47,"sdevih":23}},{"path":"src/main/java/scrolls/elder/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"            + PREFIX_ROLE + \"{VOLUNTEER or BEFRIENDEE} \"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"            + PREFIX_ROLE + \"volunteer \"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"     * Contains data for the person to be added.","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"     * Does not contain the final person ID.","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        PersonStore store \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        if (store.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        store.addPerson(toAdd);","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        model.getDatastore().getPersonStore().updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"sdevih"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatPerson(toAdd)));","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CJerrong":1,"gerteck":9,"chaaaaun":14,"-":70,"sdevih":1}},{"path":"src/main/java/scrolls/elder/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        model.setDatastore(new Datastore());","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"        model.getDatastore().getPersonStore().updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CJerrong":1,"gerteck":1,"chaaaaun":4,"-":19}},{"path":"src/main/java/scrolls/elder/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":3,"-":17}},{"path":"src/main/java/scrolls/elder/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":2,"-":80}},{"path":"src/main/java/scrolls/elder/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":" * Deletes a person identified using its displayed index from the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD_DELETE \u003d \"delete\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD_DEL \u003d \"del\";","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD_RM \u003d \"rm\";","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD_REMOVE \u003d \"remove\";","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_DELETE","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list and their type.\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":"            + \"Parameters: INDEX (must be a positive integer), TYPE (volunteer or befriendee)\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD_DELETE + \" 1 \"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":"            + PREFIX_ROLE","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"            + \"{VOLUNTEER or BEFRIENDEE}\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"            + \"Alternatively, you can also delete a person using the following commands as well.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD_DEL + \" 1\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"            + PREFIX_ROLE","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"            + \"{VOLUNTEER or BEFRIENDEE}\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD_RM + \" 1\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"            + PREFIX_ROLE","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"            + \"{VOLUNTEER or BEFRIENDEE}\\n\"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD_REMOVE + \" 1\"","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"sdevih"},"content":"            + PREFIX_ROLE","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"sdevih"},"content":"            + \"{VOLUNTEER or BEFRIENDEE}\\n\";","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_DELETE_PERSON_ERROR \u003d \"Unable to delete contact: \";","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_CONFIRM_DELETE \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"sdevih"},"content":"            \"Valid contact inputted. Are you sure you want to delete this contact?\";","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    public static final String MESSAGE_NO_ROLE \u003d \"Role must be specified when editing a person.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    private final Role role;","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"     * Creates a DeleteCommand to delete the person at the specified {@code targetIndex}.","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    public DeleteCommand(Index targetIndex, Role role) {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        PersonStore store \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e lastShownList;","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        if (role.isVolunteer()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"            lastShownList \u003d store.getFilteredVolunteerList();","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"            lastShownList \u003d store.getFilteredBefriendeeList();","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"sdevih"},"content":"            throw new CommandException(MESSAGE_DELETE_PERSON_ERROR + Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"sdevih"},"content":"        //Check if the person to be deleted is paired with another person.","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"sdevih"},"content":"        if (personToDelete.isPairPresent(personToDelete)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"sdevih"},"content":"            throw new CommandException(MESSAGE_DELETE_PERSON_ERROR + Messages.MESSAGE_CONTACT_PAIRED_BEFORE_DELETE);","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"        store.removePerson(personToDelete);","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"gerteck"},"content":"        store.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"sdevih"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.formatPerson(personToDelete)));","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"                .add(\"role\", role)","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CJerrong":1,"gerteck":1,"chaaaaun":27,"-":50,"sdevih":35}},{"path":"src/main/java/scrolls/elder/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"            + PREFIX_ROLE + \"volunteer \"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"    public static final String MESSAGE_NO_ROLE \u003d \"Role must be specified for indexing when editing a person.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"        Role role \u003d editPersonDescriptor.getRole().orElse(personToEdit.getRole());","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cName\u003e pairedWithName \u003d personToEdit.getPairedWithName();","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"        Optional\u003cInteger\u003e pairedWithId \u003d personToEdit.getPairedWithId();","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"soons1"},"content":"        int timeServed \u003d personToEdit.getTimeServed();","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cInteger\u003e latestLogId \u003d personToEdit.getLatestLogId();","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        return PersonFactory.withIdFromParams(personToEdit.getPersonId(), updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"                updatedAddress, role, updatedTags, pairedWithName, pairedWithId, timeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"                latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"    private static Person createEditedPair(Person editedPerson, Person originalPair) {","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"        // Will check before calling this function that the editedPerson is paired","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"        Name updatedName \u003d originalPair.getName();","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"        Phone updatedPhone \u003d originalPair.getPhone();","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"        Email updatedEmail \u003d originalPair.getEmail();","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        Address updatedAddress \u003d originalPair.getAddress();","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"        Set\u003cTag\u003e updatedTags \u003d originalPair.getTags();","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"        Role role \u003d originalPair.getRole();","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cName\u003e updatedPairedWithName \u003d Optional.of(editedPerson.getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"        Optional\u003cInteger\u003e updatedPairedWithID \u003d Optional.of(editedPerson.getPersonId());","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"soons1"},"content":"        int timeServed \u003d originalPair.getTimeServed();","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cInteger\u003e updatedLatestLogId \u003d originalPair.getLatestLogId();","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"        return PersonFactory.withIdFromParams(editedPerson.getPersonId(), updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"                updatedAddress, role, updatedTags,","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"                updatedPairedWithName, updatedPairedWithID, timeServed, updatedLatestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        PersonStore store \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"        LogStore logStore \u003d model.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"        if (editPersonDescriptor.getRole().isEmpty()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"            throw new CommandException(MESSAGE_NO_ROLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e lastShownList;","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"        if (editPersonDescriptor.getRole().get().isVolunteer()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"            lastShownList \u003d store.getFilteredVolunteerList();","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"            lastShownList \u003d store.getFilteredBefriendeeList();","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"gerteck"},"content":"        assert editedPerson.isSamePerson(personToEdit) : \"Edited person should be the same person\";","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"        if (editedPerson.isPaired()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"            Person pairedWith \u003d store.getPersonFromID(editedPerson.getPairedWithId().get());","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"            Person pairedWithUpdated \u003d createEditedPair(editedPerson, pairedWith);","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"            store.setPerson(pairedWith, pairedWithUpdated);","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"        store.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"gerteck"},"content":"        store.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"sdevih"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson)));","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"gerteck"},"content":"        private Role role;","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"chaaaaun"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"gerteck"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":267,"author":{"gitId":"gerteck"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2024-03-15"},{"lineNumber":268,"author":{"gitId":"gerteck"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2024-03-15"},{"lineNumber":269,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":270,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":271,"author":{"gitId":"chaaaaun"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"chaaaaun"},"content":"            this.role \u003d role;","lastModifiedDate":"2024-03-21"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":291,"author":{"gitId":"CJerrong"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":292,"author":{"gitId":"gerteck"},"content":"                    \u0026\u0026 Objects.equals(role, otherEditPersonDescriptor.role);","lastModifiedDate":"2024-03-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":303,"author":{"gitId":"CJerrong"},"content":"                    .add(\"role\", role)","lastModifiedDate":"2024-03-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"CJerrong":36,"soons1":2,"gerteck":14,"chaaaaun":53,"-":201,"sdevih":1}},{"path":"src/main/java/scrolls/elder/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chaaaaun":2,"-":17}},{"path":"src/main/java/scrolls/elder/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.TagListContainsTagsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"    public static final String COMMAND_WORD_FIND \u003d \"find\";","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"    public static final String COMMAND_WORD_SEARCH \u003d \"search\";","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_FIND + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"            + \"the specified keywords (case-insensitive), displays them in the respective lists with index numbers.\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"            + \"Parameters: [r/ROLE] [t/TAG] [--paired]/[--unpaired] KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"            + \"Example: \" + COMMAND_WORD_FIND + \" alice bob charlie\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"    private final TagListContainsTagsPredicate tagPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"    private final Boolean isSearchingVolunteer;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"    private final Boolean isSearchingBefriendee;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"    private final Boolean isSearchingNamePredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"    private final Boolean isSearchingTagPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"    private final Boolean isSearchingPaired;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    private final Boolean isSearchingUnpaired;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"     * Creates a FindCommand to find the specified {@code NameContainsKeywordsPredicate}","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"    public FindCommand(NameContainsKeywordsPredicate namePredicate, TagListContainsTagsPredicate tagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"                       Boolean isSearchingVolunteer, Boolean isSearchingBefriendee,","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"                       Boolean isSearchingPaired, Boolean isSearchingUnpaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"        this.isSearchingNamePredicate \u003d !namePredicate.isEmpty();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"        this.isSearchingTagPredicate \u003d !tagPredicate.isEmpty();","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"        this.isSearchingBefriendee \u003d isSearchingBefriendee;","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"        this.isSearchingVolunteer \u003d isSearchingVolunteer;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"        this.isSearchingPaired \u003d isSearchingPaired;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"        this.isSearchingUnpaired \u003d isSearchingUnpaired;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        PersonStore store \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"        assert (isSearchingVolunteer || isSearchingBefriendee)","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"                : \"At least one or both isSearchingVolunteer and isSearchingBefriendee should be true.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"        if (isSearchingVolunteer \u0026\u0026 isSearchingBefriendee) {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"            return searchAllPersons(store);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"        } else if (isSearchingVolunteer) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"            return searchVolunteerOnly(store);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"            return searchBefriendeeOnly(store);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"    private CommandResult searchAllPersons(PersonStore store) {","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"        if (isSearchingPaired \u0026\u0026 !isSearchingUnpaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredPersonList(Person::isPaired);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        } else if (isSearchingUnpaired \u0026\u0026 !isSearchingPaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredPersonList(Person -\u003e !Person.isPaired());","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"        if (isSearchingNamePredicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"        if (isSearchingTagPredicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredPersonList(tagPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, store.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"    private CommandResult searchVolunteerOnly(PersonStore store) {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"        if (isSearchingPaired \u0026\u0026 !isSearchingUnpaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredVolunteerList(Person::isPaired);","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"        } else if (isSearchingUnpaired \u0026\u0026 !isSearchingPaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredVolunteerList(Person -\u003e !Person.isPaired());","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"        if (isSearchingNamePredicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredVolunteerList(namePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"        if (isSearchingTagPredicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredVolunteerList(tagPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"gerteck"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE,","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"gerteck"},"content":"                        store.getFilteredVolunteerList().size(),","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"gerteck"},"content":"                        \"volunteer\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"    private CommandResult searchBefriendeeOnly(PersonStore store) {","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"        if (isSearchingPaired \u0026\u0026 !isSearchingUnpaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredBefriendeeList(Person::isPaired);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"        } else if (isSearchingUnpaired \u0026\u0026 !isSearchingPaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredBefriendeeList(Person -\u003e !Person.isPaired());","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"gerteck"},"content":"        if (isSearchingNamePredicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredBefriendeeList(namePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"gerteck"},"content":"        if (isSearchingTagPredicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"gerteck"},"content":"            store.updateFilteredBefriendeeList(tagPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"gerteck"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE,","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"gerteck"},"content":"                        store.getFilteredBefriendeeList().size(),","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"gerteck"},"content":"                        \"befriendee\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"gerteck"},"content":"        return namePredicate.equals(otherFindCommand.namePredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"gerteck"},"content":"                \u0026\u0026 tagPredicate.equals(otherFindCommand.tagPredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"gerteck"},"content":"                \u0026\u0026 isSearchingVolunteer.equals(otherFindCommand.isSearchingVolunteer)","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"gerteck"},"content":"                \u0026\u0026 isSearchingBefriendee.equals(otherFindCommand.isSearchingBefriendee);","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"gerteck"},"content":"                .add(\"namePredicate\", namePredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"gerteck"},"content":"                .add(\"tagPredicate\", tagPredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"gerteck"},"content":"                .add(\"isSearchingVolunteer\", isSearchingVolunteer)","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"gerteck"},"content":"                .add(\"isSearchingBefriendee\", isSearchingBefriendee)","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"gerteck"},"content":"                .add(\"isSearchingPaired\", isSearchingPaired)","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"gerteck"},"content":"                .add(\"isSearchingUnpaired\", isSearchingUnpaired)","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"gerteck":114,"chaaaaun":8,"-":38}},{"path":"src/main/java/scrolls/elder/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":2,"-":19}},{"path":"src/main/java/scrolls/elder/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.ReadOnlyLogStore;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.ReadOnlyPersonStore;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons and logs!\";","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"        ReadOnlyLogStore logStore \u003d model.getDatastore().getLogStore();","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"        ReadOnlyPersonStore personStore \u003d model.getDatastore().getPersonStore();","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"        personStore.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"        logStore.updateFilteredLogList(LogStore.PREDICATE_SHOW_ALL_LOGS);","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"        logStore.updateFilteredLogListByPersonId(null);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gerteck":12,"chaaaaun":2,"-":19}},{"path":"src/main/java/scrolls/elder/logic/commands/LogAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_REMARKS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"public class LogAddCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    public static final String COMMAND_WORD \u003d \"logadd\";","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a log to the address book. \"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"        + \"Parameters: BEFRIENDEE_INDEX VOLUNTEER_INDEX \"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        + PREFIX_START + \"START_DATE (yyyy-MM-dd) \"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        + PREFIX_DURATION + \"DURATION (in hours) \"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        + PREFIX_REMARKS + \"REMARKS \"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"        + \"\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 2 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        + PREFIX_TITLE + \"Icebreaker session \"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        + PREFIX_START + \"2021-03-01 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        + PREFIX_DURATION + \"2 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        + PREFIX_REMARKS + \"was a good session \";","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New log added!\";","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"    public static final String MESSAGE_NEGATIVE_DURATION \u003d \"Duration cannot be negative.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"    public static final String MESSAGE_PERSONS_NOT_PAIRED \u003d \"The volunteer and befriendee are not paired.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"     * Contains data for the log to be added.","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"     * Does not contain the final log ID.","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"    private final String title;","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    private final Index volunteerIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    private final Index befriendeeIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    private final int duration;","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"    private final Date startDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    private final String remarks;","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"     * Creates an LogAddCommand to add the specified {@code Log}","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"    public LogAddCommand(String title, Index befriendeeIndex, Index volunteerIndex, int duration,","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"                         Date startDate, String remarks) {","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        this.volunteerIndex \u003d volunteerIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        this.befriendeeIndex \u003d befriendeeIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"soons1"},"content":"        if (duration \u003c 0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"soons1"},"content":"            throw new CommandException(MESSAGE_NEGATIVE_DURATION);","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"        PersonStore personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"        LogStore logStore \u003d model.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e lastShownBList \u003d personStore.getFilteredBefriendeeList();","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e lastShownVList \u003d personStore.getFilteredVolunteerList();","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"        if (befriendeeIndex.getZeroBased() \u003e\u003d lastShownBList.size()","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"            || volunteerIndex.getZeroBased() \u003e\u003d lastShownVList.size()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"        Person befriendee \u003d lastShownBList.get(befriendeeIndex.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"        Person volunteer \u003d lastShownVList.get(volunteerIndex.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"soons1"},"content":"        if (!befriendee.isPairedWith(volunteer) \u0026\u0026 !volunteer.isPairedWith(befriendee)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"soons1"},"content":"            throw new CommandException(MESSAGE_PERSONS_NOT_PAIRED);","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"        Log toAdd \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"                new Log(model.getDatastore(), title, volunteer.getPersonId(), befriendee.getPersonId(),","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"                        duration, startDate, remarks);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"        Integer logId \u003d logStore.addLog(toAdd);","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"        Integer latestLogIdBefriendee \u003d getLatestLogId(befriendee, toAdd, logStore, logId);","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"        Integer latestLogIdVolunteer \u003d getLatestLogId(volunteer, toAdd, logStore, logId);","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"        // create updated persons","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"        Person updatedBefriendee \u003d createUpdatedPerson(befriendee, duration, latestLogIdBefriendee);","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"        Person updatedVolunteer \u003d createUpdatedPerson(volunteer, duration, latestLogIdVolunteer);","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"soons1"},"content":"        personStore.setPerson(befriendee, updatedBefriendee);","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"soons1"},"content":"        personStore.setPerson(volunteer, updatedVolunteer);","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"        personStore.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"    private Person createUpdatedPerson(Person p, int duration, Integer logId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"soons1"},"content":"        assert p !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"soons1"},"content":"        Name name \u003d p.getName();","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"soons1"},"content":"        Phone phone \u003d p.getPhone();","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"soons1"},"content":"        Email email \u003d p.getEmail();","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"soons1"},"content":"        Address address \u003d p.getAddress();","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"soons1"},"content":"        Set\u003cTag\u003e tags \u003d p.getTags();","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"soons1"},"content":"        Role role \u003d p.getRole();","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"soons1"},"content":"        Optional\u003cName\u003e pairedWithName \u003d p.getPairedWithName();","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"soons1"},"content":"        Optional\u003cInteger\u003e pairedWithId \u003d p.getPairedWithId();","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"soons1"},"content":"        int updatedTimeServed \u003d p.getTimeServed() + duration;","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cInteger\u003e latestLogId \u003d Optional.of(logId);","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"soons1"},"content":"        return PersonFactory.withIdFromParams(p.getPersonId(), name, phone, email, address, role, tags, pairedWithName,","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"            pairedWithId, updatedTimeServed, latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"    private Integer getLatestLogId(Person person, Log toAdd, LogStore logStore, Integer toAddId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"        Date toAddDate \u003d toAdd.getStartDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"        if (person.isLatestLogPresent()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"            Log currentLatest \u003d logStore.getLogById(person.getLatestLogId().get());","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"            Date latestLogDate \u003d currentLatest.getStartDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"CJerrong"},"content":"            if (toAddDate.before(latestLogDate)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"                return currentLatest.getLogId();","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"CJerrong"},"content":"            } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"CJerrong"},"content":"                return toAddId;","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"        return toAddId;","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"        if (!(other instanceof LogAddCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"        LogAddCommand otherAddCommand \u003d (LogAddCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"soons1"},"content":"        return otherAddCommand.title.equals(title)","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"CJerrong"},"content":"            \u0026\u0026 otherAddCommand.volunteerIndex \u003d\u003d volunteerIndex","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 otherAddCommand.befriendeeIndex \u003d\u003d befriendeeIndex","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 otherAddCommand.duration \u003d\u003d duration","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 otherAddCommand.startDate.equals(startDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 otherAddCommand.remarks.equals(remarks);","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"chaaaaun"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"CJerrong"},"content":"            .add(\"title\", title)","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"gerteck"},"content":"            .add(\"volunteerIndex\", volunteerIndex)","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"gerteck"},"content":"            .add(\"befriendeeIndex\", befriendeeIndex)","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"chaaaaun"},"content":"            .add(\"duration\", duration)","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"chaaaaun"},"content":"            .add(\"startDate\", startDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"chaaaaun"},"content":"            .add(\"remarks\", remarks)","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"chaaaaun"},"content":"            .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CJerrong":39,"soons1":38,"gerteck":6,"chaaaaun":107}},{"path":"src/main/java/scrolls/elder/logic/commands/LogDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"sdevih"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":" * Deletes the log identified using its displayed index from the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":"public class LogDeleteCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD_LOG_DELETE \u003d \"logdelete\";","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD_LOG_DEL \u003d \"logdel\";","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD_LOG_RM \u003d \"logrm\";","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD_LOG_REMOVE \u003d \"logremove\";","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_LOG_DELETE","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"            + \": Deletes the log identified by the index number used in the displayed log list.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD_LOG_DELETE + \" 1\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"sdevih"},"content":"            + \"Alternatively, you can also delete a log using the following commands as well.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD_LOG_DEL + \" 1\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD_LOG_RM + \" 1\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD_LOG_REMOVE + \" 1\";","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_DELETE_LOG_SUCCESS \u003d \"Deleted Log: %1$s\";","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_DELETE_LOG_ERROR \u003d \"Unable to delete log: \";","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"sdevih"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"sdevih"},"content":"     * Creates a LogDeleteCommand to delete the log at the specified {@code targetIndex}.","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"sdevih"},"content":"    public LogDeleteCommand(Index targetIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"sdevih"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"sdevih"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"sdevih"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"        LogStore logStore \u003d model.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"sdevih"},"content":"        PersonStore personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"sdevih"},"content":"        List\u003cLog\u003e lastShownList \u003d logStore.getLogList();","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"sdevih"},"content":"        List\u003cPerson\u003e lastShownPList \u003d personStore.getPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"sdevih"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"sdevih"},"content":"            throw new CommandException(MESSAGE_DELETE_LOG_ERROR + Messages.MESSAGE_INVALID_LOG_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"sdevih"},"content":"        Log logToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"sdevih"},"content":"        int logIdToDelete \u003d logToDelete.getLogId();","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"sdevih"},"content":"        int durationToDelete \u003d logToDelete.getDuration();","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"sdevih"},"content":"        // Update the timeServed of the volunteer and befriendee","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"sdevih"},"content":"        Person volunteer \u003d lastShownPList.get(logToDelete.getVolunteerId());","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"sdevih"},"content":"        Person befriendee \u003d lastShownPList.get(logToDelete.getBefriendeeId());","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"sdevih"},"content":"        Optional\u003cInteger\u003e latestLogIdBefriendee \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"sdevih"},"content":"                getLatestLogId(befriendee, logToDelete, logStore, logToDelete.getLogId());","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"sdevih"},"content":"        Optional\u003cInteger\u003e latestLogIdVolunteer \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"sdevih"},"content":"                getLatestLogId(volunteer, logToDelete, logStore, logToDelete.getLogId());","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"sdevih"},"content":"        Person updatedVolunteer \u003d createUpdatedPerson(volunteer, durationToDelete, latestLogIdVolunteer);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"sdevih"},"content":"        Person updatedBefriendee \u003d createUpdatedPerson(befriendee, durationToDelete, latestLogIdBefriendee);","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"sdevih"},"content":"        personStore.setPerson(volunteer, updatedVolunteer);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"sdevih"},"content":"        personStore.setPerson(befriendee, updatedBefriendee);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"sdevih"},"content":"        personStore.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"sdevih"},"content":"        logStore.removeLog(logIdToDelete);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"sdevih"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"sdevih"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_LOG_SUCCESS, Messages.formatLog(logToDelete)));","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"sdevih"},"content":"    private Person createUpdatedPerson(Person p, int duration, Optional\u003cInteger\u003e logId) {","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"sdevih"},"content":"        assert p !\u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"sdevih"},"content":"        Name name \u003d p.getName();","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"sdevih"},"content":"        Phone phone \u003d p.getPhone();","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"sdevih"},"content":"        Email email \u003d p.getEmail();","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"sdevih"},"content":"        Address address \u003d p.getAddress();","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"sdevih"},"content":"        Set\u003cTag\u003e tags \u003d p.getTags();","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"sdevih"},"content":"        Role role \u003d p.getRole();","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"sdevih"},"content":"        Optional\u003cName\u003e pairedWithName \u003d p.getPairedWithName();","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"sdevih"},"content":"        Optional\u003cInteger\u003e pairedWithId \u003d p.getPairedWithId();","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"sdevih"},"content":"        int updatedTimeServed \u003d p.getTimeServed() - duration;","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"sdevih"},"content":"        Optional\u003cInteger\u003e latestLogId \u003d logId;","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"sdevih"},"content":"        return PersonFactory.withIdFromParams(p.getPersonId(), name, phone, email, address, role, tags, pairedWithName,","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"sdevih"},"content":"                pairedWithId, updatedTimeServed, latestLogId);","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"sdevih"},"content":"    private Optional\u003cInteger\u003e getLatestLogId(Person person, Log deletedLog, LogStore logStore, Integer toDeleteId) {","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"sdevih"},"content":"        if (person.isLatestLogPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"sdevih"},"content":"            Log currentLatest \u003d logStore.getLogById(person.getLatestLogId().get());","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"sdevih"},"content":"            if (toDeleteId !\u003d currentLatest.getLogId()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"sdevih"},"content":"                return Optional.of(currentLatest.getLogId());","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"sdevih"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"sdevih"},"content":"            // the deletedLog is displayed as the current latest log","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"sdevih"},"content":"            Log newCurrentLatest \u003d logStore.getLogList().stream()","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"sdevih"},"content":"                    .filter(log -\u003e log.getBefriendeeId() \u003d\u003d person.getPersonId()","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"sdevih"},"content":"                            || log.getVolunteerId() \u003d\u003d person.getPersonId())","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"sdevih"},"content":"                    .filter(log -\u003e log.getLogId() !\u003d toDeleteId)","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"sdevih"},"content":"                    .max(Comparator.comparing(Log::getStartDate)).orElse(null);","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"sdevih"},"content":"            if (newCurrentLatest !\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"sdevih"},"content":"                return Optional.of(newCurrentLatest.getLogId());","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"sdevih"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"sdevih"},"content":"                return Optional.empty();","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"sdevih"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"sdevih"},"content":"        return Optional.empty();","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"sdevih"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"sdevih"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"sdevih"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"sdevih"},"content":"        //instanceof handles nulls","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"sdevih"},"content":"        if (!(other instanceof LogDeleteCommand)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"sdevih"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand otherLogDeleteCommand \u003d (LogDeleteCommand) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"sdevih"},"content":"        return targetIndex.equals(otherLogDeleteCommand.targetIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"sdevih"},"content":"    public String toString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"sdevih"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"sdevih"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"sdevih"},"content":"                .toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"sdevih":161}},{"path":"src/main/java/scrolls/elder/logic/commands/LogEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_REMARKS;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":" * Edits the details of an existing log in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"public class LogEditCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD \u003d \"logedit\";","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the log specified \"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"sdevih"},"content":"            + \"by the log index number used in the displayed log list. \"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"sdevih"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"sdevih"},"content":"            + \"Parameters: LOG_INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"            + \"[\" + PREFIX_START + \"START_DATE (yyyy-MM-dd)] \"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"sdevih"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION (in hours)] \"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"sdevih"},"content":"            + \"[\" + PREFIX_REMARKS + \"REMARKS]\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"sdevih"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"            + PREFIX_TITLE + \"Icebreaker session \"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"sdevih"},"content":"            + PREFIX_START + \"2021-03-01 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"sdevih"},"content":"            + PREFIX_DURATION + \"2 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"sdevih"},"content":"            + PREFIX_REMARKS + \"was a good session \";","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_EDIT_LOG_SUCCESS \u003d \"Edited Log successfully: %1$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_NEGATIVE_DURATION \u003d \"Duration cannot be negative.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"sdevih"},"content":"    private final Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"sdevih"},"content":"    private final EditLogDescriptor editLogDescriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"sdevih"},"content":"     * @param index             of the log in the filtered log list to edit","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"sdevih"},"content":"     * @param editLogDescriptor details to edit the log with","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"sdevih"},"content":"    public LogEditCommand(Index index, EditLogDescriptor editLogDescriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"sdevih"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"sdevih"},"content":"        requireNonNull(editLogDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"sdevih"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"sdevih"},"content":"        this.editLogDescriptor \u003d new EditLogDescriptor(editLogDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"sdevih"},"content":"     * Creates and returns a {@code Log} with the details of {@code logToEdit}","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"sdevih"},"content":"     * edited with {@code editLogDescriptor}.","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"sdevih"},"content":"    private static Log createEditedLog(Log logToEdit, EditLogDescriptor editLogDescriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"sdevih"},"content":"        assert logToEdit !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"sdevih"},"content":"        int volunteerId;","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"sdevih"},"content":"        int befriendeeId;","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"sdevih"},"content":"        if (editLogDescriptor.getVolunteerIndex().isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"sdevih"},"content":"            volunteerId \u003d editLogDescriptor.getVolunteerIndex().get().getZeroBased();","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"sdevih"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"sdevih"},"content":"            volunteerId \u003d logToEdit.getVolunteerId();","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"sdevih"},"content":"        if (editLogDescriptor.getBefriendeeIndex().isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"sdevih"},"content":"            befriendeeId \u003d editLogDescriptor.getBefriendeeIndex().get().getZeroBased();","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"sdevih"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"sdevih"},"content":"            befriendeeId \u003d logToEdit.getBefriendeeId();","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"        String title \u003d editLogDescriptor.getTitle().orElse(logToEdit.getLogTitle());","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"        Integer duration \u003d editLogDescriptor.getDuration().orElse(logToEdit.getDuration());","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"sdevih"},"content":"        Date startDate \u003d editLogDescriptor.getStartDate().orElse(logToEdit.getStartDate());","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"sdevih"},"content":"        String remarks \u003d editLogDescriptor.getRemarks().orElse(logToEdit.getRemarks());","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"        return new Log(logToEdit.getLogId(), title, volunteerId, befriendeeId, duration, startDate, remarks);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"sdevih"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"sdevih"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"soons1"},"content":"        PersonStore personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"sdevih"},"content":"        LogStore store \u003d model.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"sdevih"},"content":"        List\u003cLog\u003e lastShownList \u003d store.getLogList();","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"soons1"},"content":"        List\u003cPerson\u003e lastShownPList \u003d personStore.getPersonList();","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"sdevih"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"sdevih"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LOG_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"sdevih"},"content":"        Log logToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"sdevih"},"content":"        Log editedLog \u003d createEditedLog(logToEdit, editLogDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"sdevih"},"content":"        if (!logToEdit.areValidIds(model.getDatastore(), editedLog.getVolunteerId(), editedLog.getBefriendeeId())) {","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"soons1"},"content":"            throw new CommandException(Log.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"sdevih"},"content":"        if (editedLog.getDuration() \u003c 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"sdevih"},"content":"            throw new CommandException(MESSAGE_NEGATIVE_DURATION);","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"        int durationDiff \u003d editedLog.getDuration() - logToEdit.getDuration();","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"soons1"},"content":"        Person befriendee \u003d lastShownPList.get(logToEdit.getBefriendeeId());","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"soons1"},"content":"        Person volunteer \u003d lastShownPList.get(logToEdit.getVolunteerId());","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"        Integer latestLogIdBefriendee \u003d getLatestLogId(befriendee, editedLog, store, editedLog.getLogId());","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"        Integer latestLogIdVolunteer \u003d getLatestLogId(volunteer, editedLog, store, editedLog.getLogId());","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"        Person updatedBefriendee \u003d createUpdatedPerson(befriendee, durationDiff, latestLogIdBefriendee);","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"        Person updatedVolunteer \u003d createUpdatedPerson(volunteer, durationDiff, latestLogIdVolunteer);","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"soons1"},"content":"        personStore.setPerson(befriendee, updatedBefriendee);","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"soons1"},"content":"        personStore.setPerson(volunteer, updatedVolunteer);","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"        personStore.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"sdevih"},"content":"        store.setLog(editedLog);","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"sdevih"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_LOG_SUCCESS, Messages.formatLog(editedLog)));","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"    private Person createUpdatedPerson(Person p, int duration, Integer logId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"soons1"},"content":"        assert p !\u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"soons1"},"content":"        Name name \u003d p.getName();","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"soons1"},"content":"        Phone phone \u003d p.getPhone();","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"soons1"},"content":"        Email email \u003d p.getEmail();","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"soons1"},"content":"        Address address \u003d p.getAddress();","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"soons1"},"content":"        Set\u003cTag\u003e tags \u003d p.getTags();","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"soons1"},"content":"        Role role \u003d p.getRole();","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"soons1"},"content":"        Optional\u003cName\u003e pairedWithName \u003d p.getPairedWithName();","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"soons1"},"content":"        Optional\u003cInteger\u003e pairedWithId \u003d p.getPairedWithId();","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"soons1"},"content":"        int updatedTimeServed \u003d p.getTimeServed() + duration;","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cInteger\u003e latestLogId \u003d Optional.of(logId);","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"soons1"},"content":"        return PersonFactory.withIdFromParams(p.getPersonId(), name, phone, email, address, role, tags, pairedWithName,","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"CJerrong"},"content":"                pairedWithId, updatedTimeServed, latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"CJerrong"},"content":"    private Integer getLatestLogId(Person person, Log editedLog, LogStore logStore, Integer toAddId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"CJerrong"},"content":"        Date editedDate \u003d editedLog.getStartDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"CJerrong"},"content":"        if (person.isLatestLogPresent()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"CJerrong"},"content":"            Log currentLatest \u003d logStore.getLogById(person.getLatestLogId().get());","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"CJerrong"},"content":"            Date latestLogDate \u003d currentLatest.getStartDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"CJerrong"},"content":"            if (editedDate.before(latestLogDate)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"CJerrong"},"content":"                return currentLatest.getLogId();","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"CJerrong"},"content":"            } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"CJerrong"},"content":"                return toAddId;","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"CJerrong"},"content":"        return toAddId;","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"sdevih"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"sdevih"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"sdevih"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"sdevih"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"sdevih"},"content":"        if (!(other instanceof LogEditCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"sdevih"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"sdevih"},"content":"        LogEditCommand otherLogEditCommand \u003d (LogEditCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"sdevih"},"content":"        return index.equals(otherLogEditCommand.index)","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"sdevih"},"content":"                \u0026\u0026 editLogDescriptor.equals(otherLogEditCommand.editLogDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"sdevih"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"sdevih"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"sdevih"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"sdevih"},"content":"                .add(\"editLogDescriptor\", editLogDescriptor)","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"sdevih"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"sdevih"},"content":"     * Stores the details to edit the log with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"sdevih"},"content":"     * corresponding field value of the log.","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"sdevih"},"content":"    public static class EditLogDescriptor {","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"CJerrong"},"content":"        private String title;","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"sdevih"},"content":"        private Index volunteerIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"sdevih"},"content":"        private Index befriendeeIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"CJerrong"},"content":"        private Integer duration;","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"sdevih"},"content":"        private Date startDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"sdevih"},"content":"        private String remarks;","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"sdevih"},"content":"        public EditLogDescriptor() {","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"sdevih"},"content":"        /**","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"sdevih"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"sdevih"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"sdevih"},"content":"         */","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"sdevih"},"content":"        public EditLogDescriptor(EditLogDescriptor toCopy) {","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"CJerrong"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2024-03-30"},{"lineNumber":228,"author":{"gitId":"sdevih"},"content":"            setVolunteerIndex(toCopy.volunteerIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"sdevih"},"content":"            setBefriendeeIndex(toCopy.befriendeeIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"sdevih"},"content":"            setDuration(toCopy.duration);","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"sdevih"},"content":"            setStartDate(toCopy.startDate);","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"sdevih"},"content":"            setRemarks(toCopy.remarks);","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"sdevih"},"content":"        /**","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"sdevih"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"sdevih"},"content":"         */","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"sdevih"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"CJerrong"},"content":"            return CollectionUtil.isAnyNonNull(title, volunteerIndex, befriendeeIndex, duration, startDate, remarks);","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"CJerrong"},"content":"        public void setTitle(String title) {","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"CJerrong"},"content":"            this.title \u003d title;","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"CJerrong"},"content":"        public Optional\u003cString\u003e getTitle() {","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"CJerrong"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"sdevih"},"content":"        public void setVolunteerIndex(Index volunteerIndex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"sdevih"},"content":"            this.volunteerIndex \u003d volunteerIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"sdevih"},"content":"        public Optional\u003cIndex\u003e getVolunteerIndex() {","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"sdevih"},"content":"            return Optional.ofNullable(volunteerIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"sdevih"},"content":"        public void setBefriendeeIndex(Index befriendeeIndex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"sdevih"},"content":"            this.befriendeeIndex \u003d befriendeeIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"sdevih"},"content":"        public Optional\u003cIndex\u003e getBefriendeeIndex() {","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"sdevih"},"content":"            return Optional.ofNullable(befriendeeIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"CJerrong"},"content":"        public void setDuration(Integer duration) {","lastModifiedDate":"2024-03-30"},{"lineNumber":267,"author":{"gitId":"sdevih"},"content":"            this.duration \u003d duration;","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"sdevih"},"content":"        public Optional\u003cInteger\u003e getDuration() {","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"sdevih"},"content":"            return Optional.ofNullable(duration);","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"sdevih"},"content":"        public void setStartDate(Date startDate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"sdevih"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"sdevih"},"content":"        public Optional\u003cDate\u003e getStartDate() {","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"sdevih"},"content":"            return Optional.ofNullable(startDate);","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"sdevih"},"content":"        public void setRemarks(String remarks) {","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"sdevih"},"content":"            this.remarks \u003d remarks;","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"sdevih"},"content":"        public Optional\u003cString\u003e getRemarks() {","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"sdevih"},"content":"            return Optional.ofNullable(remarks);","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"sdevih"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"sdevih"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"sdevih"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"sdevih"},"content":"                return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"sdevih"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"sdevih"},"content":"            if (!(other instanceof EditLogDescriptor)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"sdevih"},"content":"                return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"sdevih"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"sdevih"},"content":"            EditLogDescriptor otherEditLogDescriptor \u003d (EditLogDescriptor) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"CJerrong"},"content":"            return Objects.equals(title, otherEditLogDescriptor.title)","lastModifiedDate":"2024-03-30"},{"lineNumber":302,"author":{"gitId":"CJerrong"},"content":"                    \u0026\u0026 Objects.equals(volunteerIndex, otherEditLogDescriptor.volunteerIndex)","lastModifiedDate":"2024-03-30"},{"lineNumber":303,"author":{"gitId":"sdevih"},"content":"                    \u0026\u0026 Objects.equals(befriendeeIndex, otherEditLogDescriptor.befriendeeIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"sdevih"},"content":"                    \u0026\u0026 Objects.equals(duration, otherEditLogDescriptor.duration)","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"sdevih"},"content":"                    \u0026\u0026 Objects.equals(startDate, otherEditLogDescriptor.startDate)","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"sdevih"},"content":"                    \u0026\u0026 Objects.equals(remarks, otherEditLogDescriptor.remarks);","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"sdevih"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"sdevih"},"content":"        public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"sdevih"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"CJerrong"},"content":"                    .add(\"title\", title)","lastModifiedDate":"2024-03-30"},{"lineNumber":313,"author":{"gitId":"sdevih"},"content":"                    .add(\"volunteerIndex\", volunteerIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"sdevih"},"content":"                    .add(\"befriendeeIndex\", befriendeeIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"sdevih"},"content":"                    .add(\"duration\", duration)","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"sdevih"},"content":"                    .add(\"startDate\", startDate)","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"sdevih"},"content":"                    .add(\"remarks\", remarks)","lastModifiedDate":"2024-03-29"},{"lineNumber":318,"author":{"gitId":"sdevih"},"content":"                    .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":50,"soons1":33,"chaaaaun":3,"sdevih":235}},{"path":"src/main/java/scrolls/elder/logic/commands/LogFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.ReadOnlyLogStore;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.ReadOnlyPersonStore;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":" * Finds an existing logs related to specified Person in the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"public class LogFindCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"    public static final String COMMAND_WORD_LOGFIND \u003d \"logfind\";","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"    public static final String COMMAND_WORD_FINDLOG \u003d \"findlog\";","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_LOGFIND + \": Finds logs by person. \"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"        + \"Parameters: INDEX \"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"        + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"        + \"\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"        + \"Example: \" + COMMAND_WORD_LOGFIND + \" 1 \"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"        + PREFIX_ROLE + \"volunteer\";","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"    // Sample Format: logfind 1 r/volunteer","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Logs found!\";","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"    public static final String MESSAGE_FINDLOG_PERSON_ERROR \u003d \"Unable to find logs: \";","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"    private final Role role;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"     * @param targetIndex             of the specified person in the filtered list","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"     * @param role                   of the person to differentiate between volunteer and befriendee","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"    public LogFindCommand(Index targetIndex, Role role) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"        ReadOnlyPersonStore personStore \u003d model.getDatastore().getPersonStore();","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"        ReadOnlyLogStore logStore \u003d model.getDatastore().getLogStore();","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"        List\u003cPerson\u003e lastShownList;","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"        if (role.isVolunteer()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"            lastShownList \u003d personStore.getFilteredVolunteerList();","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"            lastShownList \u003d personStore.getFilteredBefriendeeList();","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"            throw new CommandException(MESSAGE_FINDLOG_PERSON_ERROR + Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"        Person personToFindLog \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        int personID \u003d personToFindLog.getPersonId();","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"        logStore.updateFilteredLogListByPersonId(personID);","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"        // short circuit if same object","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"        // instanceof handles nulls and different types","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"gerteck"},"content":"        if (!(other instanceof LogFindCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"gerteck"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"gerteck"},"content":"        // state check","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"        LogFindCommand otherFindCommand \u003d (LogFindCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"        return otherFindCommand.role.equals(role)","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"                \u0026\u0026 otherFindCommand.targetIndex.equals(targetIndex);","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"gerteck"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"            .add(\"role\", role)","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"            .add(\"listIndex\", targetIndex)","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"            .toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"gerteck":104}},{"path":"src/main/java/scrolls/elder/logic/commands/PairCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":" * Pairs a volunteer and a befriendee in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"public class PairCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"    public static final String COMMAND_WORD \u003d \"pair\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Pairs a volunteer and a befriendee specified \"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"            + \"by their index numbers used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"            + \"Parameters: INDEX1 INDEX2 (both must be a positive integers)\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"    public static final String MESSAGE_PAIR_SUCCESS \u003d \"Paired: %1$s and %2$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Cannot pair the same person with themselves.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"    public static final String MESSAGE_DIFFERENT_PERSON_TYPE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"            \"Pairing can only be done between a volunteer and a befriendee.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"    public static final String MESSAGE_ALREADY_PAIRED \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"            \"One or both of the persons are already paired, unpair and try again.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"    private final Index index1;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"    private final Index index2;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"     * @param index1 of the first person to be paired","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"     * @param index2 of the second person to be paired with","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"    public PairCommand(Index index1, Index index2) {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"        requireNonNull(index1);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"        requireNonNull(index2);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"        this.index1 \u003d index1;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"soons1"},"content":"        this.index2 \u003d index2;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"     * edited with {@code editPairedPersonDescriptor}.","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"    private static Person createEditedPairedPerson(Person personToEdit, Optional\u003cName\u003e updatedPairName,","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"                                                   Optional\u003cInteger\u003e updatedPairID) {","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(personToEdit);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        int personId \u003d personToEdit.getPersonId();","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        Role role \u003d personToEdit.getRole();","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"soons1"},"content":"        int updatedTimeServed \u003d personToEdit.getTimeServed();","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cInteger\u003e updatedLatestLogId \u003d personToEdit.getLatestLogId();","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        return PersonFactory.withIdFromParams(personId, updatedName, updatedPhone, updatedEmail, updatedAddress, role,","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"                updatedTags, updatedPairName, updatedPairID, updatedTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"                updatedLatestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"soons1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"soons1"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"        PersonStore store \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e lastShownBList \u003d store.getFilteredBefriendeeList();","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e lastShownVList \u003d store.getFilteredVolunteerList();","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"        if (index1.getZeroBased() \u003e\u003d lastShownBList.size() || index2.getZeroBased() \u003e\u003d lastShownVList.size()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"soons1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"        Person personToPair1 \u003d lastShownBList.get(index1.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"        Person personToPair2 \u003d lastShownVList.get(index2.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"soons1"},"content":"        // Check if the two persons are the same person","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"soons1"},"content":"        if (personToPair1.isSamePerson(personToPair2)","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"                \u0026\u0026 store.hasPerson(personToPair1)","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"                \u0026\u0026 store.hasPerson(personToPair2)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"soons1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"soons1"},"content":"        // Check if the two persons are of different types (eg. volunteer and befriendee)","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"soons1"},"content":"        if (personToPair1.getRole().equals(personToPair2.getRole())) {","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"soons1"},"content":"            throw new CommandException(MESSAGE_DIFFERENT_PERSON_TYPE);","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"soons1"},"content":"        // Check if any of the persons are already paired","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"soons1"},"content":"        if (personToPair1.isPaired() || personToPair2.isPaired()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"soons1"},"content":"            throw new CommandException(MESSAGE_ALREADY_PAIRED);","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"        Person newPerson1 \u003d createEditedPairedPerson(personToPair1, Optional.of(personToPair2.getName()),","lastModifiedDate":"2024-03-22"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"                Optional.of(personToPair2.getPersonId()));","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"        Person newPerson2 \u003d createEditedPairedPerson(personToPair2, Optional.of(personToPair1.getName()),","lastModifiedDate":"2024-03-22"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"                Optional.of(personToPair1.getPersonId()));","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"        store.setPerson(personToPair1, newPerson1);","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"        store.setPerson(personToPair2, newPerson2);","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"gerteck"},"content":"        store.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"soons1"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"sdevih"},"content":"                String.format(MESSAGE_PAIR_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"sdevih"},"content":"                        Messages.formatPerson(personToPair1), Messages.formatPerson(personToPair2)));","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"soons1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"soons1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"soons1"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"soons1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"soons1"},"content":"        if (!(other instanceof PairCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"soons1"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"soons1"},"content":"        PairCommand otherPairCommand \u003d (PairCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"soons1"},"content":"        return index1.equals(otherPairCommand.index1)","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"soons1"},"content":"                \u0026\u0026 index2.equals(otherPairCommand.index2);","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"soons1"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"soons1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"soons1"},"content":"                .add(\"index1\", index1)","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"soons1"},"content":"                .add(\"index2\", index2)","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"soons1"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"soons1":100,"CJerrong":6,"gerteck":13,"chaaaaun":35,"sdevih":2}},{"path":"src/main/java/scrolls/elder/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * Reverses the effect of a previous undo operation on the Datastore.","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Previous undo operation has been reversed!\";","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    public static final String MESSAGE_REDO_ERROR \u003d \"No previous undo operation to be reversed\";","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"        if (!model.canRedoDatastore()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"            throw new CommandException(MESSAGE_REDO_ERROR);","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"        model.redoChanges();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"        model.getDatastore().getPersonStore().updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"CJerrong":26,"gerteck":1}},{"path":"src/main/java/scrolls/elder/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" * Reverses the effect of a previous operation on the Datastore.","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Previous operation has been undone!\";","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    public static final String MESSAGE_UNDO_ERROR \u003d \"No previous operation to be undone\";","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"        if (!model.canUndoDatastore()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"            throw new CommandException(MESSAGE_UNDO_ERROR);","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"        model.getDatastore().getPersonStore().updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"CJerrong":26,"gerteck":1}},{"path":"src/main/java/scrolls/elder/logic/commands/UnpairCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":" * Unpairs a volunteer and a befriendee who were paired in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"public class UnpairCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"    public static final String COMMAND_WORD \u003d \"unpair\";","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":"            COMMAND_WORD + \": Unpairs a volunteer and a befriendee specified \"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":"                    + \"by their index numbers used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"                    + \"Parameters: INDEX1 INDEX2 (both must be a positive integers)\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"                    + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_UNPAIR_SUCCESS \u003d \"Unpaired: %1$s and %2$s\";","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Cannot unpair the same person from themselves.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"    public static final String MESSAGE_NOT_PAIRED \u003d \"The two persons are not paired, so unpairing is not possible.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"    private final Index index1;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"sdevih"},"content":"    private final Index index2;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"sdevih"},"content":"     * @param index1 of the first person to be paired","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"     * @param index2 of the second person to be paired with","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"sdevih"},"content":"    public UnpairCommand(Index index1, Index index2) {","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"sdevih"},"content":"        requireNonNull(index1);","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"sdevih"},"content":"        requireNonNull(index2);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"sdevih"},"content":"        this.index1 \u003d index1;","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"sdevih"},"content":"        this.index2 \u003d index2;","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"     * edited with {@code editPairedPersonDescriptor}.","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    private static Person createEditedPairedPerson(Person personToEdit,","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"                                                   Optional\u003cName\u003e updatedPairName, Optional\u003cInteger\u003e updatedPairID) {","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        int personId \u003d personToEdit.getPersonId();","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        Role role \u003d personToEdit.getRole();","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"soons1"},"content":"        int updatedTimeServed \u003d personToEdit.getTimeServed();","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cInteger\u003e updatedLatestLogId \u003d personToEdit.getLatestLogId();","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        return PersonFactory.withIdFromParams(personId, updatedName, updatedPhone, updatedEmail, updatedAddress, role,","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"                updatedTags, updatedPairName, updatedPairID, updatedTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"                updatedLatestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"sdevih"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"sdevih"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        PersonStore store \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e lastShownBList \u003d store.getFilteredBefriendeeList();","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e lastShownVList \u003d store.getFilteredVolunteerList();","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"        if (index1.getZeroBased() \u003e\u003d lastShownBList.size() || index2.getZeroBased() \u003e\u003d lastShownVList.size()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"sdevih"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"        Person personToUnpair1 \u003d lastShownBList.get(index1.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"        Person personToUnpair2 \u003d lastShownVList.get(index2.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"sdevih"},"content":"        // Check if the two persons are the same person","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"sdevih"},"content":"        if (personToUnpair1.isSamePerson(personToUnpair2)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"sdevih"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"sdevih"},"content":"        // Check if the two persons are paired","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"        if (!personToUnpair1.getPairedWithName().equals(Optional.of(personToUnpair2.getName()))","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"                || !personToUnpair2.getPairedWithName().equals(Optional.of(personToUnpair1.getName()))) {","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"sdevih"},"content":"            throw new CommandException(MESSAGE_NOT_PAIRED);","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"sdevih"},"content":"        // Unset the pairedWith attribute of the befriendee and volunteer","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        Person newPerson1 \u003d createEditedPairedPerson(personToUnpair1, Optional.empty(), Optional.empty());","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"        Person newPerson2 \u003d createEditedPairedPerson(personToUnpair2, Optional.empty(), Optional.empty());","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"        store.setPerson(personToUnpair1, newPerson1);","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"        store.setPerson(personToUnpair2, newPerson2);","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"        store.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"sdevih"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"sdevih"},"content":"                String.format(","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"sdevih"},"content":"                        MESSAGE_UNPAIR_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"sdevih"},"content":"                        Messages.formatPerson(personToUnpair1), Messages.formatPerson(personToUnpair2)));","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"sdevih"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"sdevih"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"sdevih"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"sdevih"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"sdevih"},"content":"        if (!(other instanceof UnpairCommand)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"sdevih"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"sdevih"},"content":"        UnpairCommand otherUnpairCommand \u003d (UnpairCommand) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"sdevih"},"content":"        return index1.equals(otherUnpairCommand.index1)","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"sdevih"},"content":"                \u0026\u0026 index2.equals(otherUnpairCommand.index2);","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"sdevih"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"sdevih"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"sdevih"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"sdevih"},"content":"                .add(\"index1\", index1)","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"sdevih"},"content":"                .add(\"index2\", index2)","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"sdevih"},"content":"                .toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"soons1":1,"CJerrong":8,"gerteck":10,"chaaaaun":32,"sdevih":92}},{"path":"src/main/java/scrolls/elder/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chaaaaun":1,"-":16}},{"path":"src/main/java/scrolls/elder/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.AddCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Befriendee;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Volunteer;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"                        CliSyntax.PREFIX_ROLE,","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"                        CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"                        CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"                        CliSyntax.PREFIX_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"                        CliSyntax.PREFIX_TAG,","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"                        CliSyntax.PREFIX_NAME);","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"        // Check for all Prefixes present","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"                CliSyntax.PREFIX_ROLE, CliSyntax.PREFIX_NAME,","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"                CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"                CliSyntax.PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"        // Check No duplicates for PREFIXES","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(CliSyntax.PREFIX_ROLE,","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"                CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"                CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"                CliSyntax.PREFIX_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"                CliSyntax.PREFIX_NAME);","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(CliSyntax.PREFIX_ROLE).get());","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"        Optional\u003cName\u003e pairedWithNone \u003d Optional.empty();","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cInteger\u003e pairedWithNoID \u003d Optional.empty();","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"soons1"},"content":"        int timeServed \u003d 0;","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"        Optional\u003cInteger\u003e latestLogId \u003d Optional.empty();","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"        // temporary solution, delete after merging","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"        Person person \u003d null;","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        if (role.isVolunteer()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"            person \u003d new Volunteer(name, phone, email, address, tagList, pairedWithNone, pairedWithNoID,","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"                    timeServed, latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"            assert role.isBefriendee();","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"            person \u003d new Befriendee(name, phone, email, address, tagList, pairedWithNone, pairedWithNoID,","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"                    timeServed, latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"CJerrong":13,"soons1":1,"gerteck":32,"chaaaaun":18,"-":27}},{"path":"src/main/java/scrolls/elder/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.AddCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.Command;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.FindCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.ListCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.LogAddCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.LogDeleteCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.LogEditCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.commands.LogFindCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.PairCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.UnpairCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"sdevih"},"content":"        case DeleteCommand.COMMAND_WORD_DELETE:","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"sdevih"},"content":"        case DeleteCommand.COMMAND_WORD_DEL:","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"sdevih"},"content":"        case DeleteCommand.COMMAND_WORD_RM:","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"sdevih"},"content":"        case DeleteCommand.COMMAND_WORD_REMOVE:","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        case FindCommand.COMMAND_WORD_FIND:","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"        case FindCommand.COMMAND_WORD_SEARCH:","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"soons1"},"content":"        case PairCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"soons1"},"content":"            return new PairCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"sdevih"},"content":"        case UnpairCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"sdevih"},"content":"            return new UnpairCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"        case LogAddCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"            return new LogAddCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"sdevih"},"content":"        case LogEditCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"sdevih"},"content":"            return new LogEditCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"sdevih"},"content":"        case LogDeleteCommand.COMMAND_WORD_LOG_DELETE:","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"sdevih"},"content":"        case LogDeleteCommand.COMMAND_WORD_LOG_DEL:","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"sdevih"},"content":"        case LogDeleteCommand.COMMAND_WORD_LOG_RM:","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"sdevih"},"content":"        case LogDeleteCommand.COMMAND_WORD_LOG_REMOVE:","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"sdevih"},"content":"            return new LogDeleteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"        case LogFindCommand.COMMAND_WORD_LOGFIND:","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"        case LogFindCommand.COMMAND_WORD_FINDLOG:","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"            return new LogFindCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"            return new RedoCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soons1":4,"CJerrong":8,"gerteck":7,"chaaaaun":18,"-":70,"sdevih":19}},{"path":"src/main/java/scrolls/elder/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"chaaaaun":3,"-":75}},{"path":"src/main/java/scrolls/elder/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"chaaaaun":1,"-":147}},{"path":"src/main/java/scrolls/elder/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    public static final Prefix PREFIX_DURATION \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    public static final Prefix PREFIX_REMARKS \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"CJerrong":1,"gerteck":1,"chaaaaun":4,"-":14}},{"path":"src/main/java/scrolls/elder/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ROLE);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"            Index index;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"            try {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE),","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"                        pe);","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"            return new DeleteCommand(index, ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chaaaaun":16,"-":22}},{"path":"src/main/java/scrolls/elder/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_ROLE);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"        Role role;","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"        // Check for Index","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"        // Check for Role for Indexing","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_ROLE);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"            editPersonDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"gerteck":21,"chaaaaun":7,"-":70}},{"path":"src/main/java/scrolls/elder/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.FindCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.TagListContainsTagsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"    enum FindType {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"        SEARCH_VOLUNTEER_ONLY,","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"        SEARCH_BEFRIENDEE_ONLY,","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"        SEARCH_BOTH,","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"        SEARCH_PAIRED,","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"        SEARCH_UNPAIRED","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"    public static final String PAIRED_FLAG \u003d \"--paired\";","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"    public static final String UNPAIRED_FLAG \u003d \"--unpaired\";","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    public static final String SEARCH_VOLUNTEER_FLAG \u003d PREFIX_ROLE + \"volunteer\";","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"    public static final String SEARCH_BEFRIENDEE_FLAG \u003d PREFIX_ROLE + \"befriendee\";","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"        // Handle Role Parsing","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"        FindType findTypeRole \u003d parseForRoles(trimmedArgs.split(\"\\\\s+\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"        String args2 \u003d args.replace(SEARCH_VOLUNTEER_FLAG, \"\").replace(SEARCH_BEFRIENDEE_FLAG, \"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"        String trimmedArgs2 \u003d args2.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"        if (trimmedArgs2.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"        // Handle Pair Flag Parsing","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"        FindType findTypePairStatus \u003d parsePairFlag(trimmedArgs2.split(\"\\\\s+\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"        String args3 \u003d trimmedArgs2.replace(PAIRED_FLAG, \"\").replace(UNPAIRED_FLAG, \"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"        String trimmedArgs3 \u003d args3.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"        // Handle Tag Parsing","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"        String[] keywordsWithoutRoles \u003d trimmedArgs3.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicate \u003d parseForTags(keywordsWithoutRoles);;","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"        // Handle Name Parsing","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"        List\u003cString\u003e nameKeywordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        for (String keyword : keywordsWithoutRoles) {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"            if (!isValidTagName(keyword) \u0026\u0026 !keyword.trim().equals(\"\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"                nameKeywordList.add(keyword.trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(nameKeywordList);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"        boolean isSearchingVolunteer \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"        boolean isSearchingBefriendee \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        boolean isSearchingPaired \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"        boolean isSearchingUnpaired \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"        if (findTypeRole.equals(FindType.SEARCH_BEFRIENDEE_ONLY)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"            isSearchingVolunteer \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"gerteck"},"content":"        if (findTypeRole.equals(FindType.SEARCH_VOLUNTEER_ONLY)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"            isSearchingBefriendee \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"        if (findTypePairStatus.equals(FindType.SEARCH_UNPAIRED)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"            isSearchingPaired \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"        if (findTypePairStatus.equals(FindType.SEARCH_PAIRED)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"            isSearchingUnpaired \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"        return new FindCommand(namePredicate, tagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"                isSearchingVolunteer, isSearchingBefriendee,","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"                isSearchingPaired, isSearchingUnpaired);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"    private static FindType parseForRoles(String[] nameKeywords) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"        boolean isSearchingVolunteer \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"        boolean isSearchingBefriendee \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"gerteck"},"content":"        // If both Volunteer and Befriendee roles are present, show error.","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"gerteck"},"content":"        if (Arrays.asList(nameKeywords).contains(SEARCH_VOLUNTEER_FLAG)","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"gerteck"},"content":"                \u0026\u0026 Arrays.asList(nameKeywords).contains(SEARCH_BEFRIENDEE_FLAG)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"        if (Arrays.asList(nameKeywords).contains(SEARCH_VOLUNTEER_FLAG)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"            isSearchingVolunteer \u003d true;","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"            isSearchingBefriendee \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"gerteck"},"content":"        if (Arrays.asList(nameKeywords).contains(SEARCH_BEFRIENDEE_FLAG)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"            isSearchingBefriendee \u003d true;","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"gerteck"},"content":"            isSearchingVolunteer \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"gerteck"},"content":"        if (isSearchingVolunteer) {","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"gerteck"},"content":"            return FindType.SEARCH_VOLUNTEER_ONLY;","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"gerteck"},"content":"        } else if (isSearchingBefriendee) {","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"gerteck"},"content":"            return FindType.SEARCH_BEFRIENDEE_ONLY;","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"gerteck"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"gerteck"},"content":"            return FindType.SEARCH_BOTH;","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":134,"author":{"gitId":"gerteck"},"content":"    private static FindType parsePairFlag(String[] nameKeywords) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"gerteck"},"content":"        boolean isSearchingPaired \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"gerteck"},"content":"        boolean isSearchingUnpaired \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"gerteck"},"content":"        // If both pair and unpair flags are present, show error.","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"gerteck"},"content":"        if (Arrays.asList(nameKeywords).contains(PAIRED_FLAG)","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"gerteck"},"content":"                \u0026\u0026 Arrays.asList(nameKeywords).contains(UNPAIRED_FLAG)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"gerteck"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"gerteck"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"gerteck"},"content":"        if (Arrays.asList(nameKeywords).contains(PAIRED_FLAG)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"gerteck"},"content":"            isSearchingUnpaired \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"gerteck"},"content":"        if (Arrays.asList(nameKeywords).contains(UNPAIRED_FLAG)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"gerteck"},"content":"            isSearchingPaired \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"gerteck"},"content":"        if (isSearchingPaired \u0026\u0026 isSearchingUnpaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"gerteck"},"content":"            return FindType.SEARCH_BOTH;","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"gerteck"},"content":"        } else if (isSearchingPaired) {","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"gerteck"},"content":"            return FindType.SEARCH_PAIRED;","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"gerteck"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"gerteck"},"content":"            return FindType.SEARCH_UNPAIRED;","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"gerteck"},"content":"    private static TagListContainsTagsPredicate parseForTags(String[] tagKeywords) {","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"gerteck"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"gerteck"},"content":"        for (String tagName : tagKeywords) {","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"gerteck"},"content":"            if (isValidTagName(tagName)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"gerteck"},"content":"                String pureTagName \u003d tagName.substring(2);","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"gerteck"},"content":"                tagList.add(new Tag(pureTagName));","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"gerteck"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"gerteck"},"content":"        return new TagListContainsTagsPredicate(tagList);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"gerteck"},"content":"    private static boolean isValidTagName(String test) {","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"gerteck"},"content":"        final String tagValidationRegex \u003d \"^t/.+$\";","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"gerteck"},"content":"        return test.matches(tagValidationRegex);","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"gerteck":150,"chaaaaun":5,"-":25}},{"path":"src/main/java/scrolls/elder/logic/parser/LogAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.LogAddCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":" * Parses input arguments and creates a new LogAddCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"public class LogAddCommandParser implements Parser\u003cLogAddCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"     * Parses the given {@code String} of arguments in the context of the LogAddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"     * and returns an LogAddCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    public LogAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"            ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"                CliSyntax.PREFIX_TITLE,","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"                CliSyntax.PREFIX_START,","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"                CliSyntax.PREFIX_DURATION,","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"                CliSyntax.PREFIX_REMARKS);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        // Check for all Prefixes present","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"            CliSyntax.PREFIX_TITLE,","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"            CliSyntax.PREFIX_START, CliSyntax.PREFIX_DURATION,","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"            CliSyntax.PREFIX_REMARKS) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        String[] pairIndexes \u003d argMultimap.getPreamble().trim().split(\" \");","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        Index index1;","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        Index index2;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"            index1 \u003d ParserUtil.parseIndex(pairIndexes[0]);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"            index2 \u003d ParserUtil.parseIndex(pairIndexes[1]);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogAddCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        String title \u003d argMultimap.getValue(CliSyntax.PREFIX_TITLE).get().trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        Date start \u003d ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_START).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        int duration \u003d ParserUtil.parseInt(argMultimap.getValue(CliSyntax.PREFIX_DURATION).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        String remarks \u003d argMultimap.getValue(CliSyntax.PREFIX_REMARKS).get().trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"        return new LogAddCommand(title, index1, index2, duration, start, remarks);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CJerrong":4,"chaaaaun":62}},{"path":"src/main/java/scrolls/elder/logic/parser/LogDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.LogDeleteCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":" * Parses input arguments and creates a new LogDeleteCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"public class LogDeleteCommandParser implements Parser\u003cLogDeleteCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"     * Parses the given {@code String} of arguments in the context of the LogDeleteCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"     * and returns a LogDeleteCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"    public LogDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"            Index index;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"            try {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogDeleteCommand.MESSAGE_USAGE),","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"                        pe);","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":"            return new LogDeleteCommand(index);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"sdevih":37}},{"path":"src/main/java/scrolls/elder/logic/parser/LogEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_REMARKS;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.LogEditCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":" * Parses input arguments and creates a new LogEditCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"public class LogEditCommandParser implements Parser\u003cLogEditCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"     * Parses the given {@code String} of arguments in the context of the LogEditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"     * and returns an LogEditCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"    public LogEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"                PREFIX_TITLE, PREFIX_START, PREFIX_DURATION, PREFIX_REMARKS);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"        Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":"        //Check for Index","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_START, PREFIX_DURATION, PREFIX_REMARKS);","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d new LogEditCommand.EditLogDescriptor();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"            editLogDescriptor.setTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"sdevih"},"content":"        if (argMultimap.getValue(PREFIX_START).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"sdevih"},"content":"            editLogDescriptor.setStartDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_START).get()));","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"sdevih"},"content":"        if (argMultimap.getValue(PREFIX_DURATION).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"sdevih"},"content":"            editLogDescriptor.setDuration(ParserUtil.parseInt(argMultimap.getValue(PREFIX_DURATION).get()));","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"sdevih"},"content":"        if (argMultimap.getValue(PREFIX_REMARKS).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"sdevih"},"content":"            editLogDescriptor.setRemarks(argMultimap.getValue(PREFIX_REMARKS).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"sdevih"},"content":"        if (!editLogDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"sdevih"},"content":"            throw new ParseException(LogEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        LogEditCommand test \u003d new LogEditCommand(index, editLogDescriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"sdevih"},"content":"        return new LogEditCommand(index, editLogDescriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":8,"sdevih":54}},{"path":"src/main/java/scrolls/elder/logic/parser/LogFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.commands.LogFindCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":" * Parses input arguments and creates a new LogFindCommand object","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"public class LogFindCommandParser implements Parser\u003cLogFindCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"     * Parses the given {@code String} of arguments in the context of the LogFindCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"     * and returns an LogFindCommand object for execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"    public LogFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ROLE);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"        Index index;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ROLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogFindCommand.MESSAGE_USAGE),","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"                    pe);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"        return new LogFindCommand(index, ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"gerteck":41}},{"path":"src/main/java/scrolls/elder/logic/parser/PairCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.PairCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":" * Parses input arguments and creates a new PairCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"public class PairCommandParser implements Parser\u003cPairCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"     * Parses the given {@code String} of arguments in the context of the PairCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"     * and returns an PairCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"    public PairCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"        String[] pairIndexes \u003d args.trim().split(\" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"        Index index1;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"        Index index2;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"            index1 \u003d ParserUtil.parseIndex(pairIndexes[0]);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"            index2 \u003d ParserUtil.parseIndex(pairIndexes[1]);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PairCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"        return new PairCommand(index1, index2);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"soons1":35}},{"path":"src/main/java/scrolls/elder/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.Command;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"chaaaaun":3,"-":13}},{"path":"src/main/java/scrolls/elder/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"     * Parses a {@code String role} into an {@code Role}.","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"gerteck"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"gerteck"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"gerteck"},"content":"        requireNonNull(role);","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"        formatter.setLenient(false); // to make sure that the date strictly follows the format \"yyyy-MM-dd\"","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"            return formatter.parse(trimmedDate);","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"            throw new ParseException(\"Invalid date format. Expected format is yyyy-MM-dd.\", e);","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"     * Parses a {@code String role} into an {@code Role}.","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"    public static Integer parseInt(String num) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(num);","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"chaaaaun"},"content":"        String trimmedNum \u003d num.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"chaaaaun"},"content":"            return Integer.parseInt(trimmedNum);","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"chaaaaun"},"content":"            throw new ParseException(\"Invalid number format. Expected a number.\", e);","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"gerteck":16,"chaaaaun":48,"-":115}},{"path":"src/main/java/scrolls/elder/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"chaaaaun":1,"-":41}},{"path":"src/main/java/scrolls/elder/logic/parser/UnpairCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.UnpairCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":" * Parses input arguments and creates a new UnpairCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"public class UnpairCommandParser implements Parser\u003cUnpairCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"     * Parses the given {@code String} of arguments in the context of the PairCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"     * and returns an PairCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"    public UnpairCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"        String[] pairIndexes \u003d args.trim().split(\" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"        Index index1;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"        Index index2;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"            index1 \u003d ParserUtil.parseIndex(pairIndexes[0]);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"            index2 \u003d ParserUtil.parseIndex(pairIndexes[1]);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnpairCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"        return new UnpairCommand(index1, index2);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"sdevih":35}},{"path":"src/main/java/scrolls/elder/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"chaaaaun":2,"-":15}},{"path":"src/main/java/scrolls/elder/model/Datastore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":" * Represents the in-memory model of the application data.","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":" * The interface through which all other components access application data.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":" * Does not provide mutators, as that is handled by the individual stores.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"public class Datastore implements ReadOnlyDatastore {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    private final PersonStore persons;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    private final LogStore logs;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"     * Creates an empty Datastore.","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    public Datastore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        persons \u003d new PersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        logs \u003d new LogStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"     * Creates a Datastore using the data in {@code toBeCopied}","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    public Datastore(ReadOnlyDatastore toBeCopied) {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        this();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    //// Datastore accessors","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    public ReadOnlyPersonStore getPersonStore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        return persons;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    public PersonStore getMutablePersonStore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        return persons;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    public ReadOnlyLogStore getLogStore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        return logs;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    public LogStore getMutableLogStore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        return logs;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"     * Resets the existing data of this {@code Datastore} with {@code newData}.","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"    public void resetData(ReadOnlyDatastore newData) {","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        persons.resetData(newData.getPersonStore());","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        logs.resetData(newData.getLogStore());","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    //// Overrides","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        return String.format(\"Datastore{persons\u003d%s, logs\u003d%s}\", persons, logs);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        if (!(other instanceof Datastore)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        Datastore otherDatastore \u003d (Datastore) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        return persons.equals(otherDatastore.persons) \u0026\u0026 logs.equals(otherDatastore.logs);","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"        return Objects.hash(persons, logs);","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"chaaaaun":86}},{"path":"src/main/java/scrolls/elder/model/DatastoreVersionStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":" * Represents a storage for snapshots of the Datastore.","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":" * After every operation where the Datastore of the application is mutated in someway,","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":" * there will be an entry created in the DatastoreVersionStorage to enable undo and redo operations.","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"public class DatastoreVersionStorage {","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"     * The list of datastore versions stored in this storage.","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    private ArrayList\u003cReadOnlyDatastore\u003e datastoreVersions;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"     * The pointer indicating the current position in the list of versions.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    private int currentStatePointer;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"     * Constructs a new DatastoreVersionStorage with an initial snapshot of the provided datastore.","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     * @param datastore The initial state of the Datastore.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    public DatastoreVersionStorage(ReadOnlyDatastore datastore) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"        this.datastoreVersions \u003d new ArrayList\u003cReadOnlyDatastore\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"        // Note that snapshot must be a deep copy.","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        datastoreVersions.add(new Datastore(datastore));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        this.currentStatePointer \u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     * Checks if an undo operation is possible.","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"     * @return true if an undo operation can be performed, false otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    public boolean canUndo() {","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"        // Pointer has at least 1 version of datastore to its left","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        if (currentStatePointer \u003e 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"     * Checks if a redo operation is possible.","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"     * @return true if a redo operation can be performed, false otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"    public boolean canRedo() {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        int size \u003d datastoreVersions.size() - 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        // pointer is not at the end of the version history","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        if (currentStatePointer \u003c size) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"        return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"     * Executes the undo operation by reverting to the previous version of the Datastore.","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"     * @return The Datastore in its previous state after undoing an operation.","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"    public ReadOnlyDatastore executeUndo() {","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"        assert this.canUndo() : \"Undo command cannot be executed\";","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"        currentStatePointer--;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"        ReadOnlyDatastore prevDatastore \u003d datastoreVersions.get(currentStatePointer);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"        return prevDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"     * Executes the redo operation by moving forward to the next version of the Datastore.","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"     * @return The Datastore in its next state after reversing an undo operation.","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"    public ReadOnlyDatastore executeRedo() {","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"        assert this.canRedo() : \"Redo command cannot be executed\";","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"        ReadOnlyDatastore nextDatastore \u003d datastoreVersions.get(currentStatePointer);","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"        return nextDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"     * Commits a new snapshot of the Datastore to the storage.","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"     * If the currentStatePointer is not at the end of the list, purges","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"     * the subsequent snapshots before adding the new one.","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"     * @param datastore The updated state of the Datastore to be committed.","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"    public void commitDatastore(ReadOnlyDatastore datastore) {","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"        int size \u003d this.datastoreVersions.size();","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"        // If not at end of list, purge the data before adding new datastore snapshot","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"        if (currentStatePointer \u003c size - 1) {","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"            for (int i \u003d currentStatePointer + 1; i \u003c size; i++) {","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"                this.datastoreVersions.remove(i);","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        this.datastoreVersions.add(new Datastore(datastore));","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"CJerrong":110}},{"path":"src/main/java/scrolls/elder/model/LogStore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.MapChangeListener;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":" * Wraps data for all logs stored.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":" * All logs stored are guaranteed to have IDs consistent with the {@code logIdSequence} of the {@code LogStore}","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":" * instance.","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"public class LogStore implements ReadOnlyLogStore {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    public static final Predicate\u003cLog\u003e PREDICATE_SHOW_ALL_LOGS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    private final ObservableMap\u003cInteger, Log\u003e logs;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    private final ObservableMap\u003cInteger, ArrayList\u003cInteger\u003e\u003e normalisedLogsByPerson;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    private final ObservableList\u003cLog\u003e logList;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    private final FilteredList\u003cLog\u003e filteredLogList;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"     * The sequence number that determines the ID of the next log to be added.","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    private int logIdSequence;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"     * Creates an empty LogStore.","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    public LogStore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        this.logIdSequence \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        this.logs \u003d FXCollections.observableHashMap();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        this.normalisedLogsByPerson \u003d FXCollections.observableHashMap();","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        this.logList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"        this.filteredLogList \u003d new FilteredList\u003c\u003e(logList);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        // Binds the backing Map to:","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        // - The main ObservableList of logs","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        // - The normalised map of logs by person","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"        MapChangeListener\u003c? super Integer, ? super Log\u003e listener \u003d change -\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"            if (change.wasRemoved()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"                logList.remove(change.getValueRemoved());","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"                deepRemoveId(normalisedLogsByPerson, change.getValueRemoved().getVolunteerId(),","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"                    change.getValueRemoved().getLogId());","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"                deepRemoveId(normalisedLogsByPerson, change.getValueRemoved().getBefriendeeId(),","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"                    change.getValueRemoved().getLogId());","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"            if (change.wasAdded()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"                logList.add(change.getValueAdded());","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"                deepAddId(normalisedLogsByPerson, change.getValueAdded().getVolunteerId(),","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"                    change.getValueAdded().getLogId());","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"                deepAddId(normalisedLogsByPerson, change.getValueAdded().getBefriendeeId(),","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"                    change.getValueAdded().getLogId());","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        };","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        logs.addListener(listener);","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"     * Creates an LogStore using the Logs in {@code toBeCopied}","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"    public LogStore(ReadOnlyLogStore toBeCopied) {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        this();","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"    //// Collection-level getters and setters","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"    public ObservableList\u003cLog\u003e getUnfilteredAllLogsList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"        return logs.values()","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"                .stream()","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"gerteck"},"content":"                .collect(Collectors.collectingAndThen(Collectors.toList(), FXCollections::observableArrayList));","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"    public ObservableList\u003cLog\u003e getLogList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"        return FXCollections.unmodifiableObservableList(logList);","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"    public ObservableList\u003cLog\u003e getFilteredLogList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"        return filteredLogList;","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"    public void updateFilteredLogList(Predicate\u003cLog\u003e predicate) {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"        filteredLogList.setPredicate(predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"    public void updateFilteredLogListByPersonId(Integer personId) {","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"        // Reset when no filter is applied","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"        if (personId \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"            logList.setAll(logs.values());","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"            return;","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"        // Filter by personId","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        logList.clear();","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"        // if logs do not exist","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"        if (normalisedLogsByPerson.get(personId) \u003d\u003d null || normalisedLogsByPerson.get(personId).isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"            return;","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"        normalisedLogsByPerson.get(personId).forEach(logId -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"            Log log \u003d logs.get(logId);","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"            if (log !\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"                logList.add(log);","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        });","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"     * Replaces the contents of the log list with {@code logs}.","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"    public void setLogList(List\u003cLog\u003e logs) {","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"        this.logs.clear();","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"        int maxId \u003d -1;","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"        for (Log log : logs) {","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"            maxId \u003d Math.max(maxId, log.getLogId());","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"            this.logs.put(log.getLogId(), log);","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"        logIdSequence \u003d maxId + 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"     * Resets the existing data of this {@code LogStore} with {@code newData}.","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"    public void resetData(ReadOnlyLogStore newData) {","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"        setLogList(newData.getLogList());","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"    //// Log-level CRUD operations","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"     * Returns true if a log with the same identity as {@code log} exists in the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"    public boolean hasLog(Log log) {","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(log);","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"        return logs.containsKey(log.getLogId());","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"     * Adds a log to the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"     * Any relational validation (i.e., volunteerId) should be done before calling this method.","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"CJerrong"},"content":"     * Returns the log id for the newly added log.","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"CJerrong"},"content":"    public Integer addLog(Log newLog) {","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(newLog);","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"CJerrong"},"content":"        int prevLogIdSequence \u003d logIdSequence;","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"        logs.put(logIdSequence, new Log(logIdSequence, newLog));","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"        logIdSequence++;","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"CJerrong"},"content":"        return prevLogIdSequence;","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"chaaaaun"},"content":"     * Adds an existing log to the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"chaaaaun"},"content":"     * For the case where existing logs are read from storage.","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"chaaaaun"},"content":"    public void addLogWithId(Log newLog) {","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(newLog);","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"chaaaaun"},"content":"        logs.put(newLog.getLogId(), newLog);","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"chaaaaun"},"content":"        if (newLog.getLogId() \u003e\u003d logIdSequence) {","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"chaaaaun"},"content":"            logIdSequence \u003d newLog.getLogId() + 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"chaaaaun"},"content":"    public Log getLogById(int logId) {","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"chaaaaun"},"content":"        return logs.get(logId);","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"chaaaaun"},"content":"     * Updates a log with the given data from {@code editedLog}.","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"chaaaaun"},"content":"     * {@code editedLog} must contain an ID that matches an existing log in the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"chaaaaun"},"content":"    public void setLog(Log editedLog) {","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(editedLog);","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"chaaaaun"},"content":"        logs.put(editedLog.getLogId(), editedLog);","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"chaaaaun"},"content":"     * Removes the log with the given ID from the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"chaaaaun"},"content":"     * {@code idToRemove} must exist in the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"chaaaaun"},"content":"    public void removeLog(int idToRemove) {","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"chaaaaun"},"content":"        logs.remove(idToRemove);","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"chaaaaun"},"content":"     * Adds a logId to the normalised map.","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"chaaaaun"},"content":"     * Must replace the entire list to trigger the listener.","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"chaaaaun"},"content":"    private void deepAddId(ObservableMap\u003cInteger, ArrayList\u003cInteger\u003e\u003e map, int key, int value) {","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"chaaaaun"},"content":"        ArrayList\u003cInteger\u003e oldList \u003d map.getOrDefault(key, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"chaaaaun"},"content":"        ArrayList\u003cInteger\u003e temp \u003d new ArrayList\u003c\u003e(oldList);","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"chaaaaun"},"content":"        temp.add(value);","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"chaaaaun"},"content":"        map.put(key, temp);","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"chaaaaun"},"content":"     * Removes a logId from the normalised map.","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"chaaaaun"},"content":"     * Must replace the entire list to trigger the listener.","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"chaaaaun"},"content":"    private void deepRemoveId(ObservableMap\u003cInteger, ArrayList\u003cInteger\u003e\u003e map, int key, int value) {","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"chaaaaun"},"content":"        ArrayList\u003cInteger\u003e oldList \u003d map.getOrDefault(key, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"chaaaaun"},"content":"        ArrayList\u003cInteger\u003e temp \u003d new ArrayList\u003c\u003e(oldList);","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"chaaaaun"},"content":"        temp.remove(value);","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"chaaaaun"},"content":"        map.put(key, temp);","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"chaaaaun"},"content":"    //// Overrides","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"chaaaaun"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"chaaaaun"},"content":"            .add(\"logs\", logList)","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"chaaaaun"},"content":"            .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"chaaaaun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"chaaaaun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"chaaaaun"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"chaaaaun"},"content":"        if (!(other instanceof LogStore)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"chaaaaun"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":247,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":248,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"chaaaaun"},"content":"        LogStore otherLogStore \u003d (LogStore) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"chaaaaun"},"content":"        return logs.equals(otherLogStore.logs);","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"chaaaaun"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":255,"author":{"gitId":"chaaaaun"},"content":"        return logs.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":256,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":257,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CJerrong":22,"gerteck":13,"chaaaaun":222}},{"path":"src/main/java/scrolls/elder/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import com.sun.jdi.request.InvalidRequestStateException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":" * The API of the Model component. Controls in-memory data of the application.","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"    Predicate\u003cLog\u003e PREDICATE_SHOW_ALL_LOGS \u003d unused -\u003e true;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    //// UserPrefs getters and setters","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    //// Datastore getters and setters","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"     * Returns the user prefs\u0027 datastore file path.","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    Path getDatastoreFilePath();","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"     * Sets the user prefs\u0027 datastore file path.","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"    void setDatastoreFilePath(Path datastoreFilePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    //// Datastore getters and setters","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"     * Returns a readonly view of the Datastore","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    ReadOnlyDatastore getDatastore();","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"     * Returns a mutable view of the Datastore","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"    Datastore getMutableDatastore();","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"     * Replaces Datastore with the data in {@code datastore}.","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"    void setDatastore(ReadOnlyDatastore datastore);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"     * Returns a view of the DatastoreVersionStorage","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"    DatastoreVersionStorage getDatastoreVersionStorage();","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"     * Commits Datastore to the DatastoreVersionStorage with the cuurent data in {@code datastore}.","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"    void commitDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"     * Reverts the datastore to its previous state immediately before the current datastore state.","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidRequestStateException If there are no changes to undo.","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"    void undoChanges();","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"     * Reverses the effects of the most recent undo operation.","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"     * @throws InvalidRequestStateException If there are no undo operations to reverse.","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"    void redoChanges();","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"     * Returns a boolean value on whether undo operations can be carried out on the current datastore.","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"    boolean canUndoDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"     * Returns a boolean value on whether redo operations can be carried out on the current datastore.","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"    boolean canRedoDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"CJerrong":34,"gerteck":3,"chaaaaun":24,"-":44}},{"path":"src/main/java/scrolls/elder/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    private final Datastore datastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    private final DatastoreVersionStorage datastoreVersionStorage;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    public ModelManager(ReadOnlyDatastore datastore, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        CollectionUtil.requireAllNonNull(datastore, userPrefs);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        logger.fine(\"Initializing with datastore: \" + datastore + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        this.datastore \u003d new Datastore(datastore);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        this.datastoreVersionStorage \u003d new DatastoreVersionStorage(this.datastore);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"     * Initializes a ModelManager with the default datastore and user preferences.","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        this(new Datastore(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        return userPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"    public Path getDatastoreFilePath() {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        return userPrefs.getDatastoreFilePath();","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"    public void setDatastoreFilePath(Path datastoreFilePath) {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(datastoreFilePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        userPrefs.setDatastoreFilePath(datastoreFilePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Datastore \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"    public ReadOnlyDatastore getDatastore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        return datastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"    public Datastore getMutableDatastore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        return datastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"    public void setDatastore(ReadOnlyDatastore d) {","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        datastore.resetData(d);","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"    public DatastoreVersionStorage getDatastoreVersionStorage() {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"        return datastoreVersionStorage;","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"    public void commitDatastore() {","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"        this.datastoreVersionStorage.commitDatastore(this.datastore);","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"    public void undoChanges() {","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"        assert this.datastoreVersionStorage.canUndo() : \"Undo command cannot be carried out\";","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        ReadOnlyDatastore prevDatastore \u003d this.datastoreVersionStorage.executeUndo();","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"        this.setDatastore(prevDatastore);","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"    public void redoChanges() {","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"        assert this.datastoreVersionStorage.canRedo() : \"Redo command cannot be carried out\";","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"        ReadOnlyDatastore nextDatastore \u003d this.datastoreVersionStorage.executeRedo();","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"        this.setDatastore(nextDatastore);","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"    public boolean canUndoDatastore() {","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"        return this.datastoreVersionStorage.canUndo();","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"    public boolean canRedoDatastore() {","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"CJerrong"},"content":"        return this.datastoreVersionStorage.canRedo();","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"gerteck"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Overrides \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"        return datastore.equals(otherModelManager.datastore)","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs);","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CJerrong":38,"gerteck":4,"chaaaaun":32,"-":73}},{"path":"src/main/java/scrolls/elder/model/PersonStore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.UniquePersonList;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":" * Wraps all data for all persons stored.","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"public class PersonStore implements ReadOnlyPersonStore {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    private static final Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    private int personIdSequence;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    private final FilteredList\u003cPerson\u003e filteredVolunteers;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    private final FilteredList\u003cPerson\u003e filteredBefriendees;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"     * Creates an empty PersonStore.","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    public PersonStore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        this.personIdSequence \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        this.persons \u003d new UniquePersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        ObservableList\u003cPerson\u003e personList \u003d persons.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(personList);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        filteredVolunteers \u003d new FilteredList\u003c\u003e(personList, person -\u003e person.isVolunteer());","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        filteredBefriendees \u003d new FilteredList\u003c\u003e(personList, person -\u003e !(person.isVolunteer()));","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"     * Creates a PersonStore using the data in the {@code toBeCopied}","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    public PersonStore(ReadOnlyPersonStore toBeCopied) {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        this();","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    //// Collection-level getters and setters","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        return filteredPersons;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    public ObservableList\u003cPerson\u003e getFilteredVolunteerList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        return filteredVolunteers;","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"    public ObservableList\u003cPerson\u003e getFilteredBefriendeeList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        return filteredBefriendees;","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        filteredVolunteers.setPredicate(person -\u003e predicate.test(person) \u0026\u0026 person.isVolunteer());","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"        filteredBefriendees.setPredicate(person -\u003e predicate.test(person) \u0026\u0026 person.isBefriendee());","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"    public void updateFilteredVolunteerList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"        // Only apply predicate to volunteers","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"gerteck"},"content":"        filteredPersons.setPredicate(person -\u003e person.isBefriendee() || predicate.test(person));","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"gerteck"},"content":"        filteredVolunteers.setPredicate(person -\u003e predicate.test(person) \u0026\u0026 person.isVolunteer());","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"    public void updateFilteredBefriendeeList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"        // Only apply predicate to befriendees","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"        filteredPersons.setPredicate(person -\u003e predicate.test(person) || person.isVolunteer());","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"        filteredBefriendees.setPredicate(person -\u003e predicate.test(person) \u0026\u0026 person.isBefriendee());","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"    public void setPersonList(List\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"     * Resets the existing data of this {@code PersonStore} with {@code newData}.","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"     * Implicitly sets the {@code personIdSequence} to the maximum ID in the new data plus one.","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"    public void resetData(ReadOnlyPersonStore newData) {","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"chaaaaun"},"content":"        this.personIdSequence \u003d newData.getPersonList()","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"                .stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"                .map(Person::getPersonId)","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"                .max(Integer::compare)","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"                .map(max -\u003e max + 1)","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"                .orElse(0);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"        setPersonList(newData.getPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"    //// Person-level CRUD operations","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"        return persons.contains(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"     * Returns the person with the given ID.","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"    public Person getPersonFromID(int id) {","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"        return persons.getPersonFromID(id);","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"     * Returns the person\u0027s name with the given ID.","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"    public Name getNameFromID(int id) {","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"        Person target \u003d persons.getPersonFromID(id);","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"        return target.getName();","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"     * Adds a person to the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"     * The person must not already exist in the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"        Person withId \u003d PersonFactory.withIdFromPerson(personIdSequence, p);","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"        persons.add(withId);","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"        personIdSequence++;","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"     * Adds an existing person to the store.","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"     * For the case where existing persons are read from storage.","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"    public void addPersonWithId(Person p) {","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"        persons.add(p);","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"        if (p.getPersonId() \u003e\u003d personIdSequence) {","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"            personIdSequence \u003d p.getPersonId() + 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"chaaaaun"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"chaaaaun"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"chaaaaun"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"chaaaaun"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"chaaaaun"},"content":"        Person withId \u003d PersonFactory.withIdFromPerson(target.getPersonId(), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"chaaaaun"},"content":"        persons.setPerson(target, withId);","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"chaaaaun"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"chaaaaun"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"chaaaaun"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"chaaaaun"},"content":"        persons.remove(key);","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"chaaaaun"},"content":"    //// Util methods","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"chaaaaun"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"chaaaaun"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"chaaaaun"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"chaaaaun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"chaaaaun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"chaaaaun"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"chaaaaun"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"chaaaaun"},"content":"        if (!(other instanceof PersonStore)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"chaaaaun"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"chaaaaun"},"content":"        PersonStore otherPersonStore \u003d (PersonStore) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"chaaaaun"},"content":"        return persons.equals(otherPersonStore.persons);","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"chaaaaun"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"chaaaaun"},"content":"        return persons.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CJerrong":10,"gerteck":21,"chaaaaun":187}},{"path":"src/main/java/scrolls/elder/model/ReadOnlyDatastore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":" * Unmodifiable view of the entire datastore.","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"public interface ReadOnlyDatastore {","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"     * Returns an unmodifiable view of the persons store.","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    ReadOnlyPersonStore getPersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"     * Returns an unmodifiable view of the logs store.","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    ReadOnlyLogStore getLogStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"chaaaaun":17}},{"path":"src/main/java/scrolls/elder/model/ReadOnlyLogStore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":" * Unmodifiable view of the log store.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"public interface ReadOnlyLogStore {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"     * Returns an unmodifiable view of all logs in an unfiltered list.","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"     * This list is unaffected by any filtering operations.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"    ObservableList\u003cLog\u003e getUnfilteredAllLogsList();","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"     * Returns an unmodifiable view of the log list.","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"     * This Log List is affected by personID filtering operations.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"     * However, it is not affected by Predicate\u0026lt;Log\u0026gt; filtering operations.","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    ObservableList\u003cLog\u003e getLogList();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"     * Returns a filtered view of the log list.","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"     * This Log List is affected by personID filtering operations.","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    ObservableList\u003cLog\u003e getFilteredLogList();","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"     * Updates the filter of the filtered log list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"     * Predicate\u0026lt;Log\u0026gt; filters are independent of PersonID filters.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    void updateFilteredLogList(Predicate\u003cLog\u003e predicate);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"     * Returns the log with the given ID.","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"     * {@code logId} must exist in the store.","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"    Log getLogById(int logId);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"     * Updates the log list to filter by the given {@code personId}.","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"     * Supply null to reset the filter.","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"     * This filter will persist for all filtering done with {@link LogStore#updateFilteredLogList}.","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    void updateFilteredLogListByPersonId(Integer personId);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CJerrong":20,"gerteck":11,"chaaaaun":22}},{"path":"src/main/java/scrolls/elder/model/ReadOnlyPersonStore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":" * Unmodifiable view of the person store.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"public interface ReadOnlyPersonStore {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"     * Returns an unmodifiable view of the filtered person list.","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"     * To update this view, see {@link #updateFilteredPersonList(Predicate)}","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"     * Returns an unmodifiable view of the filtered volunteer list.","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"     * To update this view, see {@link #updateFilteredPersonList(Predicate)}","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    ObservableList\u003cPerson\u003e getFilteredVolunteerList();","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"     * Returns an unmodifiable view of the filtered befriendee list.","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"     * To update this view, see {@link #updateFilteredPersonList(Predicate)}","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    ObservableList\u003cPerson\u003e getFilteredBefriendeeList();","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"     * Returns the name of the person in the list with the given id.","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    Name getNameFromID(int id);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"     * Updates the filter of the filtered volunteer list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"     * Befriendee list is not filtered.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"    void updateFilteredVolunteerList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"     * Updates the filter of the filtered befriendee list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"     * Volunteer list is not filtered.","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"    void updateFilteredBefriendeeList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CJerrong":6,"gerteck":14,"chaaaaun":41}},{"path":"src/main/java/scrolls/elder/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    Path getDatastoreFilePath();","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chaaaaun":3,"-":13}},{"path":"src/main/java/scrolls/elder/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    private Path datastoreFilePath \u003d Paths.get(\"data\", \"datastore.json\");","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        setDatastoreFilePath(newUserPrefs.getDatastoreFilePath());","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    public Path getDatastoreFilePath() {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        return datastoreFilePath;","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    @JsonProperty(\"datastoreFilePath\")","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    public String getDatastoreFilePathString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        return datastoreFilePath.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    public void setDatastoreFilePath(Path datastoreFilePath) {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(datastoreFilePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        this.datastoreFilePath \u003d datastoreFilePath;","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 datastoreFilePath.equals(otherUserPrefs.datastoreFilePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"        return Objects.hash(guiSettings, datastoreFilePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"        sb.append(\"\\nLocal data file location : \" + datastoreFilePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":19,"-":76}},{"path":"src/main/java/scrolls/elder/model/log/Log.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.log;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.AppUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":" * Represents a log of a volunteer\u0027s interaction with a befriendee.","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":" * Guarantees: immutable; IDs of both Persons are valid.","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"public class Log {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    public static final String MESSAGE_INVALID_ID \u003d \"The volunteer ID or befriendee ID is invalid.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    public static final int PLACEHOLDER_ID \u003d -1;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    private final int logId;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    private final String title;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    private final int volunteerId;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    private final int befriendeeId;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    private final int duration;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    private final Date startDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    private final String remarks;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"     * Creates a log with all given fields.","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    public Log(@JsonProperty(\"logId\") int logId, @JsonProperty(\"title\") String title,","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"               @JsonProperty(\"volunteerId\") int volunteerId,","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"               @JsonProperty(\"befriendeeId\") int befriendeeId, @JsonProperty(\"duration\") int duration,","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"               @JsonProperty(\"startDate\") Date startDate, @JsonProperty(\"remarks\") String remarks) {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        this.logId \u003d logId;","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        this.volunteerId \u003d volunteerId;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        this.befriendeeId \u003d befriendeeId;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"     * Creates a log with the given volunteer ID and befriendee ID.","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"    public Log(ReadOnlyDatastore datastore, String title, int volunteerId, int befriendeeId, int duration,","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"               Date startDate, String remarks) {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        AppUtil.checkArgument(areValidIds(datastore, volunteerId, befriendeeId), MESSAGE_INVALID_ID);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        this.logId \u003d PLACEHOLDER_ID;","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"        this.volunteerId \u003d volunteerId;","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        this.befriendeeId \u003d befriendeeId;","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"     * Creates a log with the given log ID from the data of another Log.","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"    public Log(int logId, Log log) {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        this.logId \u003d logId;","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"        this.title \u003d log.title;","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        this.volunteerId \u003d log.volunteerId;","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        this.befriendeeId \u003d log.befriendeeId;","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        this.duration \u003d log.duration;","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"        this.startDate \u003d log.startDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        this.remarks \u003d log.remarks;","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"     * Checks if the given IDs are valid for the given datastore.","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"    public boolean areValidIds(ReadOnlyDatastore datastore, int vid, int bid) {","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        ObservableList\u003cPerson\u003e persons \u003d datastore.getPersonStore().getPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        boolean volunteerIdExists \u003d false;","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"        boolean befriendeeIdExists \u003d false;","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        for (Person person : persons) {","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"            if (person.isVolunteer() \u0026\u0026 person.getPersonId() \u003d\u003d vid) {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"                volunteerIdExists \u003d true;","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"            if (!person.isVolunteer() \u0026\u0026 person.getPersonId() \u003d\u003d bid) {","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"                befriendeeIdExists \u003d true;","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"        return volunteerIdExists \u0026\u0026 befriendeeIdExists;","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"    public int getLogId() {","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"        return logId;","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"    public String getLogTitle() {","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"        return title;","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"    public int getVolunteerId() {","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"        return volunteerId;","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"    public int getBefriendeeId() {","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"        return befriendeeId;","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"    public int getDuration() {","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        return duration;","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"    public Date getStartDate() {","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"        return startDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"    public String getRemarks() {","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"        return remarks;","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"        if (!(other instanceof Log)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"        Log otherLog \u003d (Log) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"        return title \u003d\u003d otherLog.title","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"            \u0026\u0026 volunteerId \u003d\u003d otherLog.volunteerId","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 befriendeeId \u003d\u003d otherLog.befriendeeId","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 duration \u003d\u003d otherLog.duration","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 startDate.equals(otherLog.startDate)","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"            \u0026\u0026 remarks.equals(otherLog.remarks);","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"        return Objects.hash(title, volunteerId, befriendeeId, duration, startDate, remarks);","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"            .add(\"Log ID\", logId)","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"            .add(\"Title\", title)","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"            .add(\"Volunteer ID\", volunteerId)","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"            .add(\"Befriendee ID\", befriendeeId)","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"            .add(\"Duration\", duration)","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"            .add(\"Start Date\", startDate)","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"            .add(\"Remarks\", remarks)","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"            .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"CJerrong":16,"chaaaaun":143}},{"path":"src/main/java/scrolls/elder/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.AppUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        AppUtil.checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":4,"-":62}},{"path":"src/main/java/scrolls/elder/model/person/Befriendee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * Represents a Befriendee in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"public class Befriendee extends Person {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"     * Creates a befriendee with the data from the relevant parameters","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    public Befriendee(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"                      Optional\u003cName\u003e pairedWithName, Optional\u003cInteger\u003e pairedWithId, int timeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"                      Optional\u003cInteger\u003e latestLogId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"        super(name, phone, email, address, tags, new Role(\"befriendee\"), pairedWithName, pairedWithId,","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"                timeServed, latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"     * Creates a befriendee with the data of {@code p} and corresponding ID.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    public Befriendee(int id, Person p) {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        super(id, p);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    public boolean isVolunteer() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"        return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"    public boolean isBefriendee() {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"        return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"    public Role getRole() {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"        return this.role;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"        if (!(other instanceof Befriendee)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        // TODO figure out how to assert equals for date, without GitHub actions acting up, try using LocalDate","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"        Befriendee otherBefriendee \u003d (Befriendee) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"        return name.equals(otherBefriendee.name)","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 phone.equals(otherBefriendee.phone)","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 email.equals(otherBefriendee.email)","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 address.equals(otherBefriendee.address)","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"                \u0026\u0026 tags.equals(otherBefriendee.tags)","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 pairedWithName.equals(otherBefriendee.pairedWithName)","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"soons1"},"content":"                \u0026\u0026 pairedWithId.equals(otherBefriendee.pairedWithId)","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 timeServed \u003d\u003d otherBefriendee.timeServed","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 latestLogId.equals(otherBefriendee.latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"                .add(\"role\", role)","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"                .add(\"pairedWithName\", pairedWithName.orElse(Name.getNone()))","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"                .add(\"pairedWithId\", pairedWithId.orElse(-1))","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"soons1"},"content":"                .add(\"timeServed\", timeServed)","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"                .add(\"latestLogId\", latestLogId.orElse(-1))","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"                .toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"CJerrong":64,"soons1":3,"gerteck":10,"chaaaaun":9}},{"path":"src/main/java/scrolls/elder/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.AppUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        AppUtil.checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":4,"-":76}},{"path":"src/main/java/scrolls/elder/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.AppUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"    private static final Name NONE \u003d new Name(\"None\");","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"    public static Name getNone() {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"        return NONE;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soons1":4,"chaaaaun":4,"-":64}},{"path":"src/main/java/scrolls/elder/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"        return keywords.isEmpty();","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"gerteck":4,"chaaaaun":3,"-":41}},{"path":"src/main/java/scrolls/elder/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"public abstract class Person {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    private static final int PLACEHOLDER_ID \u003d -1;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    protected final int personId;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    protected final Name name;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    protected final Phone phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    protected final Email email;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"    protected final Role role;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    protected final Address address;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    protected final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    protected final Optional\u003cName\u003e pairedWithName;","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    protected final Optional\u003cInteger\u003e pairedWithId;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"    protected final int timeServed;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    protected final Optional\u003cInteger\u003e latestLogId;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Role role,","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"                  Optional\u003cName\u003e pairedWithName, Optional\u003cInteger\u003e pairedWithId, int timeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"                  Optional\u003cInteger\u003e latestLogId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        CollectionUtil.requireAllNonNull(name, phone, email, address, tags, role, pairedWithName, pairedWithId);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        this.personId \u003d PLACEHOLDER_ID;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"        this.pairedWithName \u003d pairedWithName;","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"        this.pairedWithId \u003d pairedWithId;","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"        assert timeServed \u003e\u003d 0 : \"Time served must be non-negative\";","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"        this.timeServed \u003d timeServed;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        this.latestLogId \u003d latestLogId;","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"     * Creates a person with the given ID and data of {@code p}.","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    public Person(int personId, Person p) {","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        this.name \u003d p.getName();","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        this.phone \u003d p.getPhone();","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        this.email \u003d p.getEmail();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        this.address \u003d p.getAddress();","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        this.tags.addAll(p.getTags());","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        this.role \u003d p.getRole();","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        this.pairedWithName \u003d p.getPairedWithName();","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        this.pairedWithId \u003d p.getPairedWithId();","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"        this.timeServed \u003d p.getTimeServed();","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"        this.latestLogId \u003d p.getLatestLogId();","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"    public int getPersonId() {","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        return personId;","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"    public Optional\u003cName\u003e getPairedWithName() {","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"        return pairedWithName;","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"    public Optional\u003cInteger\u003e getPairedWithId() {","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"        return pairedWithId;","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"soons1"},"content":"    public int getTimeServed() {","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"soons1"},"content":"        return timeServed;","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"    public Optional\u003cInteger\u003e getLatestLogId() {","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"        return latestLogId;","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"sdevih"},"content":"    public boolean isPairPresent(Person person) {","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"        return person.getPairedWithName().isPresent();","lastModifiedDate":"2024-03-22"},{"lineNumber":118,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"soons1"},"content":"    public boolean isPaired() {","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"        return pairedWithName.isPresent();","lastModifiedDate":"2024-03-22"},{"lineNumber":122,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"soons1"},"content":"    public boolean isPairedWith(Person otherPerson) {","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"soons1"},"content":"        return pairedWithId.isPresent() \u0026\u0026 pairedWithId.get() \u003d\u003d otherPerson.getPersonId();","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getPersonId() \u003d\u003d this.getPersonId();","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"     * Returns true if the latest log id is present","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"    public boolean isLatestLogPresent() {","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"        return latestLogId.isPresent();","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"    * Returns true if person is a volunteer, and false if person is not a volunteer","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"    */","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"CJerrong"},"content":"    public abstract boolean isVolunteer();","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"gerteck"},"content":"    * Returns true if person is a befriendee, and false if person is not a befriendee","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"gerteck"},"content":"    */","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"gerteck"},"content":"    public abstract boolean isBefriendee();","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"gerteck"},"content":"    public abstract Role getRole();","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"    //// Overrides","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"        return personId \u003d\u003d otherPerson.personId","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"chaaaaun"},"content":"                \u0026\u0026 name.equals(otherPerson.name)","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"gerteck"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":183,"author":{"gitId":"soons1"},"content":"                \u0026\u0026 role.equals(otherPerson.role)","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 pairedWithName.equals(otherPerson.pairedWithName)","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"soons1"},"content":"                \u0026\u0026 pairedWithId.equals(otherPerson.pairedWithId)","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 timeServed \u003d\u003d otherPerson.timeServed","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 latestLogId.equals(latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"soons1"},"content":"        return Objects","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"CJerrong"},"content":"                .hash(personId, name, phone, email, address, tags, role, pairedWithName, pairedWithId,","lastModifiedDate":"2024-04-01"},{"lineNumber":195,"author":{"gitId":"CJerrong"},"content":"                        timeServed, latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":198,"author":{"gitId":"CJerrong"},"content":"    // TODO potential issues with date","lastModifiedDate":"2024-04-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":202,"author":{"gitId":"chaaaaun"},"content":"                .add(\"id\", personId)","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"gerteck"},"content":"                .add(\"role\", role)","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"CJerrong"},"content":"                .add(\"pairedWithName\", pairedWithName.orElse(Name.getNone()))","lastModifiedDate":"2024-03-22"},{"lineNumber":210,"author":{"gitId":"chaaaaun"},"content":"                .add(\"pairedWithId\", pairedWithId.orElse(-1))","lastModifiedDate":"2024-03-24"},{"lineNumber":211,"author":{"gitId":"soons1"},"content":"                .add(\"timeServed\", timeServed)","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"CJerrong"},"content":"                .add(\"latestLogId\", latestLogId.orElse(-1))","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"soons1":20,"CJerrong":42,"gerteck":14,"chaaaaun":38,"-":99,"sdevih":3}},{"path":"src/main/java/scrolls/elder/model/person/PersonFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":" * Provides a factory method to create a concrete Person object.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"public class PersonFactory {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"     * Creates a Person object without ID from the given parameters.","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"    public static Person fromParams(Name modelName, Phone modelPhone, Email modelEmail, Address modelAddress,","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"                                    Role modelRole, Set\u003cTag\u003e modelTags, Optional\u003cName\u003e modelPairedWithName,","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"                                    Optional\u003cInteger\u003e modelPairedWithID, int modelTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"                                    Optional\u003cInteger\u003e modelLatestLogId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"        if (modelRole.isVolunteer()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"            return new Volunteer(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"                    modelPairedWithName, modelPairedWithID, modelTimeServed, modelLatestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"            assert modelRole.isBefriendee();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"            return new Befriendee(modelName, modelPhone, modelEmail, modelAddress, modelTags,","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"                    modelPairedWithName, modelPairedWithID, modelTimeServed, modelLatestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     * Creates a Person object with valid ID from the given parameters.","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    public static Person withIdFromParams(int id, Name modelName, Phone modelPhone, Email modelEmail,","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"                                          Address modelAddress,","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"                                          Role modelRole, Set\u003cTag\u003e modelTags, Optional\u003cName\u003e modelPairedWithName,","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"                                          Optional\u003cInteger\u003e modelPairedWithID, int modelTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"                                          Optional\u003cInteger\u003e modelLatestLogId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        return withIdFromPerson(id, fromParams(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"                modelRole, modelTags, modelPairedWithName, modelPairedWithID, modelTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"                modelLatestLogId));","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"     * Creates a Person object from another Person object.","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    public static Person withIdFromPerson(int id, Person p) {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        return p.isVolunteer() ? new Volunteer(id, p) : new Befriendee(id, p);","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CJerrong":8,"chaaaaun":40}},{"path":"src/main/java/scrolls/elder/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.AppUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":4,"-":58}},{"path":"src/main/java/scrolls/elder/model/person/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.commons.util.AppUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRole(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"public class Role {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"            \"Role should only be either \u0027volunteer\u0027 or befriendee\u0027, and it should not be blank.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"    /*","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"    public static final String VALIDATION_REGEX \u003d \"^befriendee|volunteer$\";","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"    public final String value;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"     * @param role A valid name.","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"    public Role(String role) {","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"        requireNonNull(role);","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"        AppUtil.checkArgument(isValidRole(role), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"        this.value \u003d role.toLowerCase();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"        return test.toLowerCase().matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"    public boolean isVolunteer() {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"        return this.value.equals(\"volunteer\");","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"    public boolean isBefriendee() {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"        return this.value.equals(\"befriendee\");","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"        return value;","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"        if (!(other instanceof Role)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"        Role otherName \u003d (Role) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"        return value.equals(otherName.value);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"gerteck":76}},{"path":"src/main/java/scrolls/elder/model/person/TagListContainsTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the tags given.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"public class TagListContainsTagsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"    private final Set\u003cTag\u003e tagList;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"    public TagListContainsTagsPredicate(Set\u003cTag\u003e tagList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"        this.tagList \u003d tagList;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"        return tagList.isEmpty();","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"        return tagList.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"                .anyMatch(tag -\u003e person.getTags().contains(tag));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"        if (!(other instanceof TagListContainsTagsPredicate)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate otherTagListContainsTagsPredicate \u003d (TagListContainsTagsPredicate) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"        return tagList.equals(otherTagListContainsTagsPredicate.tagList);","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"        return new ToStringBuilder(this).add(\"tags\", tagList).toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"gerteck":51}},{"path":"src/main/java/scrolls/elder/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"        CollectionUtil.requireAllNonNull(persons);","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"    public Person getPersonFromID(int i) {","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"        FilteredList\u003cPerson\u003e listByID \u003d internalList.filtered(person -\u003e person.getPersonId() \u003d\u003d i);","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"        // TODO exception for duplicate id","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"        if (listByID.size() !\u003d 1) {","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"            System.out.println(\"List has duplicate id, should not be the case\");","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"        return listByID.get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CJerrong":8,"chaaaaun":7,"-":143}},{"path":"src/main/java/scrolls/elder/model/person/Volunteer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":" * Represents a Volunteer in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"public class Volunteer extends Person {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"     * Creates a volunteer with the data from the relevant parameters","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    public Volunteer(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"                     Optional\u003cName\u003e pairedWithName, Optional\u003cInteger\u003e pairedWithId, int timeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"                     Optional\u003cInteger\u003e latestLogId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"        super(name, phone, email, address, tags, new Role(\"volunteer\"), pairedWithName, pairedWithId,","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"                timeServed, latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"     * Creates a volunteer with the data of {@code p} and corresponding ID.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    public Volunteer(int id, Person p) {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        super(id, p);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    public boolean isVolunteer() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"    public boolean isBefriendee() {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"        return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"    public Role getRole() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"        return this.role;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"        if (!(other instanceof Volunteer)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        // TODO figure out how to assert equals for date, without GitHub actions acting up, try using LocalDate","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"        Volunteer otherVolunteer \u003d (Volunteer) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"        return name.equals(otherVolunteer.name)","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 phone.equals(otherVolunteer.phone)","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 email.equals(otherVolunteer.email)","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 address.equals(otherVolunteer.address)","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"                \u0026\u0026 tags.equals(otherVolunteer.tags)","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 pairedWithName.equals(otherVolunteer.pairedWithName)","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"soons1"},"content":"                \u0026\u0026 pairedWithId.equals(otherVolunteer.pairedWithId)","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 timeServed \u003d\u003d otherVolunteer.timeServed","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"                \u0026\u0026 latestLogId.equals(otherVolunteer.latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"                .add(\"address\", address)","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"                .add(\"role\", role)","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"                .add(\"pairedWithName\", pairedWithName.orElse(Name.getNone()))","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"                .add(\"pairedWithId\", pairedWithId.orElse(-1))","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"soons1"},"content":"                .add(\"timeServed\", timeServed)","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"                .add(\"latestLogId\", latestLogId.orElse(-1))","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"                .toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"CJerrong":65,"soons1":3,"gerteck":9,"chaaaaun":9}},{"path":"src/main/java/scrolls/elder/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"chaaaaun":1,"-":10}},{"path":"src/main/java/scrolls/elder/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"chaaaaun":1,"-":5}},{"path":"src/main/java/scrolls/elder/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.AppUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chaaaaun":4,"-":59}},{"path":"src/main/java/scrolls/elder/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Befriendee;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Volunteer;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"    private static final Optional\u003cName\u003e pairedWithNone \u003d Optional.empty();","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"    private static final Optional\u003cInteger\u003e pairedWithNoID \u003d Optional.empty();","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"    private static final int sampleTimeServed \u003d 0;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    private static final Optional\u003cInteger\u003e latestLogNoId \u003d Optional.empty();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"            new Volunteer(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"                getTagSet(\"friends\"), pairedWithNone, pairedWithNoID, sampleTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"                    latestLogNoId),","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"            new Volunteer(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"                getTagSet(\"colleagues\", \"friends\"), pairedWithNone, pairedWithNoID, sampleTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"                    latestLogNoId),","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"            new Volunteer(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"                getTagSet(\"neighbours\"), pairedWithNone, pairedWithNoID, sampleTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"                    latestLogNoId),","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"            new Befriendee(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"                getTagSet(\"family\"), pairedWithNone, pairedWithNoID, sampleTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"                    latestLogNoId),","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"            new Befriendee(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"                getTagSet(\"classmates\"), pairedWithNone, pairedWithNoID, sampleTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"                    latestLogNoId),","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"            new Befriendee(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"                getTagSet(\"colleagues\"), pairedWithNone, pairedWithNoID, sampleTimeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"                    latestLogNoId)","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    public static ReadOnlyDatastore getSampleDatastore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        Datastore sampleDs \u003d new Datastore();","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        PersonStore sampleAb \u003d sampleDs.getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        return sampleDs;","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"CJerrong":26,"soons1":3,"gerteck":2,"chaaaaun":10,"-":36}},{"path":"src/main/java/scrolls/elder/storage/DatastoreStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyPersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":" * Represents a storage for {@link Datastore}.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"public interface DatastoreStorage {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    Path getDatastoreFilePath();","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"     * Returns AddressBook data as a {@link ReadOnlyPersonStore}.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    Optional\u003cReadOnlyDatastore\u003e readDatastore() throws DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     * @see #getDatastoreFilePath()","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    Optional\u003cReadOnlyDatastore\u003e readDatastore(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"     * Saves the given {@link ReadOnlyPersonStore} to the storage.","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"     * @param datastore cannot be null.","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    void saveDatastore(ReadOnlyDatastore datastore) throws IOException;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"     * @see #saveDatastore(ReadOnlyDatastore)","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    void saveDatastore(ReadOnlyDatastore datastore, Path filePath) throws IOException;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"chaaaaun":47}},{"path":"src/main/java/scrolls/elder/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    private final String id;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    private final String role;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    private final String pairedWithName;","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    private final String pairedWithId;","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"    private final String timeServed;","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    private final String latestLogId;","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"            @JsonProperty(\"id\") String id,","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"            @JsonProperty(\"role\") String role,","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"sdevih"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"            @JsonProperty(\"pairedWithName\") String pairedWithName,","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"            @JsonProperty(\"pairedWithId\") String pairedWithId,","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"            @JsonProperty(\"timeServed\") String timeServed,","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"            @JsonProperty(\"latestLogId\") String latestLogId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"        this.pairedWithName \u003d pairedWithName;","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        this.pairedWithId \u003d pairedWithId;","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"soons1"},"content":"        this.timeServed \u003d timeServed;","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"        this.latestLogId \u003d latestLogId;","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        id \u003d String.valueOf(source.getPersonId());","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"        role \u003d source.getRole().value;","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"        pairedWithName \u003d source.getPairedWithName().map(p -\u003e p.fullName).orElse(null);","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"        pairedWithId \u003d source.getPairedWithId().map(Object::toString).orElse(null);","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"soons1"},"content":"        timeServed \u003d String.valueOf(source.getTimeServed());","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"        latestLogId \u003d source.getLatestLogId().map(Object::toString).orElse(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, int.class.getSimpleName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"        final int modelId \u003d Integer.parseInt(id);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"        final Optional\u003cName\u003e modelPairedWithName;","lastModifiedDate":"2024-03-22"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"        modelPairedWithName \u003d Optional.ofNullable(pairedWithName).map(Name::new);","lastModifiedDate":"2024-03-22"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"        final Optional\u003cInteger\u003e modelPairedWithID;","lastModifiedDate":"2024-03-22"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"        modelPairedWithID \u003d Optional.ofNullable(pairedWithId).map(Integer::parseInt);","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"gerteck"},"content":"        Role modelRole;","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"gerteck"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"gerteck"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName()));","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"gerteck"},"content":"        } else if (!Role.isValidRole(role)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"gerteck"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"gerteck"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"gerteck"},"content":"            modelRole \u003d new Role(role);","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"soons1"},"content":"        final int modelTimeServed \u003d Integer.parseInt(timeServed);","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"        final Optional\u003cInteger\u003e modelLatestLogId;","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"CJerrong"},"content":"        modelLatestLogId \u003d Optional.ofNullable(latestLogId).map(Integer::parseInt);","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"        return PersonFactory.withIdFromParams(modelId, modelName, modelPhone, modelEmail, modelAddress, modelRole,","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"CJerrong"},"content":"                modelTags, modelPairedWithName, modelPairedWithID, modelTimeServed, modelLatestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"CJerrong":17,"soons1":5,"gerteck":22,"chaaaaun":21,"-":97,"sdevih":3}},{"path":"src/main/java/scrolls/elder/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chaaaaun":3,"-":45}},{"path":"src/main/java/scrolls/elder/storage/JsonDatastoreStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.FileUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.JsonUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"public class JsonDatastoreStorage implements DatastoreStorage {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDatastoreStorage.class);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    private final Path filePath;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    public JsonDatastoreStorage(Path filePath) {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    public Path getDatastoreFilePath() {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    public Optional\u003cReadOnlyDatastore\u003e readDatastore() throws DataLoadingException {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        return readDatastore(filePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"     * Similar to {@link DatastoreStorage#readDatastore()}.","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    public Optional\u003cReadOnlyDatastore\u003e readDatastore(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        Optional\u003cJsonSerializableDatastore\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"                filePath, JsonSerializableDatastore.class);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"    public void saveDatastore(ReadOnlyDatastore datastore) throws IOException {","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        saveDatastore(datastore, filePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"     * Similar to {@link DatastoreStorage#saveDatastore(ReadOnlyDatastore)}.","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"     * @param datastore","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath  location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"    public void saveDatastore(ReadOnlyDatastore datastore, Path filePath) throws IOException {","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        requireNonNull(datastore);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDatastore(datastore), filePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chaaaaun":26,"-":55}},{"path":"src/main/java/scrolls/elder/storage/JsonSerializableDatastore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":" * An Immutable Datastore that is serializable to JSON format.","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"@JsonRootName(value \u003d \"datastore\")","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"class JsonSerializableDatastore {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    public static final String MESSAGE_DUPLICATE_LOG \u003d \"Logs list contains duplicate log(s).\";","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    private final List\u003cLog\u003e logs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"     * Constructs a {@code JsonSerializableDatastore} with the given persons.","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    public JsonSerializableDatastore(","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"            @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"            @JsonProperty(\"logs\") List\u003cLog\u003e logs) {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        this.logs.addAll(logs);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"     * Converts a given {@code ReadOnlyDatastore} into this class for Jackson use.","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDatastore}.","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    public JsonSerializableDatastore(ReadOnlyDatastore source) {","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        persons.addAll(source.getPersonStore()","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"                .getPersonList()","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"                .stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"        logs.addAll(source.getLogStore().getUnfilteredAllLogsList());","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"     * Converts this datastore into the model\u0027s {@code Datastore} object.","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    public Datastore toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        Datastore ds \u003d new Datastore();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        PersonStore personStore \u003d ds.getMutablePersonStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        LogStore logStore \u003d ds.getMutableLogStore();","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"            if (personStore.hasPerson(person)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"            personStore.addPersonWithId(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        for (Log l : logs) {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"            if (logStore.hasLog(l)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_LOG);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"            logStore.addLogWithId(l);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"        return ds;","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"gerteck":2,"chaaaaun":82}},{"path":"src/main/java/scrolls/elder/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.JsonUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chaaaaun":5,"-":42}},{"path":"src/main/java/scrolls/elder/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"public interface Storage extends DatastoreStorage, UserPrefsStorage {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    Path getDatastoreFilePath();","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    Optional\u003cReadOnlyDatastore\u003e readDatastore() throws DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    void saveDatastore(ReadOnlyDatastore datastore) throws IOException;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chaaaaun":9,"-":23}},{"path":"src/main/java/scrolls/elder/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    private final DatastoreStorage datastoreStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"     * Creates a {@code StorageManager} with the given {@code DatatstoreStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    public StorageManager(DatastoreStorage datastoreStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        this.datastoreStorage \u003d datastoreStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    public Path getDatastoreFilePath() {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        return datastoreStorage.getDatastoreFilePath();","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    public Optional\u003cReadOnlyDatastore\u003e readDatastore() throws DataLoadingException {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        return readDatastore(datastoreStorage.getDatastoreFilePath());","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    public Optional\u003cReadOnlyDatastore\u003e readDatastore(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        return datastoreStorage.readDatastore(filePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"    public void saveDatastore(ReadOnlyDatastore datastore) throws IOException {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        saveDatastore(datastore, datastoreStorage.getDatastoreFilePath());","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"    public void saveDatastore(ReadOnlyDatastore datastore, Path filePath) throws IOException {","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        datastoreStorage.saveDatastore(datastore, filePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":21,"-":57}},{"path":"src/main/java/scrolls/elder/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chaaaaun":6,"-":30}},{"path":"src/main/java/scrolls/elder/ui/BefriendeeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"public class BefriendeeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"    private static final String FXML \u003d \"BefriendeeListCard.fxml\";","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    private static final String SMALL_LABEL \u003d \"list-cell-small-label\";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    public final Person befriendee;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    private String dateFormatPattern \u003d \"dd MMM yyyy\";","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    private DateFormat dateFormatter;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    private ReadOnlyDatastore datastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"    private Label pairedWith;","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"    private VBox latestLog;","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"    public BefriendeeCard(Person person, int displayedIndex, ReadOnlyDatastore datastore) {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"        this.befriendee \u003d person;","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"        dateFormatter \u003d new SimpleDateFormat(dateFormatPattern);","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"        this.datastore \u003d datastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"        pairedWith.setText(person.getPairedWithName().map(p -\u003e \"Paired with: \" + p.fullName).orElse(\"Not paired\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"        // If latest log is present, add new log summary card, else add no logs","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"        if (befriendee.isLatestLogPresent()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"            int latestLogId \u003d befriendee.getLatestLogId().get();","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"            Log latestLogInstance \u003d datastore.getLogStore().getLogById(latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"            String latestLogDateString \u003d dateFormatter.format(latestLogInstance.getStartDate());","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"            Label logTitle \u003d new Label(latestLogInstance.getLogTitle());","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"            Label logDate \u003d new Label(latestLogDateString);","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"            int partnerId \u003d latestLogInstance.getVolunteerId();","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"            String partnerName \u003d datastore.getPersonStore().getNameFromID(partnerId).fullName;","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"            Label logPartner \u003d new Label(\"Volunteer: \" + partnerName);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"            logTitle.getStyleClass().add(SMALL_LABEL);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"            logDate.getStyleClass().add(SMALL_LABEL);","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"            logPartner.getStyleClass().add(SMALL_LABEL);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"            latestLog.getChildren().addAll(logTitle, logDate, logPartner);","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"            Label noLog \u003d new Label(\"No logs currently in Elder Scrolls\");","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"            noLog.getStyleClass().add(SMALL_LABEL);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"            latestLog.getStyleClass().remove(\"latest-log-card\");","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"            latestLog.getStyleClass().add(\"latest-log-card-disabled\");","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"            latestLog.getChildren().add(noLog);","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"CJerrong":32,"soons1":5,"chaaaaun":10,"-":50}},{"path":"src/main/java/scrolls/elder/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Logic;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.CommandResult;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"chaaaaun":6,"-":80}},{"path":"src/main/java/scrolls/elder/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t09-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gerteck":1,"chaaaaun":2,"-":99}},{"path":"src/main/java/scrolls/elder/ui/LatestLogCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import java.util.Date;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":" * A UI component that displays information of a {@code LatestLog}.","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"public class LatestLogCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"    private static final String FXML \u003d \"LatestLogCard.fxml\";","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    private String dateFormatPattern \u003d \"dd MMM yyyy\";","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    private DateFormat dateFormatter;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    private Label title;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    private Label date;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    private Label partner;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    public LatestLogCard(String titleString, Date startDate, Name partnerName) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        super(FXML);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        dateFormatter \u003d new SimpleDateFormat(dateFormatPattern);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        title.setText(titleString);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"        date.setText(dateFormatter.format(startDate));","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        partner.setText(\"Pairee involved: \" + partnerName.fullName);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"CJerrong":48}},{"path":"src/main/java/scrolls/elder/ui/LogCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":" * A UI component that displays information of a {@code Log}.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"public class LogCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"    private static final String FXML \u003d \"LogCard.fxml\";","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    public final Log log;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    private String dateFormatPattern \u003d \"dd MMM yyyy\";","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"    private DateFormat dateFormatter;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    private Label id;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    private Label date;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    private Label title;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"    private Label volunteer;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"    private Label befriendee;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    private Label duration;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    private Label remarks;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"     * Creates a {@code LogCode} with the given {@code Log} and index to display.","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"    public LogCard(Log log, int displayedIndex, ReadOnlyDatastore datastore) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        super(FXML);","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        this.log \u003d log;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        dateFormatter \u003d new SimpleDateFormat(dateFormatPattern);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"        String volunteerName \u003d datastore.getPersonStore().getNameFromID(log.getVolunteerId()).fullName;","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        String befriendeeName \u003d datastore.getPersonStore().getNameFromID(log.getBefriendeeId()).fullName;","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"        title.setText(log.getLogTitle());","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"        befriendee.setText(\"Befriendee: \" + befriendeeName);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"        volunteer.setText(\"Volunteer: \" + volunteerName);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"        date.setText(dateFormatter.format(log.getStartDate()));","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"        duration.setText(\"Duration: \" + log.getDuration() + \" hrs\");","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"        remarks.setText(\"Remarks: \" + log.getRemarks());","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":68}},{"path":"src/main/java/scrolls/elder/ui/LogListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":" * Panel containing the list of logs.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"public class LogListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"    public static final Predicate\u003cLog\u003e PREDICATE_SHOW_ALL_LOGS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"    private static final String FXML \u003d \"LogListPanel.fxml\";","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogListPanel.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    private ReadOnlyDatastore datastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    private ListView\u003cLog\u003e logListView;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"    public LogListPanel(ReadOnlyDatastore datastore) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        super(FXML);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"        this.datastore \u003d datastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        ObservableList\u003cLog\u003e logList \u003d datastore.getLogStore().getFilteredLogList();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"        logListView.setItems(logList);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        logListView.setCellFactory(listView -\u003e new LogListPanel.LogListViewCell());","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Log} using a {@code LogCard}.","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"    class LogListViewCell extends ListCell\u003cLog\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"        protected void updateItem(Log log, boolean empty) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"            super.updateItem(log, empty);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"            if (empty || log \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"                setText(null);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"                setGraphic(new LogCard(log, getIndex() + 1, datastore).getRoot());","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":56}},{"path":"src/main/java/scrolls/elder/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Logic;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.CommandResult;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    private PersonListPanel befriendeeListPanel;","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    private PersonListPanel volunteerListPanel;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    private LogListPanel logListPanel;","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"    private StackPane befriendeeListPanelPlaceholder;","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"    private StackPane volunteerListPanelPlaceholder;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"    private StackPane logListPanelPlaceholder;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"        befriendeeListPanel \u003d new PersonListPanel(logic.getFilteredBefriendeeList(), logic.getDatastore());","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"        befriendeeListPanelPlaceholder.getChildren().add(befriendeeListPanel.getRoot());","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDatastoreFilePath());","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"CJerrong"},"content":"        volunteerListPanel \u003d new PersonListPanel(logic.getFilteredVolunteerList(), logic.getDatastore());","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"        volunteerListPanelPlaceholder.getChildren().add(volunteerListPanel.getRoot());","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"        logListPanel \u003d new LogListPanel(logic.getDatastore());","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"        logListPanelPlaceholder.getChildren().add(logListPanel.getRoot());","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"CJerrong"},"content":"    public PersonListPanel getBefriendeeListPanel() {","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"CJerrong"},"content":"        return befriendeeListPanel;","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"CJerrong"},"content":"    public PersonListPanel getVolunteerListPanel() {","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"CJerrong"},"content":"        return volunteerListPanel;","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"chaaaaun"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2024-03-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"chaaaaun"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser(), false);","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"chaaaaun"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage(), true);","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"CJerrong":22,"chaaaaun":11,"-":179}},{"path":"src/main/java/scrolls/elder/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Volunteer;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"    private ReadOnlyDatastore datastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, ReadOnlyDatastore datastore) {","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"        this.datastore \u003d datastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"                if (person.isVolunteer()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"                    // if statement checks if person is a volunteer, hence safe to cast to type Volunteer","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"                    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"                    Volunteer vol \u003d (Volunteer) person;","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"                    setGraphic(new VolunteerCard(vol, getIndex() + 1, datastore).getRoot());","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"                } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"                    setGraphic(new BefriendeeCard(person, getIndex() + 1, datastore).getRoot());","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"CJerrong":6,"soons1":7,"chaaaaun":3,"-":44}},{"path":"src/main/java/scrolls/elder/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    public void setFeedbackToUser(String feedbackToUser, boolean isErrorMsg) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        if (isErrorMsg) {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"            // Remove the error style class if it is present, so as to not duplicate the error style class","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"            resultDisplay.getStyleClass().remove(\"result-display-error\");","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"            resultDisplay.getStyleClass().add(\"result-display-error\");","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"            resultDisplay.getStyleClass().remove(\"result-display-error\");","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chaaaaun":10,"-":26}},{"path":"src/main/java/scrolls/elder/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":1,"-":27}},{"path":"src/main/java/scrolls/elder/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chaaaaun":1,"-":12}},{"path":"src/main/java/scrolls/elder/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.MainApp;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.LogsCenter;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.StringUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Logic;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chaaaaun":5,"-":83}},{"path":"src/main/java/scrolls/elder/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.MainApp;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chaaaaun":2,"-":86}},{"path":"src/main/java/scrolls/elder/ui/VolunteerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Volunteer;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"public class VolunteerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"    private static final String FXML \u003d \"VolunteerListCard.fxml\";","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    private static final String SMALL_LABEL \u003d \"list-cell-small-label\";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"    public final Volunteer vol;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    private String dateFormatPattern \u003d \"dd MMM yyyy\";","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    private DateFormat dateFormatter;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    private ReadOnlyDatastore datastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"    private Label pairedWith;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"    private Label timeServed;","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"    private VBox latestLog;","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"    public VolunteerCard(Volunteer vol, int displayedIndex, ReadOnlyDatastore datastore) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"        this.vol \u003d vol;","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"        dateFormatter \u003d new SimpleDateFormat(dateFormatPattern);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"        this.datastore \u003d datastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"soons1"},"content":"        name.setText(vol.getName().fullName);","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"soons1"},"content":"        phone.setText(vol.getPhone().value);","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"soons1"},"content":"        address.setText(vol.getAddress().value);","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"soons1"},"content":"        email.setText(vol.getEmail().value);","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"soons1"},"content":"        pairedWith.setText(vol.getPairedWithName().map(p -\u003e \"Paired with: \" + p.fullName).orElse(\"Not paired\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"soons1"},"content":"        timeServed.setText(\"Time Served: \" + vol.getTimeServed() + \" hours\");","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"soons1"},"content":"        vol.getTags().stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"        // If latest log is present, add new log summary card, else add no logs","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"        if (vol.isLatestLogPresent()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"            int latestLogId \u003d vol.getLatestLogId().get();","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"            Log latestLogInstance \u003d datastore.getLogStore().getLogById(latestLogId);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"            String latestLogDateString \u003d dateFormatter.format(latestLogInstance.getStartDate());","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"            Label logTitle \u003d new Label(latestLogInstance.getLogTitle());","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"            Label logDate \u003d new Label(latestLogDateString);","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"            int partnerId \u003d latestLogInstance.getBefriendeeId();","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"            String partnerName \u003d datastore.getPersonStore().getNameFromID(partnerId).fullName;","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"            Label logPartner \u003d new Label(\"Befriendee: \" + partnerName);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"            logTitle.getStyleClass().add(SMALL_LABEL);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"            logDate.getStyleClass().add(SMALL_LABEL);","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"            logPartner.getStyleClass().add(SMALL_LABEL);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"            latestLog.getChildren().addAll(logTitle, logDate, logPartner);","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"            Label noLog \u003d new Label(\"No logs currently in Elder Scrolls\");","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"            noLog.getStyleClass().add(SMALL_LABEL);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"            latestLog.getStyleClass().remove(\"latest-log-card\");","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"            latestLog.getStyleClass().add(\"latest-log-card-disabled\");","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"            latestLog.getChildren().add(noLog);","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"CJerrong":32,"soons1":17,"chaaaaun":9,"-":45}},{"path":"src/main/resources/view/BefriendeeListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"list-cell-big-label\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"list-cell-big-label\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"pairedWith\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$pairedWith\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"      \u003cVBox fx:id\u003d\"latestLog\" styleClass\u003d\"latest-log-card\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"          \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        \u003cLabel fx:id\u003d\"mostRecentLog\" styleClass\u003d\"list-cell-medium-label\" text\u003d\"Most recent log:\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CJerrong":10,"chaaaaun":8,"-":29}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"* {","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"    -fx-surface-color: #121318;","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"    -fx-surface-container-color: #1f1f25;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"    -fx-surface-text-color: #e3e1e9;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"    -fx-surface-color-bright: #38393f;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"    -fx-primary-color: #b7c4ff;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"    -fx-primary-text-color: #1f2d61;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"    -fx-primary-container-color: #364379;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    -fx-primary-container-text-color: #dde1ff;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    -fx-secondary-container-color: #005138;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    -fx-secondary-container-text-color: #a8f2ce;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    -fx-error-color: #ffdad6;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"    -fx-error-text-color: #ba1a1a;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":".scene {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    background-color: -fx-surface-color; /* Used in the default.html file */","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":".label {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"    -fx-base: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    -fx-control-inner-background: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":".list-heading {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"    /* Margins */","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"    -fx-padding: 8 4;","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"    -fx-border-insets: 8 4;","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-insets: 8 4;","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"    /* Margins */","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"    -fx-padding: 4 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"    -fx-border-insets: 4 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-insets: 4 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":".list-cell:filled {","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: transparent, -fx-surface-container-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":".list-cell:filled .label {","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":".list-cell:filled:selected {","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: transparent, -fx-primary-container-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-primary-container-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":".list-cell-big-label {","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":".list-cell-small-label {","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":".list-cell-medium-label {","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":".latest-log-card {","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-secondary-container-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"    -fx-padding: 10, 5, 5, 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":".latest-log-card .label {","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-secondary-container-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":".latest-log-card-disabled {","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color-bright;","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"CJerrong"},"content":"    -fx-padding: 10, 5, 5, 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":176,"author":{"gitId":"chaaaaun"},"content":"     -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":180,"author":{"gitId":"chaaaaun"},"content":"     -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color-bright;","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":192,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"chaaaaun"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"chaaaaun"},"content":".result-display-error {","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-error-color !important;","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-error-text-color !important;","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"chaaaaun"},"content":".result-display .content {","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color-bright;","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":206,"author":{"gitId":"chaaaaun"},"content":".result-display .scroll-pane {","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"chaaaaun"},"content":".result-display .scroll-pane .viewport{","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"chaaaaun"},"content":".result-display .scroll-pane .content{","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"chaaaaun"},"content":".result-display .scroll-bar .thumb {","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":224,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":239,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-container-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"chaaaaun"},"content":"  -fx-text-fill: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-03"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color-bright;","lastModifiedDate":"2024-04-03"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color-bright;","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"chaaaaun"},"content":"    -fx-border-color: -fx-surface-color-bright -fx-surface-color-bright white -fx-surface-color-bright;","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":370,"author":{"gitId":"chaaaaun"},"content":"    /* Only round the top corners */","lastModifiedDate":"2024-04-03"},{"lineNumber":371,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-radius: 4 4 0 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":372,"author":{"gitId":"chaaaaun"},"content":"    -fx-border-radius: 4 4 0 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":373,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"chaaaaun"},"content":"#commandTextField:hover {","lastModifiedDate":"2024-04-03"},{"lineNumber":380,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: derive(-fx-surface-color-bright, 10%);","lastModifiedDate":"2024-04-03"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"chaaaaun"},"content":"#commandTextField:focused {","lastModifiedDate":"2024-04-03"},{"lineNumber":384,"author":{"gitId":"chaaaaun"},"content":"    -fx-border-color: -fx-surface-color-bright -fx-surface-color-bright -fx-primary-color -fx-surface-color-bright;","lastModifiedDate":"2024-04-03"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-primary-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":394,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":395,"author":{"gitId":"chaaaaun"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-04-03"},{"lineNumber":396,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-primary-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":397,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"CJerrong":5,"chaaaaun":130,"-":266}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-error-color !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"    /* Empty cells should not be seen */","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"    -fx-background: transparent;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":3,"-":17}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"* {","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"    -fx-surface-color: #121318;","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"    -fx-surface-container-color: #1f1f25;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"    -fx-surface-text-color: #e3e1e9;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"    -fx-text-fill: -fx-surface-text-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-container-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: derive(-fx-surface-container-color, 20%);","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: derive(-fx-surface-container-color, 30%);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    -fx-background-color: -fx-surface-color;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chaaaaun":11,"-":14}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"chaaaaun":1,"-":42}},{"path":"src/main/resources/view/LatestLog.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"    \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"list-cell-big-label\" text\u003d\"\\$title\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"    \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$date\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"    \u003cLabel fx:id\u003d\"partner\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$partner\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"CJerrong":6,"chaaaaun":3}},{"path":"src/main/resources/view/LogCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"list-cell-big-label\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"                \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$title\" styleClass\u003d\"list-cell-big-label\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"list-cell-medium-label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"                \u003cLabel fx:id\u003d\"volunteer\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$volunteer\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"                \u003cLabel fx:id\u003d\"befriendee\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$befriendee\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"                \u003cLabel fx:id\u003d\"duration\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$duration\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"                \u003cLabel fx:id\u003d\"remarks\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$remarks\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":39,"chaaaaun":7}},{"path":"src/main/resources/view/LogListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"    \u003cListView fx:id\u003d\"logListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"         title\u003d\"Elder Scrolls\" minWidth\u003d\"1100\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"        \u003cHBox HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" minWidth\u003d\"1020\" prefWidth\u003d\"1200\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"          \u003cVBox fx:id\u003d\"befriendeeList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"          HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"            \u003cLabel text\u003d\"Befriendees\" styleClass\u003d\"list-heading\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"            \u003cStackPane fx:id\u003d\"befriendeeListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"          \u003cVBox fx:id\u003d\"volunteerList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"                HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"            \u003cLabel text\u003d\"Volunteers\" styleClass\u003d\"list-heading\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"            \u003cStackPane fx:id\u003d\"volunteerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"          \u003cVBox fx:id\u003d\"logList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"                HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"            \u003cLabel text\u003d\"Logs\" styleClass\u003d\"list-heading\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"            \u003cStackPane fx:id\u003d\"logListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"CJerrong":22,"chaaaaun":6,"-":55}},{"path":"src/main/resources/view/VolunteerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"list-cell-big-label\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"list-cell-big-label\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"pairedWith\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$pairedWith\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"      \u003cLabel fx:id\u003d\"timeServed\" styleClass\u003d\"list-cell-small-label\" text\u003d\"\\$timeServed\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"      \u003cVBox fx:id\u003d\"latestLog\" styleClass\u003d\"latest-log-card\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"          \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        \u003cLabel fx:id\u003d\"mostRecentLog\" styleClass\u003d\"list-cell-medium-label\" text\u003d\"Most recent log:\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CJerrong":10,"chaaaaun":9,"-":29}},{"path":"src/test/java/scrolls/elder/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"chaaaaun":1,"-":88}},{"path":"src/test/java/scrolls/elder/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"chaaaaun":1,"-":26}},{"path":"src/test/java/scrolls/elder/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"chaaaaun":1,"-":15}},{"path":"src/test/java/scrolls/elder/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":4,"-":132}},{"path":"src/test/java/scrolls/elder/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.core.index;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chaaaaun":5,"-":63}},{"path":"src/test/java/scrolls/elder/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, errorMessage, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"                -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"chaaaaun":7,"-":31}},{"path":"src/test/java/scrolls/elder/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"chaaaaun":7,"-":101}},{"path":"src/test/java/scrolls/elder/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.Config;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chaaaaun":8,"-":108}},{"path":"src/test/java/scrolls/elder/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":4,"-":20}},{"path":"src/test/java/scrolls/elder/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.SerializableTestClass;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TestUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":3,"-":42}},{"path":"src/test/java/scrolls/elder/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chaaaaun":9,"-":136}},{"path":"src/test/java/scrolls/elder/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.AddCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.CommandResult;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.CommandTestUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.ListCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.JsonDatastoreStorage;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.storage.StorageManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        JsonDatastoreStorage addressBookStorage \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"                new JsonDatastoreStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        String deleteCommand \u003d \"delete 9 r/volunteer\";","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"sdevih"},"content":"                DeleteCommand.MESSAGE_DELETE_PERSON_ERROR + Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"        assertCommandException(deleteCommand, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"        JsonDatastoreStorage addressBookStorage \u003d new JsonDatastoreStorage(prefPath) {","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"            public void saveDatastore(ReadOnlyDatastore datastore, Path filePath)","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.ROLE_DESC_VOLUNTEER;","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"        expectedModel.getMutableDatastore().getMutablePersonStore().addPerson(expectedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"gerteck":2,"chaaaaun":26,"-":138,"sdevih":8}},{"path":"src/test/java/scrolls/elder/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        expectedModel.getMutableDatastore().getMutablePersonStore().addPerson(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.formatPerson(validPerson)),","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        Person personInList \u003d model.getDatastore().getPersonStore().getPersonList().get(0);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"chaaaaun":14,"-":33,"sdevih":1}},{"path":"src/test/java/scrolls/elder/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    private Model model;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore expectedPersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    public void execute_addValidPerson_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, Messages.formatPerson(validPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.addPerson(new PersonBuilder().build());","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandSuccess(addCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        AddCommand addCommand \u003d new AddCommand(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + TypicalPersons.ALICE + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"chaaaaun":32,"-":51,"sdevih":1}},{"path":"src/test/java/scrolls/elder/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        Model model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        Model expectedModel \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        expectedModel.setDatastore(new Datastore());","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chaaaaun":10,"-":22}},{"path":"src/test/java/scrolls/elder/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"chaaaaun":1,"-":62}},{"path":"src/test/java/scrolls/elder/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.CliSyntax;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    public static final int VALID_ID_AMY \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    public static final int VALID_ID_BOB \u003d 1;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"    public static final String VALID_ROLE_VOLUNTEER \u003d \"volunteer\";","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"    public static final String VALID_ROLE_BEFRIENDEE \u003d \"befriendee\";","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"    public static final String ROLE_DESC_VOLUNTEER \u003d \" \" + CliSyntax.PREFIX_ROLE + VALID_ROLE_VOLUNTEER;","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"    public static final String ROLE_DESC_BEFRIENDEE \u003d \" \" + CliSyntax.PREFIX_ROLE + VALID_ROLE_BEFRIENDEE;","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + CliSyntax.PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + CliSyntax.PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \"","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"            + CliSyntax.PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + CliSyntax.PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + CliSyntax.PREFIX_ROLE + \"person\";","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"    // only values \u0027volunteer\u0027 and \u0027befriendee\u0027 are allowed in role","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY_VOLUNTEER;","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB_BEFRIENDEE;","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"        DESC_AMY_VOLUNTEER \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"                .withRole(VALID_ROLE_VOLUNTEER)","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        DESC_BOB_BEFRIENDEE \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"                .withRole(VALID_ROLE_BEFRIENDEE)","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"     * - the {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"        // TODO: can consider re-adding check for lists, but might get cumbersome","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"        Datastore expectedDatastore \u003d new Datastore(actualModel.getDatastore());","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"        //        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expectedDatastore, actualModel.getDatastore());","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"        //        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"    public static void showPersonAtIndex(PersonStore personStore, Index targetIndex) {","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c personStore.getFilteredPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"        Person person \u003d personStore.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"        personStore.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(1, personStore.getFilteredPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"gerteck"},"content":"     * Updates {@code model}\u0027s filtered list to show only the volunteer at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"gerteck"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"    public static void showVolunteerAtIndex(PersonStore personStore, Index targetIndex) {","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c personStore.getFilteredVolunteerList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"        Person person \u003d personStore.getFilteredVolunteerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"gerteck"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"        personStore.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(1, personStore.getFilteredVolunteerList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"gerteck"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"gerteck"},"content":"     * Updates {@code model}\u0027s filtered list to show only the befriendee at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"gerteck"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"gerteck"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"    public static void showBefriendeeAtIndex(PersonStore personStore, Index targetIndex) {","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c personStore.getFilteredBefriendeeList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"        Person person \u003d personStore.getFilteredBefriendeeList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"gerteck"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"        personStore.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(1, personStore.getFilteredBefriendeeList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"sdevih"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"sdevih"},"content":"     * Updates {@code model}\u0027s filtered list to show only the log at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"sdevih"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"sdevih"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"sdevih"},"content":"    public static void showLogAtIndex(LogStore logStore, Index targetIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"sdevih"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c logStore.getFilteredLogList().size());","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"sdevih"},"content":"        Log log \u003d logStore.getFilteredLogList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"sdevih"},"content":"        assertEquals(1, logStore.getFilteredLogList().size());","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"gerteck":36,"chaaaaun":52,"-":81,"sdevih":13}},{"path":"src/test/java/scrolls/elder/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.showVolunteerAtIndex;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"    private static final String ROLE_STRING_VOLUNTEER \u003d \"volunteer\";","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"    private static final String ROLE_STRING_BEFRIENDEE \u003d \"befriendee\";","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"    private static final Role ROLE_VOLUNTEER \u003d new Role(ROLE_STRING_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"    private static final Role ROLE_BEFRIENDEE \u003d new Role(ROLE_STRING_BEFRIENDEE);","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    private Model model;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore expectedPersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        Person personToDelete \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_SECOND_PERSON, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"sdevih"},"content":"            Messages.formatPerson(personToDelete));","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.removePerson(personToDelete);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(personStore.getFilteredVolunteerList().size() + 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"sdevih"},"content":"            DeleteCommand.MESSAGE_DELETE_PERSON_ERROR + Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"sdevih"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        showVolunteerAtIndex(personStore, TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"        Person personToDelete \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"sdevih"},"content":"            Messages.formatPerson(personToDelete));","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.removePerson(personToDelete);","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        showNoPerson(expectedPersonStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"        showPersonAtIndex(personStore, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatastore().getPersonStore().getPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"sdevih"},"content":"            DeleteCommand.MESSAGE_DELETE_PERSON_ERROR + Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"sdevih"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"sdevih"},"content":"    public void execute_personPaired_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"sdevih"},"content":"            DeleteCommand.MESSAGE_DELETE_PERSON_ERROR + Messages.MESSAGE_CONTACT_PAIRED_BEFORE_DELETE;","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":112,"author":{"gitId":"sdevih"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":115,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":116,"author":{"gitId":"sdevih"},"content":"    public void execute_personNotPaired_success() {","lastModifiedDate":"2024-03-22"},{"lineNumber":117,"author":{"gitId":"sdevih"},"content":"        Person personToDelete \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_SECOND_PERSON, ROLE_BEFRIENDEE);","lastModifiedDate":"2024-03-22"},{"lineNumber":120,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":121,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-22"},{"lineNumber":122,"author":{"gitId":"sdevih"},"content":"            Messages.formatPerson(personToDelete));","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        expectedModel.getMutableDatastore().getMutablePersonStore().removePerson(personToDelete);","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":127,"author":{"gitId":"sdevih"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-22"},{"lineNumber":128,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":129,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":133,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_SECOND_PERSON, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"sdevih"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex, ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"        String expected \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"            String.format(\"%s{targetIndex\u003d%s, role\u003d%s}\", DeleteCommand.class.getCanonicalName(), targetIndex,","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"sdevih"},"content":"                ROLE_STRING_VOLUNTEER);","lastModifiedDate":"2024-03-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"    private void showNoPerson(PersonStore ps) {","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"        ps.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"        assert ps.getFilteredPersonList().isEmpty();","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chaaaaun":50,"-":77,"sdevih":43}},{"path":"src/test/java/scrolls/elder/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"public class EditCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    private Model model;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore expectedPersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"    public void execute_allFieldsSpecifiedUnfilteredVolunteerList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"        Person editedPerson \u003d new PersonBuilder(TypicalPersons.BENSON).build();","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"sdevih"},"content":"                EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(expectedPersonStore.getFilteredVolunteerList().get(1), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"    public void execute_allFieldsSpecifiedUnfilteredBefriendeeList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"        Person editedPerson \u003d new PersonBuilder(TypicalPersons.ELLE).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"sdevih"},"content":"                EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(expectedPersonStore.getFilteredBefriendeeList().get(0), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"    public void execute_someFieldsSpecifiedUnfilteredVolunteerList_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"soons1"},"content":"        Index indexSecondPerson \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        Person secondPerson \u003d personStore.getFilteredVolunteerList().get(indexSecondPerson.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"soons1"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(secondPerson);","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"        Person editedPerson \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"            personInList.withName(CommandTestUtil.VALID_NAME_BOB).withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"soons1"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER).build();","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"            new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"soons1"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER).build();","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"soons1"},"content":"        EditCommand editCommand \u003d new EditCommand(indexSecondPerson, descriptor);","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"sdevih"},"content":"                EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"            expectedPersonStore.getFilteredVolunteerList().get(indexSecondPerson.getZeroBased()), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"    public void execute_noFieldSpecifiedUnfilteredVolunteerList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"soons1"},"content":"        EditCommand.EditPersonDescriptor epd \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"        epd.setRole(new Role(CommandTestUtil.VALID_ROLE_VOLUNTEER));","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, epd);","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"        Person editedPerson \u003d model.getDatastore().getPersonStore().getFilteredVolunteerList()","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"            .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"sdevih"},"content":"                EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"    public void execute_noRoleNoFieldsSpecifiedUnfilteredVolunteerList_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"        EditCommand.EditPersonDescriptor epd \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, epd);","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_ROLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"gerteck"},"content":"    public void execute_filteredVolunteerList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.showVolunteerAtIndex(personStore, TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"        Person personInFilteredVolunteerList \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"gerteck"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredVolunteerList)","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"gerteck"},"content":"            .withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"gerteck"},"content":"            .build();","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"soons1"},"content":"            new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2024-03-22"},{"lineNumber":129,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER).build());","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"sdevih"},"content":"                EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(expectedPersonStore.getFilteredVolunteerList().get(1), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"gerteck"},"content":"    public void execute_filteredBefriendeeList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.showBefriendeeAtIndex(personStore, TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"gerteck"},"content":"        Person personInFilteredBefriendeeList \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"gerteck"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredBefriendeeList)","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"gerteck"},"content":"            .withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"gerteck"},"content":"            .build();","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"gerteck"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"gerteck"},"content":"            new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"gerteck"},"content":"                .withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_BEFRIENDEE)","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"gerteck"},"content":"                .build());","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"sdevih"},"content":"                EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatPerson(editedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(expectedPersonStore.getFilteredBefriendeeList().get(1), editedPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"gerteck"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"gerteck"},"content":"    public void execute_invalidPersonIndexUnfilteredVolunteerList_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"        Index outOfBoundIndex \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"            Index.fromOneBased(model.getDatastore().getPersonStore().getFilteredVolunteerList().size() + 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"gerteck"},"content":"            new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"gerteck"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER)","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"gerteck"},"content":"                .build();","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"gerteck"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"gerteck"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"gerteck"},"content":"    public void execute_invalidPersonIndexUnfilteredBefriendeeList_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"        Index outOfBoundIndex \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"chaaaaun"},"content":"            Index.fromOneBased(model.getDatastore().getPersonStore().getFilteredBefriendeeList().size() + 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"gerteck"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"gerteck"},"content":"            new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"gerteck"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_BEFRIENDEE)","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"gerteck"},"content":"                .build();","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"chaaaaun"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":190,"author":{"gitId":"chaaaaun"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"chaaaaun"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"gerteck"},"content":"    public void execute_invalidPersonIndexFilteredVolunteerList_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.showVolunteerAtIndex(personStore, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"chaaaaun"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"chaaaaun"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatastore().getPersonStore().getPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"chaaaaun"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"soons1"},"content":"            new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2024-03-22"},{"lineNumber":203,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER).build());","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"gerteck"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"gerteck"},"content":"    public void execute_invalidPersonIndexFilteredBefriendeeList_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.showBefriendeeAtIndex(personStore, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"gerteck"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"gerteck"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatastore().getPersonStore().getPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"gerteck"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"gerteck"},"content":"            new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_BEFRIENDEE).build());","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"chaaaaun"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"chaaaaun"},"content":"        final EditCommand standardCommand \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"gerteck"},"content":"            new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, CommandTestUtil.DESC_AMY_VOLUNTEER);","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"chaaaaun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":229,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor copyDescriptor \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":230,"author":{"gitId":"gerteck"},"content":"            new EditCommand.EditPersonDescriptor(CommandTestUtil.DESC_AMY_VOLUNTEER);","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"chaaaaun"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":232,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-12"},{"lineNumber":233,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":234,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":235,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":239,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":240,"author":{"gitId":"chaaaaun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":241,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-12"},{"lineNumber":242,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":243,"author":{"gitId":"chaaaaun"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":244,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(","lastModifiedDate":"2024-03-12"},{"lineNumber":245,"author":{"gitId":"gerteck"},"content":"            standardCommand.equals(new EditCommand(TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-15"},{"lineNumber":246,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.DESC_AMY_VOLUNTEER)));","lastModifiedDate":"2024-03-15"},{"lineNumber":247,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":248,"author":{"gitId":"chaaaaun"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":249,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(","lastModifiedDate":"2024-03-12"},{"lineNumber":250,"author":{"gitId":"gerteck"},"content":"            standardCommand.equals(new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-15"},{"lineNumber":251,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.DESC_BOB_BEFRIENDEE)));","lastModifiedDate":"2024-03-15"},{"lineNumber":252,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":253,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":254,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":255,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":256,"author":{"gitId":"chaaaaun"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":257,"author":{"gitId":"chaaaaun"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-12"},{"lineNumber":258,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":259,"author":{"gitId":"chaaaaun"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":260,"author":{"gitId":"chaaaaun"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":261,"author":{"gitId":"chaaaaun"},"content":"            + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":262,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":263,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":264,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":265,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"soons1":11,"CJerrong":1,"gerteck":90,"chaaaaun":151,"sdevih":12}},{"path":"src/test/java/scrolls/elder/logic/commands/EditLogDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.EditLogDescriptorBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"public class EditLogDescriptorTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor descriptor1 \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder().withTitle(\"hello\").withBefriendeeIndex(TypicalIndexes.INDEX_FIRST_PERSON)","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"                        .withVolunteerIndex(TypicalIndexes.INDEX_FIRST_PERSON)","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"                        .withDuration(2).withRemarks(\"test\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor descriptorWithSameValues \u003d new EditLogDescriptorBuilder(descriptor1).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"        assertTrue(descriptor1.equals(descriptorWithSameValues));","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"        assertTrue(descriptor1.equals(descriptor1));","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"        assertFalse(descriptor1.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"        assertFalse(descriptor1.equals(5));","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor descriptor2 \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder().withTitle(\"bye\").withBefriendeeIndex(TypicalIndexes.INDEX_SECOND_PERSON)","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"                        .withVolunteerIndex(TypicalIndexes.INDEX_FIRST_PERSON).withDuration(2)","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"                        .withRemarks(\"test1\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"        assertFalse(descriptor1.equals(descriptor2));","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor descriptorWithDiffTitle \u003d new EditLogDescriptorBuilder(descriptor1)","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"                .withTitle(\"what\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"        assertFalse(descriptor1.equals(descriptorWithDiffTitle));","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor descriptorWithDiffRemark \u003d new EditLogDescriptorBuilder(descriptor1)","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"                .withRemarks(\"huh\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"        assertFalse(descriptor1.equals(descriptorWithDiffRemark));","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"        // different duration -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor descriptorWithDiffDuration \u003d new EditLogDescriptorBuilder(descriptor1)","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"                .withDuration(6).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"        assertFalse(descriptor1.equals(descriptorWithDiffDuration));","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor descriptorWithDiffBIndex \u003d new EditLogDescriptorBuilder(descriptor1)","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"                .withBefriendeeIndex(TypicalIndexes.INDEX_FOURTH_PERSON).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"soons1"},"content":"        assertFalse(descriptor1.equals(descriptorWithDiffBIndex));","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"soons1"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor descriptorWithDiffVIndex \u003d new EditLogDescriptorBuilder(descriptor1)","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"                .withVolunteerIndex(TypicalIndexes.INDEX_FOURTH_PERSON).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"        assertFalse(descriptor1.equals(descriptorWithDiffVIndex));","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d new LogEditCommand.EditLogDescriptor();","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"soons1"},"content":"        String expected \u003d LogEditCommand.EditLogDescriptor.class.getCanonicalName() + \"{title\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"soons1"},"content":"                + editLogDescriptor.getTitle().orElse(null) + \", volunteerIndex\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"soons1"},"content":"                + editLogDescriptor.getVolunteerIndex().orElse(null) + \", befriendeeIndex\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"soons1"},"content":"                + editLogDescriptor.getBefriendeeIndex().orElse(null) + \", duration\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"soons1"},"content":"                + editLogDescriptor.getDuration().orElse(null) + \", startDate\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"soons1"},"content":"                + editLogDescriptor.getStartDate().orElse(null) + \", remarks\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"soons1"},"content":"                + editLogDescriptor.getRemarks().orElse(null) + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"soons1"},"content":"        assertEquals(expected, editLogDescriptor.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"soons1":80}},{"path":"src/test/java/scrolls/elder/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.DESC_AMY_VOLUNTEER;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.DESC_BOB_BEFRIENDEE;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"        EditCommand.EditPersonDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"                new EditCommand.EditPersonDescriptor(DESC_AMY_VOLUNTEER);","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"        assertTrue(DESC_AMY_VOLUNTEER.equals(descriptorWithSameValues));","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"        assertTrue(DESC_AMY_VOLUNTEER.equals(DESC_AMY_VOLUNTEER));","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"        assertFalse(DESC_AMY_VOLUNTEER.equals(null));","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"        assertFalse(DESC_AMY_VOLUNTEER.equals(5));","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"        assertFalse(DESC_AMY_VOLUNTEER.equals(DESC_BOB_BEFRIENDEE));","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor editedAmy \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"                new EditPersonDescriptorBuilder(DESC_AMY_VOLUNTEER).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"        assertFalse(DESC_AMY_VOLUNTEER.equals(editedAmy));","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY_VOLUNTEER).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"        assertFalse(DESC_AMY_VOLUNTEER.equals(editedAmy));","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY_VOLUNTEER).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"        assertFalse(DESC_AMY_VOLUNTEER.equals(editedAmy));","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY_VOLUNTEER).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"        assertFalse(DESC_AMY_VOLUNTEER.equals(editedAmy));","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY_VOLUNTEER).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"        assertFalse(DESC_AMY_VOLUNTEER.equals(editedAmy));","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        String expected \u003d EditCommand.EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", role\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"                + editPersonDescriptor.getRole().orElse(null) + \"}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"CJerrong":1,"gerteck":20,"chaaaaun":10,"-":42}},{"path":"src/test/java/scrolls/elder/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"public class ExitCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"chaaaaun":17}},{"path":"src/test/java/scrolls/elder/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyPersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.TagListContainsTagsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    private final Model model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    private final ReadOnlyPersonStore personStore \u003d model.getDatastore().getPersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    private final Model expectedModel \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    private final ReadOnlyPersonStore expectedPersonStore \u003d expectedModel.getDatastore().getPersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    private final NameContainsKeywordsPredicate emptyNamePredicate \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"            new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"    private final TagListContainsTagsPredicate emptyTagPredicate \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"            new TagListContainsTagsPredicate(Collections.emptySet());","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"        NameContainsKeywordsPredicate namePredicate1 \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"        NameContainsKeywordsPredicate namePredicate2 \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicate1 \u003d prepareTagPredicate(\"friends\");","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicate2 \u003d prepareTagPredicate(\"owesMoney\");","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"        FindCommand findFirstCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"                new FindCommand(namePredicate1, tagPredicate1, true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"        FindCommand findSecondCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"                new FindCommand(namePredicate2, tagPredicate1, true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"        // same values and same search -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(namePredicate1, tagPredicate1,","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"                true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"        // same values but different search -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"        FindCommand findFirstCommandCopy2 \u003d new FindCommand(namePredicate1, tagPredicate1,","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"                false, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandCopy2));","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        // same values but different search -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"        FindCommand findFirstCommandCopy3 \u003d new FindCommand(namePredicate1, tagPredicate1,","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"                true, false, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandCopy3));","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"        // same values, same search, different tag -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"        FindCommand findFirstCommandCopy4 \u003d new FindCommand(namePredicate1, tagPredicate2,","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"                true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandCopy4));","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"    // If no name predicates and no tag predicates, then all persons should be found.","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"    // This is opposed to original AB3 implementation, where no one would be found.","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"    public void execute_nameKeywordsTagKeywords_peopleFound() {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"        // Find within both volunteer and befriendee","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"        FindCommand commandAll \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"                new FindCommand(emptyNamePredicate, emptyTagPredicate, true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredPersonList(emptyNamePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(commandAll, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"        assertEquals(TypicalPersons.getTypicalPersons(), personStore.getFilteredPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"        // Find within volunteer only","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"        FindCommand commandSearchVolunteer \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"                new FindCommand(emptyNamePredicate, emptyTagPredicate, true, false, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"gerteck"},"content":"        expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"gerteck"},"content":"                Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 4, CommandTestUtil.VALID_ROLE_VOLUNTEER);","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredVolunteerList(emptyNamePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(commandSearchVolunteer, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"        assertEquals(TypicalPersons.getTypicalVolunteerPersons(), personStore.getFilteredVolunteerList());","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"        // Find within befriendee only","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"        FindCommand commandSearchBefriendee \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"                new FindCommand(emptyNamePredicate, emptyTagPredicate, false, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"        expectedMessage \u003d String.format(","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"                Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 3, CommandTestUtil.VALID_ROLE_BEFRIENDEE);","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredBefriendeeList(emptyNamePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(commandSearchBefriendee, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"gerteck"},"content":"        assertEquals(TypicalPersons.getTypicalBefriendeePersons(), personStore.getFilteredBefriendeeList());","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"gerteck"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"gerteck"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, emptyTagPredicate, true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(Arrays.asList(TypicalPersons.CARL, TypicalPersons.ELLE, TypicalPersons.FIONA),","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"                personStore.getFilteredPersonList());","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"gerteck"},"content":"        // Find within volunteer only","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"gerteck"},"content":"        String expectedMessageV \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 1, \"volunteer\");","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"gerteck"},"content":"        command \u003d new FindCommand(namePredicate, emptyTagPredicate, true, false, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredVolunteerList(namePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessageV, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"gerteck"},"content":"        assertEquals(Collections.singletonList(TypicalPersons.CARL), personStore.getFilteredVolunteerList());","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"gerteck"},"content":"        // Find within befriendee only","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"gerteck"},"content":"        String expectedMessageB \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 2, \"befriendee\");","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"gerteck"},"content":"        command \u003d new FindCommand(namePredicate, emptyTagPredicate, false, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredBefriendeeList(namePredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessageB, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"gerteck"},"content":"        assertEquals(Arrays.asList(TypicalPersons.ELLE, TypicalPersons.FIONA), personStore.getFilteredBefriendeeList());","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"gerteck"},"content":"    public void execute_singleTag_multiplePersons() {","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"gerteck"},"content":"        // All Persons","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"gerteck"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicate \u003d prepareTagPredicate(\"friends\");","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"gerteck"},"content":"        FindCommand command \u003d new FindCommand(emptyNamePredicate, tagPredicate, true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredPersonList(tagPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"gerteck"},"content":"        assertEquals(Arrays.asList(TypicalPersons.ALICE, TypicalPersons.BENSON, TypicalPersons.DANIEL),","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"gerteck"},"content":"                personStore.getFilteredPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"gerteck"},"content":"        // Voluteers","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"gerteck"},"content":"        String expectedVMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 3, \"volunteer\");","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"gerteck"},"content":"        FindCommand commandV \u003d new FindCommand(emptyNamePredicate, tagPredicate, true, false, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredVolunteerList(tagPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(commandV, model, expectedVMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"gerteck"},"content":"        assertEquals(Arrays.asList(TypicalPersons.ALICE, TypicalPersons.BENSON, TypicalPersons.DANIEL),","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"gerteck"},"content":"                personStore.getFilteredVolunteerList());","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"gerteck"},"content":"        // Befriendees","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"gerteck"},"content":"        String expectedMessageB \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 1, \"befriendee\");","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicateB \u003d prepareTagPredicate(\"exConvict\");","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"gerteck"},"content":"        FindCommand commandB \u003d new FindCommand(emptyNamePredicate, tagPredicateB,","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"gerteck"},"content":"                false, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredBefriendeeList(tagPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(commandB, model, expectedMessageB, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"gerteck"},"content":"        assertEquals(Collections.singletonList(TypicalPersons.GEORGE), personStore.getFilteredBefriendeeList());","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"gerteck"},"content":"    public void execute_singleTag_multiplePersonsFoundBefriendee() {","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"gerteck"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 1, \"befriendee\");","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicate \u003d prepareTagPredicate(\"exConvict\");","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"gerteck"},"content":"        FindCommand command \u003d new FindCommand(emptyNamePredicate, tagPredicate, false, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredBefriendeeList(tagPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"gerteck"},"content":"        assertEquals(Arrays.asList(TypicalPersons.GEORGE), personStore.getFilteredBefriendeeList());","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"gerteck"},"content":"    public void execute_multipleTag_mutiplePersonsFound() {","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"gerteck"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicate \u003d prepareTagPredicate(\"friends exConvict\");","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"gerteck"},"content":"        FindCommand command \u003d new FindCommand(emptyNamePredicate, tagPredicate, true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredPersonList(tagPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"gerteck"},"content":"        assertEquals(Arrays.asList(","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"gerteck"},"content":"                TypicalPersons.ALICE, TypicalPersons.BENSON, TypicalPersons.DANIEL, TypicalPersons.GEORGE),","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"gerteck"},"content":"                personStore.getFilteredPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":208,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"gerteck"},"content":"    public void execute_pairedUnpairedFlag_multiplePersonsFound() {","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"gerteck"},"content":"        String expectedMessagePaired \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"gerteck"},"content":"        FindCommand command \u003d new FindCommand(emptyNamePredicate, emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"gerteck"},"content":"                true, true, true, false);","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredPersonList(Person::isPaired);","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessagePaired, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"gerteck"},"content":"        assertEquals(TypicalPersons.getPairedPersons(), personStore.getFilteredPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"gerteck"},"content":"        String expectedMessageUnpaired \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"gerteck"},"content":"        command \u003d new FindCommand(emptyNamePredicate, emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"gerteck"},"content":"                true, true, false, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredPersonList(Person -\u003e !Person.isPaired());","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessageUnpaired, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"gerteck"},"content":"        assertEquals(TypicalPersons.getUnpairedPersons(), personStore.getFilteredPersonList());","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"gerteck"},"content":"    public void execute_pairedUnpairedFlagVolunteerBefriendee_multiplePersonsFound() {","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"gerteck"},"content":"        // Volunteer","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"gerteck"},"content":"        String expectedMessagePairedV \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 1, \"volunteer\");","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"gerteck"},"content":"        FindCommand command \u003d new FindCommand(emptyNamePredicate, emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"gerteck"},"content":"                true, false, true, false);","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredVolunteerList(Person::isPaired);","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessagePairedV, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"gerteck"},"content":"        assertEquals(Collections.singletonList(TypicalPersons.ALICE), personStore.getFilteredVolunteerList());","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"gerteck"},"content":"        String expectedMessageUnpairedV \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 3, \"volunteer\");","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"gerteck"},"content":"        command \u003d new FindCommand(emptyNamePredicate, emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"gerteck"},"content":"                true, false, false, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredPersonList(Person -\u003e !Person.isPaired());","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessageUnpairedV, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"gerteck"},"content":"        assertEquals(Arrays.asList(TypicalPersons.BENSON, TypicalPersons.CARL, TypicalPersons.DANIEL),","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"gerteck"},"content":"                personStore.getFilteredVolunteerList());","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"gerteck"},"content":"        // Befriendee","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"gerteck"},"content":"        String expectedMessagePairedB \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 1, \"befriendee\");","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"gerteck"},"content":"        command \u003d new FindCommand(emptyNamePredicate, emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"gerteck"},"content":"                false, true, true, false);","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredBefriendeeList(Person::isPaired);","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessagePairedB, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"gerteck"},"content":"        assertEquals(Collections.singletonList(TypicalPersons.ELLE), personStore.getFilteredBefriendeeList());","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"gerteck"},"content":"        String expectedMessageUnpairedB \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW_WITH_ROLE, 2, \"befriendee\");","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"gerteck"},"content":"        command \u003d new FindCommand(emptyNamePredicate, emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"gerteck"},"content":"                false, true, false, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"gerteck"},"content":"        expectedPersonStore.updateFilteredBefriendeeList(Person -\u003e !Person.isPaired());","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(command, model, expectedMessageUnpairedB, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"gerteck"},"content":"        assertEquals(Arrays.asList(TypicalPersons.FIONA, TypicalPersons.GEORGE),","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"gerteck"},"content":"                personStore.getFilteredBefriendeeList());","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"gerteck"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicate \u003d prepareTagPredicate(\" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"gerteck"},"content":"        FindCommand findCommand \u003d new FindCommand(namePredicate, tagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"gerteck"},"content":"                true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"gerteck"},"content":"        String expected \u003d FindCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-27"},{"lineNumber":274,"author":{"gitId":"gerteck"},"content":"                + \"{\"","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"gerteck"},"content":"                + \"namePredicate\u003d\" + namePredicate + \", \"","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"gerteck"},"content":"                + \"tagPredicate\u003d\" + tagPredicate + \", \"","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"gerteck"},"content":"                + \"isSearchingVolunteer\u003dtrue, \"","lastModifiedDate":"2024-03-28"},{"lineNumber":278,"author":{"gitId":"gerteck"},"content":"                + \"isSearchingBefriendee\u003dtrue, \"","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"gerteck"},"content":"                + \"isSearchingPaired\u003dtrue, \"","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"gerteck"},"content":"                + \"isSearchingUnpaired\u003dtrue\"","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"gerteck"},"content":"                + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":288,"author":{"gitId":"gerteck"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":291,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"gerteck"},"content":"    private TagListContainsTagsPredicate prepareTagPredicate(String userInput) {","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"gerteck"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"gerteck"},"content":"        String[] tagsArray \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"gerteck"},"content":"        for (String tag : tagsArray) {","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"gerteck"},"content":"            tagList.add(new Tag(tag));","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"gerteck"},"content":"        return new TagListContainsTagsPredicate(tagList);","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"gerteck":230,"chaaaaun":17,"-":56}},{"path":"src/test/java/scrolls/elder/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"public class HelpCommandTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    public void execute_help_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"        CommandTestUtil.assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"chaaaaun":17}},{"path":"src/test/java/scrolls/elder/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        showPersonAtIndex(model.getMutableDatastore().getMutablePersonStore(), TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chaaaaun":12,"-":28}},{"path":"src/test/java/scrolls/elder/logic/commands/LogAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import java.util.Calendar;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"class LogAddCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"    private Model model;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"    private PersonStore expectedPersonStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"        personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"        expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"    void execute_validLogAddCommand_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"        Person befriendee \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"        Person volunteer \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"        LogAddCommand logAddCommand \u003d new LogAddCommand(\"test1\", TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"                new GregorianCalendar(2023, Calendar.JANUARY, 1).getTime(),","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"                \"was a good session\");","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"        String expectedMessage \u003d LogAddCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"        Person afterLoggingBefriendee \u003d new PersonBuilder(befriendee)","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"                .withTimeServed(3).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"        Person afterLoggingVolunteer \u003d new PersonBuilder(volunteer)","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"                .withTimeServed(3).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"soons1"},"content":"        PersonStore personStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"soons1"},"content":"        LogStore logStore \u003d expectedModel.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"        Log toAdd \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"                new Log(model.getDatastore(), \"test1\", volunteer.getPersonId(), befriendee.getPersonId(),","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"                        1, new GregorianCalendar(2023, Calendar.JANUARY, 1).getTime(),","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"                        \"was a good session\");","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"soons1"},"content":"        logStore.addLog(toAdd);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"        personStore.setPerson(befriendee, afterLoggingBefriendee);","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"soons1"},"content":"        personStore.setPerson(volunteer, afterLoggingVolunteer);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"soons1"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(logAddCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"    void execute_validLogAddCommandNewLatestLog_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"        Person befriendee \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"        Person volunteer \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"        LogAddCommand logAddCommand \u003d new LogAddCommand(\"test1\", TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"                1,","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"                new GregorianCalendar(2024, Calendar.APRIL, 1).getTime(),","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"                \"was a good session\");","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"        String expectedMessage \u003d LogAddCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"        PersonStore personStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"        LogStore logStore \u003d expectedModel.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"        Log toAdd \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"                new Log(model.getDatastore(), \"test1\", volunteer.getPersonId(), befriendee.getPersonId(),","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"                        1, new GregorianCalendar(2024, Calendar.APRIL, 1).getTime(),","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"                        \"was a good session\");","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"        Integer latestLogId \u003d logStore.addLog(toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"        Person afterLoggingBefriendee \u003d new PersonBuilder(befriendee)","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"                .withTimeServed(3)","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"                .withLatestLogId(Optional.of(latestLogId)).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"        Person afterLoggingVolunteer \u003d new PersonBuilder(volunteer)","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"                .withTimeServed(3).withLatestLogId(Optional.of(latestLogId)).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"soons1"},"content":"        personStore.setPerson(befriendee, afterLoggingBefriendee);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"soons1"},"content":"        personStore.setPerson(volunteer, afterLoggingVolunteer);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"soons1"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"soons1"},"content":"        assertCommandSuccess(logAddCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"soons1"},"content":"    void execute_negativeDuration_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"soons1"},"content":"        LogAddCommand logAddCommand \u003d new LogAddCommand(\"test2\", TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"soons1"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"soons1"},"content":"                -1,","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"soons1"},"content":"                new Date(2023, 1, 1),","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"soons1"},"content":"                \"was a good session\");","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"soons1"},"content":"        Assert.assertThrows(","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"soons1"},"content":"                CommandException.class, LogAddCommand.MESSAGE_NEGATIVE_DURATION, () -\u003e logAddCommand.execute(model));","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"soons1"},"content":"    void execute_personsNotPaired_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"soons1"},"content":"        LogAddCommand logAddCommand \u003d new LogAddCommand(\"test3\", TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"soons1"},"content":"                TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"soons1"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"soons1"},"content":"                new Date(2023, 1, 1),","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"soons1"},"content":"                \"was a good session\");","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"soons1"},"content":"        Assert.assertThrows(","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"soons1"},"content":"                CommandException.class, LogAddCommand.MESSAGE_PERSONS_NOT_PAIRED, () -\u003e logAddCommand.execute(model));","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"soons1"},"content":"    void testEquals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"soons1"},"content":"        LogAddCommand logAddCommand1 \u003d new LogAddCommand(\"test4-1\", TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"soons1"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"soons1"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"soons1"},"content":"                new Date(2023, 1, 1),","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"soons1"},"content":"                \"was a good session\");","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"soons1"},"content":"        LogAddCommand logAddCommand2 \u003d new LogAddCommand(\"test4-2\", TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"soons1"},"content":"                TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"soons1"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"soons1"},"content":"                new Date(2023, 1, 1),","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"soons1"},"content":"                \"was a good session\");","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"soons1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"soons1"},"content":"        assertEquals(logAddCommand1, logAddCommand1);","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"soons1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"soons1"},"content":"        LogAddCommand logAddCommand1Copy \u003d new LogAddCommand(\"test4-1\", TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"soons1"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"soons1"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"soons1"},"content":"                new Date(2023, 1, 1),","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"soons1"},"content":"                \"was a good session\");","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"soons1"},"content":"        assertEquals(logAddCommand1, logAddCommand1Copy);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"soons1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"soons1"},"content":"        assertNotEquals(1, logAddCommand1);","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"soons1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"soons1"},"content":"        assertNotEquals(null, logAddCommand1);","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"soons1"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"soons1"},"content":"        assertNotEquals(logAddCommand1, logAddCommand2);","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"soons1"},"content":"    void toStringMethod() {","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"soons1"},"content":"        LogAddCommand logAddCommand \u003d new LogAddCommand(\"test5\", TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"soons1"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"soons1"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"soons1"},"content":"                new Date(2023, 1, 1),","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"soons1"},"content":"                \"was a good session\");","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"soons1"},"content":"        String expected \u003d LogAddCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"soons1"},"content":"                + \"{title\u003d\" + \"test5\"","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"gerteck"},"content":"                + \", volunteerIndex\u003d\" + TypicalIndexes.INDEX_FIRST_PERSON","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"gerteck"},"content":"                + \", befriendeeIndex\u003d\" + TypicalIndexes.INDEX_FIRST_PERSON","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"soons1"},"content":"                + \", duration\u003d\" + Integer.toString(1)","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"soons1"},"content":"                + \", startDate\u003d\" + new Date(2023, 1, 1)","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"soons1"},"content":"                + \", remarks\u003d\" + \"was a good session\" + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"soons1"},"content":"        assertEquals(expected, logAddCommand.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"soons1":141,"CJerrong":41,"gerteck":2}},{"path":"src/test/java/scrolls/elder/logic/commands/LogDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.TypicalLogs;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":" * {@code LogDeleteCommand}.","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"class LogDeleteCommandTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"    private Model model;","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"    private LogStore logStore;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"    private LogStore expectedLogStore;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"    private PersonStore expectedPersonStore;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"sdevih"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"sdevih"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"sdevih"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"sdevih"},"content":"        logStore \u003d model.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"sdevih"},"content":"        personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"        expectedModel \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"sdevih"},"content":"        expectedLogStore \u003d expectedModel.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"sdevih"},"content":"        expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"sdevih"},"content":"        logStore.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"sdevih"},"content":"        expectedLogStore.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"sdevih"},"content":"        logStore.addLog(TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"sdevih"},"content":"        expectedLogStore.addLog(TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"sdevih"},"content":"        logStore.addLog(TypicalLogs.LOG_BENSON_TO_FIONA_2);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"sdevih"},"content":"        expectedLogStore.addLog(TypicalLogs.LOG_BENSON_TO_FIONA_2);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"    void execute_invalidIndexList_throwsCommandException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"sdevih"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(logStore.getFilteredLogList().size() + 1);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand logDeleteCommand \u003d new LogDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"sdevih"},"content":"                LogDeleteCommand.MESSAGE_DELETE_LOG_ERROR + Messages.MESSAGE_INVALID_LOG_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"sdevih"},"content":"        assertCommandFailure(logDeleteCommand, model, expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"sdevih"},"content":"    void execute_validIndexList_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"sdevih"},"content":"        Person befriendee \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"sdevih"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"sdevih"},"content":"        Person volunteer \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"sdevih"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"sdevih"},"content":"        Log logToDelete \u003d logStore.getFilteredLogList().get(TypicalIndexes.INDEX_FIRST_LOG.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand logDeleteCommand \u003d new LogDeleteCommand(TypicalIndexes.INDEX_FIRST_LOG);","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(LogDeleteCommand.MESSAGE_DELETE_LOG_SUCCESS,","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"sdevih"},"content":"                Messages.formatLog(logToDelete));","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"sdevih"},"content":"        Person afterDeletingBefriendee \u003d new PersonBuilder(befriendee)","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"sdevih"},"content":"                .withTimeServed(0).withLatestLogId(Optional.empty()).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"sdevih"},"content":"        Person afterDeletingVolunteer \u003d new PersonBuilder(volunteer)","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"sdevih"},"content":"                .withTimeServed(0).withLatestLogId(Optional.empty()).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"sdevih"},"content":"        expectedLogStore.removeLog(logToDelete.getLogId());","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"sdevih"},"content":"        expectedPersonStore.setPerson(befriendee, afterDeletingBefriendee);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"sdevih"},"content":"        expectedPersonStore.setPerson(volunteer, afterDeletingVolunteer);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"sdevih"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"sdevih"},"content":"        assertCommandSuccess(logDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"sdevih"},"content":"    void equals() {","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand deleteFirstCommand \u003d new LogDeleteCommand(TypicalIndexes.INDEX_FIRST_LOG);","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand deleteSecondCommand \u003d new LogDeleteCommand(TypicalIndexes.INDEX_SECOND_LOG);","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"sdevih"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"sdevih"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"sdevih"},"content":"        //same values -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand deleteFirstCommandCopy \u003d new LogDeleteCommand(TypicalIndexes.INDEX_FIRST_LOG);","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"sdevih"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"sdevih"},"content":"        //different types -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"sdevih"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"sdevih"},"content":"        //null -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"sdevih"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"sdevih"},"content":"        //different log -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"sdevih"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"sdevih"},"content":"    void testToString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"sdevih"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand logDeleteCommand \u003d new LogDeleteCommand(targetIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"sdevih"},"content":"        String expected \u003d String.format(\"%s{targetIndex\u003d%s}\", LogDeleteCommand.class.getCanonicalName(), targetIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"sdevih"},"content":"        assertEquals(expected, logDeleteCommand.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"sdevih":124}},{"path":"src/test/java/scrolls/elder/logic/commands/LogEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.commands.LogEditCommand.MESSAGE_EDIT_LOG_SUCCESS;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.EditLogDescriptorBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalLogs;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"sdevih"},"content":" * Contains integration tests (interaction with the Model) and unit tests for LogEditCommand.","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"sdevih"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"sdevih"},"content":"class LogEditCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"sdevih"},"content":"    private Model model;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"sdevih"},"content":"    private LogStore logStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"sdevih"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"    private LogStore expectedLogStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"sdevih"},"content":"        logStore \u003d model.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"sdevih"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"sdevih"},"content":"        expectedLogStore \u003d expectedModel.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"        logStore.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"        expectedLogStore.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"    void execute_validWithNoChange_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_ALICE_TO_ELLE).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand \u003d new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"        Log editedLog \u003d new Log(0, TypicalLogs.LOG_ALICE_TO_ELLE.getLogTitle(),","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"                TypicalLogs.LOG_ALICE_TO_ELLE.getVolunteerId(), TypicalLogs.LOG_ALICE_TO_ELLE.getBefriendeeId(),","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"                TypicalLogs.LOG_ALICE_TO_ELLE.getDuration(), TypicalLogs.LOG_ALICE_TO_ELLE.getStartDate(),","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"                TypicalLogs.LOG_ALICE_TO_ELLE.getRemarks());","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"        expectedLogStore.setLog(editedLog);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"soons1"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"soons1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_LOG_SUCCESS, Messages.formatLog(editedLog));","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"soons1"},"content":"        assertCommandSuccess(logEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"soons1"},"content":"    void execute_validLogEditCommand_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_ALICE_TO_ELLE).withDuration(5).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand \u003d new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"soons1"},"content":"        Log editedLog \u003d new Log(0, TypicalLogs.LOG_ALICE_TO_ELLE.getLogTitle(),","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"soons1"},"content":"                TypicalLogs.LOG_ALICE_TO_ELLE.getVolunteerId(), TypicalLogs.LOG_ALICE_TO_ELLE.getBefriendeeId(),","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"soons1"},"content":"                5, TypicalLogs.LOG_ALICE_TO_ELLE.getStartDate(),","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"soons1"},"content":"                TypicalLogs.LOG_ALICE_TO_ELLE.getRemarks());","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"soons1"},"content":"        PersonStore expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"soons1"},"content":"        Person befriendee \u003d expectedPersonStore.getPersonFromID(editedLog.getBefriendeeId());","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"soons1"},"content":"        Person volunteer \u003d expectedPersonStore.getPersonFromID(editedLog.getVolunteerId());","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"soons1"},"content":"        Person updatedBefriendee \u003d new PersonBuilder(befriendee).withTimeServed(5).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"soons1"},"content":"        Person updatedVolunteer \u003d new PersonBuilder(volunteer).withTimeServed(5).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"soons1"},"content":"        expectedPersonStore.setPerson(befriendee, updatedBefriendee);","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"soons1"},"content":"        expectedPersonStore.setPerson(volunteer, updatedVolunteer);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"soons1"},"content":"        expectedLogStore.setLog(editedLog);","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"soons1"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"soons1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_LOG_SUCCESS, Messages.formatLog(editedLog));","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"soons1"},"content":"        assertCommandSuccess(logEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"soons1"},"content":"    void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_ALICE_TO_ELLE).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand \u003d new LogEditCommand(TypicalIndexes.INDEX_FIFTH_PERSON, editLogDescriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"soons1"},"content":"        Assert.assertThrows(","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"soons1"},"content":"                CommandException.class,","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"soons1"},"content":"                Messages.MESSAGE_INVALID_LOG_DISPLAYED_INDEX, () -\u003e logEditCommand.execute(model));","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"soons1"},"content":"    void execute_invalidPersonId_throwsCommandException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_ALICE_TO_ELLE)","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"soons1"},"content":"                        .withBefriendeeIndex(Index.fromZeroBased(7)).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand \u003d new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"soons1"},"content":"        Assert.assertThrows(","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"soons1"},"content":"                CommandException.class, Log.MESSAGE_INVALID_ID, () -\u003e logEditCommand.execute(model));","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"soons1"},"content":"    void execute_negativeDuration_throwsCommandException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_ALICE_TO_ELLE).withDuration(-1).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand \u003d new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"soons1"},"content":"        Assert.assertThrows(","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"soons1"},"content":"                CommandException.class, LogAddCommand.MESSAGE_NEGATIVE_DURATION, () -\u003e logEditCommand.execute(model));","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"sdevih"},"content":"    void testEquals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor1 \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_BENSON_TO_FIONA).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor2 \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_ALICE_TO_ELLE).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand1 \u003d new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor1);","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand2 \u003d new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor2);","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"soons1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"soons1"},"content":"        assertEquals(logEditCommand1, logEditCommand1);","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"soons1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand1Copy \u003d new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor1);","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"soons1"},"content":"        assertEquals(logEditCommand1, logEditCommand1Copy);","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"soons1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"soons1"},"content":"        assertNotEquals(1, logEditCommand1);","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"soons1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"soons1"},"content":"        assertNotEquals(null, logEditCommand1);","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"soons1"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"soons1"},"content":"        assertNotEquals(logEditCommand1, logEditCommand2);","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"sdevih"},"content":"    void testToString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_ALICE_TO_ELLE).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"soons1"},"content":"        LogEditCommand logEditCommand \u003d new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"soons1"},"content":"        String expected \u003d LogEditCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"soons1"},"content":"                + \"{index\u003d\" + TypicalIndexes.INDEX_FIRST_PERSON","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"soons1"},"content":"                + \", editLogDescriptor\u003d\" + editLogDescriptor + \"}\";","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"soons1"},"content":"        assertEquals(expected, logEditCommand.toString());","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"soons1":118,"sdevih":39}},{"path":"src/test/java/scrolls/elder/logic/commands/LogFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.testutil.TypicalLogs;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":" * Contains integration tests (interaction with the Model) and unit tests for LogFindCommand.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"public class LogFindCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"    private Model model;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"    private LogStore logStore;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"    private LogStore expectedLogStore;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    private final Role volunteerRole \u003d new Role(CommandTestUtil.VALID_ROLE_VOLUNTEER);","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"    private final Role befriendeeRole \u003d new Role(CommandTestUtil.VALID_ROLE_BEFRIENDEE);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"        logStore \u003d model.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"        expectedLogStore \u003d expectedModel.getMutableDatastore().getMutableLogStore();","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"        logStore.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"        expectedLogStore.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"        logStore.addLog(TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"        expectedLogStore.addLog(TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"    void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"        LogFindCommand logFindCommandVolunteer \u003d new LogFindCommand(TypicalIndexes.INDEX_FIFTH_PERSON, volunteerRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"        Assert.assertThrows(CommandException.class, LogFindCommand.MESSAGE_FINDLOG_PERSON_ERROR","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"                + Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, () -\u003e logFindCommandVolunteer.execute(model));","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"        LogFindCommand logFindCommandBefriendee \u003d new LogFindCommand(TypicalIndexes.INDEX_FIFTH_PERSON, befriendeeRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"        Assert.assertThrows(CommandException.class, LogFindCommand.MESSAGE_FINDLOG_PERSON_ERROR","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"                + Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, () -\u003e logFindCommandBefriendee.execute(model));","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"    void execute_validLogFindCommandVolunteer_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"        LogFindCommand logFindCommandAlice \u003d new LogFindCommand(TypicalIndexes.INDEX_FIRST_PERSON, volunteerRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"        int alicePersonId \u003d TypicalPersons.ALICE.getPersonId();","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"        expectedLogStore.updateFilteredLogListByPersonId(alicePersonId);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"        String expectedMessage \u003d LogFindCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(logFindCommandAlice, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"    void execute_validLogFindCommandBefriendee_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"        LogFindCommand logFindCommandElle \u003d new LogFindCommand(TypicalIndexes.INDEX_FIRST_PERSON, befriendeeRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        int ellePersonId \u003d TypicalPersons.ELLE.getPersonId();","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"        expectedLogStore.updateFilteredLogListByPersonId(ellePersonId);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"        String expectedMessage \u003d LogFindCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"gerteck"},"content":"        assertCommandSuccess(logFindCommandElle, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"    void testEquals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"        LogFindCommand logFindCommand1 \u003d new LogFindCommand(TypicalIndexes.INDEX_FIRST_PERSON, volunteerRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"        LogFindCommand logFindCommand2 \u003d new LogFindCommand(TypicalIndexes.INDEX_FIRST_PERSON, befriendeeRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"        assertEquals(logFindCommand1, logFindCommand1);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"        LogFindCommand logFindCommand1Copy \u003d new LogFindCommand(TypicalIndexes.INDEX_FIRST_PERSON, volunteerRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"        assertEquals(logFindCommand1, logFindCommand1Copy);","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"        assertNotEquals(1, logFindCommand1);","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"        assertFalse(logFindCommand1.equals(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"        assertNotEquals(null, logFindCommand1);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"gerteck"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"gerteck"},"content":"        assertNotEquals(logFindCommand1, logFindCommand2);","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"    void testToString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"        LogFindCommand logFindCommand \u003d new LogFindCommand(TypicalIndexes.INDEX_FIRST_PERSON, volunteerRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"        String expected \u003d LogFindCommand.class.getCanonicalName()","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"                + \"{role\u003d\" + volunteerRole","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"                + \", listIndex\u003d\" + TypicalIndexes.INDEX_FIRST_PERSON + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"gerteck"},"content":"        assertEquals(expected, logFindCommand.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"gerteck"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"gerteck":124}},{"path":"src/test/java/scrolls/elder/logic/commands/PairCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"class PairCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    private Model model;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore expectedPersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"    void execute_pairFilteredPersonList_pairSuccessful() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        Person befriendeeToPair \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        Person volunteerToPair \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        PairCommand pairCommand \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"            new PairCommand(TypicalIndexes.INDEX_SECOND_PERSON, TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"        String expectedMessage \u003d String.format(PairCommand.MESSAGE_PAIR_SUCCESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"sdevih"},"content":"            Messages.formatPerson(befriendeeToPair), Messages.formatPerson(volunteerToPair));","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        Person afterPairingPerson1 \u003d new PersonBuilder(befriendeeToPair)","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"            .withPairedWithName(Optional.of(volunteerToPair.getName()))","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"            .withPairedWithID(Optional.of(volunteerToPair.getPersonId())).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        Person afterPairingPerson2 \u003d new PersonBuilder(volunteerToPair)","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"            .withPairedWithName(Optional.of(befriendeeToPair.getName()))","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"            .withPairedWithID(Optional.of(befriendeeToPair.getPersonId())).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"            expectedPersonStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"soons1"},"content":"            afterPairingPerson1);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"            expectedPersonStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"soons1"},"content":"            afterPairingPerson2);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"        assertCommandSuccess(pairCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"    void execute_alreadyPaired_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"soons1"},"content":"        PairCommand pairCommand \u003d new PairCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"            TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"soons1"},"content":"        Assert.assertThrows(","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"soons1"},"content":"            CommandException.class, PairCommand.MESSAGE_ALREADY_PAIRED, () -\u003e pairCommand.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"soons1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"soons1"},"content":"        PairCommand pairCommand1 \u003d new PairCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"soons1"},"content":"            TypicalIndexes.INDEX_FIFTH_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"soons1"},"content":"        PairCommand pairCommand2 \u003d new PairCommand(TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"soons1"},"content":"            TypicalIndexes.INDEX_FOURTH_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"soons1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(pairCommand1, pairCommand1);","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"soons1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"soons1"},"content":"        PairCommand pairCommand1Copy \u003d new PairCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"soons1"},"content":"            TypicalIndexes.INDEX_FIFTH_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(pairCommand1, pairCommand1Copy);","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"soons1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(1, pairCommand1);","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"soons1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(null, pairCommand1);","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"soons1"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(pairCommand1, pairCommand2);","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"soons1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"soons1"},"content":"        PairCommand pairCommand \u003d new PairCommand(TypicalIndexes.INDEX_FIRST_PERSON, TypicalIndexes.INDEX_FIFTH_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"soons1"},"content":"        String expected \u003d PairCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"soons1"},"content":"            + \"{index1\u003d\" + TypicalIndexes.INDEX_FIRST_PERSON","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"soons1"},"content":"            + \", index2\u003d\" + TypicalIndexes.INDEX_FIFTH_PERSON + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"soons1"},"content":"        assertEquals(expected, pairCommand.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"soons1":61,"CJerrong":9,"chaaaaun":38,"sdevih":1}},{"path":"src/test/java/scrolls/elder/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"public class RedoCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    private Model model;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"    private PersonStore expectedPersonStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"        personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"    public void execute_redoAdd_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"        // Add valid person to model","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"        personStore.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        // This should be the state after redo is performed","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"        // Undo adding valid person","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"    public void execute_invalidRedoNewList_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        String expectedMessage \u003d RedoCommand.MESSAGE_REDO_ERROR;","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"        assertCommandFailure(redoCommand, model, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"    public void execute_invalidRedoLatestState_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"        // Add valid person to model","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"        personStore.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"        String expectedMessage \u003d RedoCommand.MESSAGE_REDO_ERROR;","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"        assertCommandFailure(redoCommand, model, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"    public void execute_redoDelete_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"        // Delete person","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"        Person personToDelete \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"        personStore.removePerson(personToDelete);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"        // Delete in expected person store","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore.removePerson(personToDelete);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"        // Undo adding valid person","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"    public void execute_redoClear_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"        model.setDatastore(new Datastore());","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"        expectedModel.setDatastore(new Datastore());","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"        // Undo changes","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"    public void execute_redoEdit_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        Person editedPerson \u003d new PersonBuilder(TypicalPersons.BENSON).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(personStore.getFilteredVolunteerList().get(1), editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore.setPerson(personStore.getFilteredVolunteerList().get(1), editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"        // Undo changes","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"    public void execute_redoPair_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"CJerrong"},"content":"        // Preparing the pair","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"        Person befriendeeToPair \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"        Person volunteerToPair \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"        Person afterPairingPerson1 \u003d new PersonBuilder(befriendeeToPair)","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithName(Optional.of(volunteerToPair.getName()))","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithID(Optional.of(volunteerToPair.getPersonId())).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"CJerrong"},"content":"        Person afterPairingPerson2 \u003d new PersonBuilder(volunteerToPair)","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithName(Optional.of(befriendeeToPair.getName()))","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithID(Optional.of(befriendeeToPair.getPersonId())).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"        // Pair volunteer and befriendee in model, changes to be undone","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"                afterPairingPerson1);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"                afterPairingPerson2);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"        // Pair volunteer and befriendee in expected model","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"                expectedPersonStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"                afterPairingPerson1);","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"                expectedPersonStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"CJerrong"},"content":"                afterPairingPerson2);","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"CJerrong"},"content":"        // Undo changes","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"CJerrong"},"content":"    public void execute_redoUnpair_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"CJerrong"},"content":"        // Prepare the unpair","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"CJerrong"},"content":"        Person personToUnpair1 \u003d personStore.getFilteredBefriendeeList()","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"CJerrong"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"CJerrong"},"content":"        Person personToUnpair2 \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"CJerrong"},"content":"        Person afterUnpairingPerson1 \u003d new PersonBuilder(personToUnpair1)","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithName(Optional.empty()).withPairedWithID(Optional.empty()).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"CJerrong"},"content":"        Person afterUnpairingPerson2 \u003d new PersonBuilder(personToUnpair2)","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithName(Optional.empty()).withPairedWithID(Optional.empty()).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"CJerrong"},"content":"        // Unpair in model","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"CJerrong"},"content":"                afterUnpairingPerson1);","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"CJerrong"},"content":"                afterUnpairingPerson2);","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"CJerrong"},"content":"        // Unpair in expected model","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"CJerrong"},"content":"                expectedPersonStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"CJerrong"},"content":"                afterUnpairingPerson1);","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"CJerrong"},"content":"                expectedPersonStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"CJerrong"},"content":"                afterUnpairingPerson2);","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"CJerrong"},"content":"        expectedModel.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"CJerrong"},"content":"        // Undo changes in model","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":195}},{"path":"src/test/java/scrolls/elder/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CJerrong"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CJerrong"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"CJerrong"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CJerrong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CJerrong"},"content":"public class UndoCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"    private Model model;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"CJerrong"},"content":"    private PersonStore expectedPersonStore;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"CJerrong"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"CJerrong"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"CJerrong"},"content":"        model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"CJerrong"},"content":"        personStore \u003d model.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"CJerrong"},"content":"        expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"CJerrong"},"content":"        expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    public void execute_undoAdd_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"        personStore.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"    public void execute_invalidUndoNewModel_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"CJerrong"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"CJerrong"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_ERROR;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"CJerrong"},"content":"        assertCommandFailure(undoCommand, model, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"    public void execute_invalidUndoAfterUndoToFirstState_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"        // Add a person","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"CJerrong"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        personStore.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"CJerrong"},"content":"        // Undo to first state","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"CJerrong"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_ERROR;","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"CJerrong"},"content":"        assertCommandFailure(undoCommand, model, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"CJerrong"},"content":"    public void execute_undoAfterRedo_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"CJerrong"},"content":"        // Add valid Person","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"CJerrong"},"content":"        personStore.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"        // Undo changes","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"CJerrong"},"content":"        model.undoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"CJerrong"},"content":"        // Redo changes","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"CJerrong"},"content":"        model.redoChanges();","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"CJerrong"},"content":"    public void execute_undoDelete_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"CJerrong"},"content":"        // Delete person","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"CJerrong"},"content":"        Person personToDelete \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"        personStore.removePerson(personToDelete);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"CJerrong"},"content":"    public void execute_undoClear_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"CJerrong"},"content":"        model.setDatastore(new Datastore());","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"    public void execute_undoEdit_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"CJerrong"},"content":"        Person editedPerson \u003d new PersonBuilder(TypicalPersons.BENSON).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(personStore.getFilteredVolunteerList().get(1), editedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"CJerrong"},"content":"    public void execute_undoPair_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"CJerrong"},"content":"        Person befriendeeToPair \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"        Person volunteerToPair \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"CJerrong"},"content":"        Person afterPairingPerson1 \u003d new PersonBuilder(befriendeeToPair)","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithName(Optional.of(volunteerToPair.getName()))","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithID(Optional.of(volunteerToPair.getPersonId())).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"CJerrong"},"content":"        Person afterPairingPerson2 \u003d new PersonBuilder(volunteerToPair)","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithName(Optional.of(befriendeeToPair.getName()))","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithID(Optional.of(befriendeeToPair.getPersonId())).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"CJerrong"},"content":"                afterPairingPerson1);","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"CJerrong"},"content":"                afterPairingPerson2);","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"    public void execute_undoUnpair_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"        Person personToUnpair1 \u003d personStore.getFilteredBefriendeeList()","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"CJerrong"},"content":"        Person personToUnpair2 \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"CJerrong"},"content":"        Person afterUnpairingPerson1 \u003d new PersonBuilder(personToUnpair1)","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithName(Optional.empty()).withPairedWithID(Optional.empty()).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"        Person afterUnpairingPerson2 \u003d new PersonBuilder(personToUnpair2)","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"                .withPairedWithName(Optional.empty()).withPairedWithID(Optional.empty()).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"CJerrong"},"content":"                afterUnpairingPerson1);","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"CJerrong"},"content":"        personStore.setPerson(","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"CJerrong"},"content":"                personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"CJerrong"},"content":"                afterUnpairingPerson2);","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"CJerrong"},"content":"        model.commitDatastore();","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CJerrong":158}},{"path":"src/test/java/scrolls/elder/logic/commands/UnpairCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyPersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"class UnpairCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"sdevih"},"content":"    void execute_unpairFilteredPersonList_unpairSuccessful() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        Model model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        ReadOnlyPersonStore personStore \u003d model.getDatastore().getPersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        Person personToUnpair1 \u003d personStore.getFilteredBefriendeeList()","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"            .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        Person personToUnpair2 \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"sdevih"},"content":"        UnpairCommand unpairCommand \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"CJerrong"},"content":"            new UnpairCommand(TypicalIndexes.INDEX_FIRST_PERSON, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"sdevih"},"content":"        String expectedMessage \u003d String.format(UnpairCommand.MESSAGE_UNPAIR_SUCCESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"sdevih"},"content":"            Messages.formatPerson(personToUnpair1), Messages.formatPerson(personToUnpair2));","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        Person afterUnpairingPerson1 \u003d new PersonBuilder(personToUnpair1)","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"CJerrong"},"content":"            .withPairedWithName(Optional.empty()).withPairedWithID(Optional.empty()).build();","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"CJerrong"},"content":"        Person afterUnpairingPerson2 \u003d new PersonBuilder(personToUnpair2)","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"CJerrong"},"content":"            .withPairedWithName(Optional.empty()).withPairedWithID(Optional.empty()).build();","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        ModelManager expectedModel \u003d new ModelManager(new Datastore(model.getDatastore()), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        PersonStore expectedPersonStore \u003d expectedModel.getMutableDatastore().getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredBefriendeeList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"sdevih"},"content":"            afterUnpairingPerson1);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        expectedPersonStore.setPerson(","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"            personStore.getFilteredVolunteerList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"sdevih"},"content":"            afterUnpairingPerson2);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"sdevih"},"content":"        assertCommandSuccess(unpairCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"sdevih"},"content":"    void execute_contactsNotPaired_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        Model model \u003d new ModelManager(TypicalDatastore.getTypicalDatastore(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"        UnpairCommand unpairCommand \u003d new UnpairCommand(TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"sdevih"},"content":"            TypicalIndexes.INDEX_THIRD_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"sdevih"},"content":"        Assert.assertThrows(","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"sdevih"},"content":"            CommandException.class, UnpairCommand.MESSAGE_NOT_PAIRED, () -\u003e unpairCommand.execute(model));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"sdevih"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"sdevih"},"content":"        UnpairCommand unpairCommand1 \u003d new UnpairCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"sdevih"},"content":"            TypicalIndexes.INDEX_FIFTH_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"sdevih"},"content":"        UnpairCommand unpairCommand2 \u003d new UnpairCommand(TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"sdevih"},"content":"            TypicalIndexes.INDEX_FOURTH_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"sdevih"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"sdevih"},"content":"        assertTrue(unpairCommand1.equals(unpairCommand1));","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"sdevih"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"sdevih"},"content":"        UnpairCommand unpairCommand1Copy \u003d new UnpairCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"sdevih"},"content":"            TypicalIndexes.INDEX_FIFTH_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"sdevih"},"content":"        assertTrue(unpairCommand1.equals(unpairCommand1Copy));","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"sdevih"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"sdevih"},"content":"        assertFalse(unpairCommand1.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"sdevih"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"sdevih"},"content":"        assertFalse(unpairCommand1.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"sdevih"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"sdevih"},"content":"        assertFalse(unpairCommand1.equals(unpairCommand2));","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"sdevih"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"sdevih"},"content":"        UnpairCommand unpairCommand \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"sdevih"},"content":"            new UnpairCommand(TypicalIndexes.INDEX_FIRST_PERSON, TypicalIndexes.INDEX_FIFTH_PERSON);","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"sdevih"},"content":"        String expected \u003d UnpairCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"sdevih"},"content":"            + \"{index1\u003d\" + TypicalIndexes.INDEX_FIRST_PERSON","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"sdevih"},"content":"            + \", index2\u003d\" + TypicalIndexes.INDEX_FIFTH_PERSON + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"sdevih"},"content":"        assertEquals(expected, unpairCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"CJerrong":6,"chaaaaun":16,"sdevih":80}},{"path":"src/test/java/scrolls/elder/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.AddCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.CommandTestUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        Person expectedPerson \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"                new PersonBuilder(TypicalPersons.BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.PREAMBLE_WHITESPACE + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.ROLE_DESC_BEFRIENDEE,","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"                        new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        Person expectedPersonMultipleTags \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"                new PersonBuilder(TypicalPersons.BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND,","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"                        CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.ROLE_DESC_BEFRIENDEE,","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"                        new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        String validExpectedPersonString \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE;","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        // multiple names","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        // multiple phones","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, CommandTestUtil.PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        // multiple emails","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, CommandTestUtil.EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_EMAIL));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, CommandTestUtil.ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"                validExpectedPersonString + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"                        CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_ROLE));","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"        // invalid email","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_EMAIL));","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"        // invalid address","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"        // invalid role","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_ROLE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_ROLE));","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, validExpectedPersonString + CommandTestUtil.INVALID_NAME_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"        // invalid email","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, validExpectedPersonString + CommandTestUtil.INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_EMAIL));","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, validExpectedPersonString + CommandTestUtil.INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"        // invalid address","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, validExpectedPersonString + CommandTestUtil.INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"        // invalid role","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, validExpectedPersonString + CommandTestUtil.INVALID_ROLE_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"gerteck"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_ROLE));","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"        // zero tags","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"                CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.ROLE_DESC_VOLUNTEER,","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"gerteck"},"content":"                        new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"        // missing name prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.VALID_NAME_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"        // missing phone prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.VALID_PHONE_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"        // missing email prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.VALID_EMAIL_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"        // missing address prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.VALID_NAME_BOB + CommandTestUtil.VALID_PHONE_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.VALID_EMAIL_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"        // invalid name","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"chaaaaun"},"content":"        // invalid phone","lastModifiedDate":"2024-03-12"},{"lineNumber":180,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"chaaaaun"},"content":"        // invalid email","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"chaaaaun"},"content":"        // invalid address","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"chaaaaun"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.INVALID_ADDRESS_DESC + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"chaaaaun"},"content":"        // invalid tag","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"chaaaaun"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.INVALID_TAG_DESC","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"gerteck"},"content":"        // invalid role","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.INVALID_ROLE_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.VALID_TAG_FRIEND, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":215,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":216,"author":{"gitId":"chaaaaun"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-12"},{"lineNumber":217,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":218,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE","lastModifiedDate":"2024-03-16"},{"lineNumber":221,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"chaaaaun"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.PREAMBLE_NON_EMPTY + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":227,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-12"},{"lineNumber":230,"author":{"gitId":"chaaaaun"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":231,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":232,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"gerteck":54,"chaaaaun":178}},{"path":"src/test/java/scrolls/elder/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.AddCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.FindCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.ListCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.LogDeleteCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.TagListContainsTagsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    private static final String ROLE_STRING \u003d \"volunteer\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"sdevih"},"content":"    public void parseCommand_delete1() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        String userInput \u003d String.format(\"%s %d r/%s\", DeleteCommand.COMMAND_WORD_DELETE,","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON.getOneBased(), ROLE_STRING);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, new Role(ROLE_STRING)), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"sdevih"},"content":"    public void parseCommand_delete2() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        String userInput \u003d String.format(\"%s %d r/%s\", DeleteCommand.COMMAND_WORD_DEL,","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON.getOneBased(), ROLE_STRING);","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, new Role(ROLE_STRING)), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"sdevih"},"content":"    public void parseCommand_delete3() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        String userInput \u003d String.format(\"%s %d r/%s\", DeleteCommand.COMMAND_WORD_RM,","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON.getOneBased(), ROLE_STRING);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, new Role(ROLE_STRING)), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"sdevih"},"content":"    public void parseCommand_delete4() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        String userInput \u003d String.format(\"%s %d r/%s\", DeleteCommand.COMMAND_WORD_REMOVE,","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"                TypicalIndexes.INDEX_FIRST_PERSON.getOneBased(), ROLE_STRING);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, new Role(ROLE_STRING)), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"                + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"                + \" \"","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"sdevih"},"content":"    public void parseCommand_logDelete1() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"sdevih"},"content":"        String userInput \u003d String.format(\"%s %d\", LogDeleteCommand.COMMAND_WORD_LOG_DELETE,","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"sdevih"},"content":"                TypicalIndexes.INDEX_FIRST_LOG.getOneBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand command \u003d (LogDeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"sdevih"},"content":"        assertEquals(new LogDeleteCommand(TypicalIndexes.INDEX_FIRST_LOG), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"sdevih"},"content":"    public void parseCommand_logDelete2() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"sdevih"},"content":"        String userInput \u003d String.format(\"%s %d\", LogDeleteCommand.COMMAND_WORD_LOG_DEL,","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"sdevih"},"content":"                TypicalIndexes.INDEX_FIRST_LOG.getOneBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand command \u003d (LogDeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"sdevih"},"content":"        assertEquals(new LogDeleteCommand(TypicalIndexes.INDEX_FIRST_LOG), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"sdevih"},"content":"    public void parseCommand_logDelete3() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"sdevih"},"content":"        String userInput \u003d String.format(\"%s %d\", LogDeleteCommand.COMMAND_WORD_LOG_RM,","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"sdevih"},"content":"                TypicalIndexes.INDEX_FIRST_LOG.getOneBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand command \u003d (LogDeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"sdevih"},"content":"        assertEquals(new LogDeleteCommand(TypicalIndexes.INDEX_FIRST_LOG), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"sdevih"},"content":"    public void parseCommand_logDelete4() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"sdevih"},"content":"        String userInput \u003d String.format(\"%s %d\", LogDeleteCommand.COMMAND_WORD_LOG_REMOVE,","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"sdevih"},"content":"                TypicalIndexes.INDEX_FIRST_LOG.getOneBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"sdevih"},"content":"        LogDeleteCommand command \u003d (LogDeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"sdevih"},"content":"        assertEquals(new LogDeleteCommand(TypicalIndexes.INDEX_FIRST_LOG), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"gerteck"},"content":"                FindCommand.COMMAND_WORD_FIND + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"gerteck"},"content":"        assertEquals(","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"gerteck"},"content":"                new FindCommand(","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"gerteck"},"content":"                        new NameContainsKeywordsPredicate(keywords),","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"gerteck"},"content":"                        new TagListContainsTagsPredicate(Collections.emptySet()),","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"gerteck"},"content":"                        true, true, true, true), command);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"CJerrong"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"CJerrong"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"CJerrong"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"CJerrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"CJerrong"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"CJerrong"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"CJerrong"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                        -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, Messages.MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"chaaaaun"},"content":"                -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"CJerrong":14,"gerteck":12,"chaaaaun":42,"-":70,"sdevih":46}},{"path":"src/test/java/scrolls/elder/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"chaaaaun":1,"-":149}},{"path":"src/test/java/scrolls/elder/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.Command;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"chaaaaun":3,"-":36}},{"path":"src/test/java/scrolls/elder/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    private static final String ROLE_STRING \u003d \"volunteer\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        assertParseSuccess(parser, \"1 r/\" + ROLE_STRING,","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"                new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON, new Role(ROLE_STRING)));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"chaaaaun":12,"-":24}},{"path":"src/test/java/scrolls/elder/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.CommandTestUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    private static final String TAG_EMPTY \u003d \" \" + CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"    private static final String ROLE_VOLUNTEER \u003d \" r/volunteer \";","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"    private static final String ROLE_BEFRIENDEE \u003d \" r/befriendee \";","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        // no index specified","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"        // no role specified","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        // no field specified","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + ROLE_VOLUNTEER, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"        // no index, no role, no field specified","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        // negative index","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"-5\" + ROLE_VOLUNTEER + CommandTestUtil.NAME_DESC_AMY,","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        // zero index","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"0\" + ROLE_VOLUNTEER + CommandTestUtil.NAME_DESC_AMY,","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 some random string\" + ROLE_VOLUNTEER,","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 i/ string\" + ROLE_VOLUNTEER,","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_ROLE_DESC,","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"                Role.MESSAGE_CONSTRAINTS); // invalid role","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"                \"1\" + ROLE_VOLUNTEER + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"                \"1\" + ROLE_VOLUNTEER + CommandTestUtil.TAG_DESC_FRIEND + TAG_EMPTY","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"                \"1\" + ROLE_VOLUNTEER + TAG_EMPTY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.VALID_ADDRESS_AMY + CommandTestUtil.VALID_PHONE_AMY,","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"                        Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"                new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"gerteck"},"content":"                        .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER)","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"gerteck"},"content":"                        .withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"                        .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"                        .withEmail(CommandTestUtil.VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"                        .withAddress(CommandTestUtil.VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"                        .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"                        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"gerteck"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_VOLUNTEER","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"gerteck"},"content":"                new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"gerteck"},"content":"                        .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER)","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"gerteck"},"content":"                        .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"                        .withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"        // name","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"gerteck"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_VOLUNTEER + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"gerteck"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER)","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"gerteck"},"content":"                .withName(CommandTestUtil.VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"        // phone","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"gerteck"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_VOLUNTEER + CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"gerteck"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER)","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"gerteck"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"        // email","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"gerteck"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_VOLUNTEER + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"gerteck"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER)","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"gerteck"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"chaaaaun"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"        // address","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"gerteck"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_BEFRIENDEE + CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"gerteck"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_BEFRIENDEE)","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"gerteck"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"chaaaaun"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":184,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"chaaaaun"},"content":"        // tags","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"gerteck"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_BEFRIENDEE + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"gerteck"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_BEFRIENDEE)","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"gerteck"},"content":"                .withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"chaaaaun"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"chaaaaun"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"chaaaaun"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"chaaaaun"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"chaaaaun"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"chaaaaun"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"chaaaaun"},"content":"        String userInput \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"gerteck"},"content":"                targetIndex.getOneBased() + ROLE_BEFRIENDEE","lastModifiedDate":"2024-03-26"},{"lineNumber":203,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.INVALID_PHONE_DESC","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"chaaaaun"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"gerteck"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_BEFRIENDEE","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"gerteck"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-12"},{"lineNumber":213,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":214,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"chaaaaun"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2024-03-12"},{"lineNumber":216,"author":{"gitId":"chaaaaun"},"content":"        userInput \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":217,"author":{"gitId":"gerteck"},"content":"                targetIndex.getOneBased() + ROLE_BEFRIENDEE","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":227,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-12"},{"lineNumber":229,"author":{"gitId":"chaaaaun"},"content":"                        CliSyntax.PREFIX_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":230,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":231,"author":{"gitId":"chaaaaun"},"content":"        // multiple invalid values","lastModifiedDate":"2024-03-12"},{"lineNumber":232,"author":{"gitId":"chaaaaun"},"content":"        userInput \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":233,"author":{"gitId":"gerteck"},"content":"                targetIndex.getOneBased() + ROLE_BEFRIENDEE","lastModifiedDate":"2024-03-26"},{"lineNumber":234,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-26"},{"lineNumber":235,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"chaaaaun"},"content":"                        + CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2024-03-12"},{"lineNumber":239,"author":{"gitId":"chaaaaun"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2024-03-12"},{"lineNumber":240,"author":{"gitId":"chaaaaun"},"content":"                        CliSyntax.PREFIX_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":241,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":242,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":243,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":244,"author":{"gitId":"chaaaaun"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":245,"author":{"gitId":"chaaaaun"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-12"},{"lineNumber":246,"author":{"gitId":"gerteck"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_VOLUNTEER + TAG_EMPTY;","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":248,"author":{"gitId":"gerteck"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":249,"author":{"gitId":"gerteck"},"content":"                .withRole(CommandTestUtil.VALID_ROLE_VOLUNTEER).withTags().build();","lastModifiedDate":"2024-03-26"},{"lineNumber":250,"author":{"gitId":"chaaaaun"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":251,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":252,"author":{"gitId":"chaaaaun"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-12"},{"lineNumber":253,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":254,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"gerteck":95,"chaaaaun":159}},{"path":"src/test/java/scrolls/elder/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.commands.CommandTestUtil;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.FindCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.TagListContainsTagsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"    private static final TagListContainsTagsPredicate emptyTagPredicate \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"            new TagListContainsTagsPredicate(Collections.emptySet());","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"    private static final NameContainsKeywordsPredicate emptyNamePredicate \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"            new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    public void parse_onlyRoleArg_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, CommandTestUtil.ROLE_DESC_BEFRIENDEE,","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, CommandTestUtil.ROLE_DESC_VOLUNTEER,","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"    public void parse_bothRoleArg_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"                CommandTestUtil.ROLE_DESC_BEFRIENDEE + CommandTestUtil.ROLE_DESC_VOLUNTEER + \" Alice Bob\",","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"    public void parse_bothPairFlags_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"                FindCommandParser.PAIRED_FLAG + \" \" + FindCommandParser.UNPAIRED_FLAG,","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"    public void parse_validArgsFind_returnsFindCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"        // All Persons","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")), emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"                        true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"gerteck"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"gerteck"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"        // Volunteers","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"gerteck"},"content":"        FindCommand expectedFindVCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")), emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"gerteck"},"content":"                        true, false, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, CommandTestUtil.ROLE_DESC_VOLUNTEER + \" \" + \"Alice Bob\", expectedFindVCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, \"r/volunteer \\n Alice \\n \\t Bob  \\t\", expectedFindVCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"        // Befriendees","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"gerteck"},"content":"        FindCommand expectedFindBCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"gerteck"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")), emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"gerteck"},"content":"                        false, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, CommandTestUtil.ROLE_DESC_BEFRIENDEE + \" \" + \"Alice Bob\", expectedFindBCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, \"r/befriendee \\n Alice \\n \\t Bob  \\t\", expectedFindBCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"gerteck"},"content":"    public void parse_onlyTagFindAll_returnsFindCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate tagPredicate \u003d prepareTagPredicate(\"friends\");","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"gerteck"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"                new FindCommand(emptyNamePredicate, tagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"                        true, true, true, true);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, \"\\n t/friends \\n \\t\", expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, \"t/friends\", expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"gerteck"},"content":"    public void parse_onlyPairFlagFindAll_returnsFindCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"gerteck"},"content":"        FindCommand expectedFindPairedCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"gerteck"},"content":"                new FindCommand(emptyNamePredicate, emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"gerteck"},"content":"                        true, true, true, false);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, FindCommandParser.PAIRED_FLAG + \"\\n \\t\", expectedFindPairedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, FindCommandParser.PAIRED_FLAG, expectedFindPairedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"        FindCommand expectedFindUnpairedCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"                new FindCommand(emptyNamePredicate, emptyTagPredicate,","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"                        true, true, true, false);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, FindCommandParser.UNPAIRED_FLAG + \"\\n \\t\", expectedFindPairedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, FindCommandParser.UNPAIRED_FLAG, expectedFindPairedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"    private TagListContainsTagsPredicate prepareTagPredicate(String userInput) {","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"        String[] tagsArray \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"        for (String tag : tagsArray) {","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"            tagList.add(new Tag(tag));","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"gerteck"},"content":"        return new TagListContainsTagsPredicate(tagList);","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"gerteck":95,"chaaaaun":8,"-":19}},{"path":"src/test/java/scrolls/elder/logic/parser/LogAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.LogAddCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"class LogAddCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"    private LogAddCommandParser parser \u003d new LogAddCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"    //TODO Implement test cases to create same LogAddCommand object as in LogAddCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"    void parse_validArgs_returnsLogAddCommand() {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"        /*","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"        formatter.setLenient(false); // to make sure that the date strictly follows the format \"yyyy-MM-dd\"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"        Date date;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"            date \u003d formatter.parse(\"2024-03-07\");","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"            date \u003d new Date();","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"        assertParseSuccess(parser, \"1 2 t/Movies s/2024-03-07 d/2 r/Good.\",","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"                new LogAddCommand(\"Movies\", TypicalIndexes.INDEX_FIRST_PERSON, TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"                        2, date, \"Good.\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"        */","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"    public void parse_noArgs_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"  \",","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"    public void parse_noIndex_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"t/Movies s/2024-03-07 d/2 r/Good\",","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"    public void parse_invalidDateFormat_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"1 2 t/Movies s/2024/03/07 d/2 r/Good\",","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"                \"Invalid date format. Expected format is yyyy-MM-dd.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"    public void parse_invalidDurationFormat_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"1 2 t/Movies s/2024-03-07 d/Two r/Good\",","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"                \"Invalid number format. Expected a number.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"pe\",","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"soons1":61}},{"path":"src/test/java/scrolls/elder/logic/parser/LogDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sdevih"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"sdevih"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"sdevih"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.logic.commands.LogDeleteCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"sdevih"},"content":"class LogDeleteCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"    private LogDeleteCommandParser parser \u003d new LogDeleteCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"    public void parse_validArgs_returnsLogDeleteCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"sdevih"},"content":"        assertParseSuccess(parser, \"1\",","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"                new LogDeleteCommand(TypicalIndexes.INDEX_FIRST_LOG));","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"sdevih"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"sdevih"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"sdevih"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"sdevih"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"sdevih":27}},{"path":"src/test/java/scrolls/elder/logic/parser/LogEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"import java.util.Date;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.LogEditCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.EditLogDescriptorBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalLogs;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"class LogEditCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"    private LogEditCommandParser parser \u003d new LogEditCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"    void parse_validArgs_returnsLogEditCommand() {","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"        formatter.setLenient(false); // to make sure that the date strictly follows the format \"yyyy-MM-dd\"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"        Date date;","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"            date \u003d formatter.parse(\"2024-04-08\");","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"        } catch (java.text.ParseException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"            date \u003d new Date();","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"        LogEditCommand.EditLogDescriptor editLogDescriptor \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"                new EditLogDescriptorBuilder(TypicalLogs.LOG_BENSON_TO_FIONA)","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"                        .withBefriendeeIndex(null)","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"                        .withVolunteerIndex(null)","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"                        .withStartDate(date).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"        assertParseSuccess(parser, \"1 t/Icebreaker s/2024-04-08 d/3 r/Was okay.\",","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"                new LogEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, editLogDescriptor));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"    public void parse_noArgs_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"  \",","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogEditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"    public void parse_noIndex_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"t/Icebreaker s/2024-04-08 d/3 r/Was okay.\",","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogEditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"    public void parse_invalidDateFormat_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"1 t/Icebreaker s/2024/04/08 d/3 r/Was okay.\",","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"                \"Invalid date format. Expected format is yyyy-MM-dd.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"soons1"},"content":"    public void parse_invalidDurationFormat_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"1 t/Icebreaker s/2024-04-08 d/Two r/Was okay.\",","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"soons1"},"content":"                \"Invalid number format. Expected a number.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"pe\",","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"soons1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogEditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"soons1":69}},{"path":"src/test/java/scrolls/elder/logic/parser/LogFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.commands.CommandTestUtil;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.logic.commands.LogFindCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"public class LogFindCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"    private LogFindCommandParser parser \u003d new LogFindCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"    private final Role volunteerRole \u003d new Role(CommandTestUtil.VALID_ROLE_VOLUNTEER);","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"    private final Role befriendeeRole \u003d new Role(CommandTestUtil.VALID_ROLE_BEFRIENDEE);","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"    public void parse_onlyRoleArg_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, CommandTestUtil.ROLE_DESC_BEFRIENDEE,","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, CommandTestUtil.ROLE_DESC_VOLUNTEER,","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"    public void parse_onlyIndexArg_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, LogFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"    public void parse_bothRoleArg_throwsParseException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"        assertParseFailure(parser, \"1 \"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_BEFRIENDEE","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"                        + CommandTestUtil.ROLE_DESC_VOLUNTEER,","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_ROLE));","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"    public void parse_validArgsFind_returnsLogFindCommand() {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"gerteck"},"content":"        LogFindCommand expectedLogFindCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"                new LogFindCommand(TypicalIndexes.INDEX_FIRST_PERSON, befriendeeRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, \"1 \" + CommandTestUtil.ROLE_DESC_BEFRIENDEE,","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"gerteck"},"content":"                expectedLogFindCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"gerteck"},"content":"        expectedLogFindCommand \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"gerteck"},"content":"                new LogFindCommand(TypicalIndexes.INDEX_FIRST_PERSON, volunteerRole);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"gerteck"},"content":"        assertParseSuccess(parser, \"1 \" + CommandTestUtil.ROLE_DESC_VOLUNTEER,","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"gerteck"},"content":"                expectedLogFindCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"gerteck"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"gerteck":64}},{"path":"src/test/java/scrolls/elder/logic/parser/PairCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.PairCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"class PairCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"    private PairCommandParser parser \u003d new PairCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"    void parse_validArgs_returnsPairCommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"        assertParseSuccess(parser, \"1 5\",","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"                new PairCommand(TypicalIndexes.INDEX_FIRST_PERSON, TypicalIndexes.INDEX_FIFTH_PERSON));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"pe\",","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, PairCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"soons1":27}},{"path":"src/test/java/scrolls/elder/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"chaaaaun":36,"-":160}},{"path":"src/test/java/scrolls/elder/logic/parser/UnpairCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.logic.parser;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import static scrolls.elder.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.Messages;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.UnpairCommand;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"import scrolls.elder.testutil.TypicalIndexes;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"class UnpairCommandParserTest {","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"    private UnpairCommandParser parser \u003d new UnpairCommandParser();","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"    void parse_validArgs_returnsUnpairCommand() {","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"        assertParseSuccess(parser, \"1 5\",","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"                new UnpairCommand(TypicalIndexes.INDEX_FIRST_PERSON, TypicalIndexes.INDEX_FIFTH_PERSON));","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"        assertParseFailure(parser, \"pe\",","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, UnpairCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"soons1":27}},{"path":"src/test/java/scrolls/elder/model/DatastoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalLogs;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"public class DatastoreTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    public void equalsMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"        Datastore datastore1 \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"        datastore1.getMutablePersonStore().resetData(TypicalPersons.getTypicalPersonStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"        datastore1.getMutableLogStore().resetData(TypicalLogs.getTypicalLogStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"        Datastore datastore2 \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        datastore2.getMutablePersonStore().resetData(TypicalPersons.getTypicalPersonStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        datastore2.getMutableLogStore().resetData(TypicalLogs.getTypicalLogStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(datastore1, datastore2);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(datastore1, datastore1);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(datastore1, null);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(datastore1, new Object());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        // different datastore -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        Datastore differentDatastore \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        differentDatastore.getMutablePersonStore().resetData(TypicalPersons.getTypicalPersonStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(datastore1, differentDatastore);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        Datastore datastore1 \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        datastore1.getMutablePersonStore().resetData(TypicalPersons.getTypicalPersonStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        datastore1.getMutableLogStore().resetData(TypicalLogs.getTypicalLogStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        Datastore datastore2 \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        datastore2.getMutablePersonStore().resetData(TypicalPersons.getTypicalPersonStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        datastore2.getMutableLogStore().resetData(TypicalLogs.getTypicalLogStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        int hashCode1 \u003d datastore1.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        int hashCode2 \u003d datastore1.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        int hashCode3 \u003d datastore2.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"        // Consistency: hashCode on same object returns same result","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(hashCode1, hashCode2);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        // Equality: equal objects return same hashCode","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(hashCode1, hashCode3);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"chaaaaun":61}},{"path":"src/test/java/scrolls/elder/model/LogStoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalLogs;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"public class LogStoreTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    private LogStore logStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"        logStore \u003d new LogStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    public void emptyConstructor() {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(Collections.emptyList(), logStore.getLogList());","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    public void nonEmptyConstructor_createsDeepCopy() {","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        LogStore originalLogStore \u003d TypicalLogs.getTypicalLogStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        LogStore copiedLogStore \u003d new LogStore(originalLogStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        // Check if deep copied","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        assertNotSame(originalLogStore, copiedLogStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        // Check if the data is the same","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(originalLogStore, copiedLogStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        // Check if the data is independent","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        originalLogStore.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(copiedLogStore.hasLog(TypicalLogs.LOG_ALICE_TO_ELLE));","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e logStore.resetData(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"    public void resetData_withValidReadOnlyLogStore_replacesData() {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        LogStore newData \u003d TypicalLogs.getTypicalLogStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"        logStore.resetData(newData);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(newData, logStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    public void hasLog_nullLog_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e logStore.hasLog(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"    public void hasLog_logNotInLogStore_returnsFalse() {","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(logStore.hasLog(TypicalLogs.LOG_ALICE_TO_ELLE));","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"    public void hasLog_logInLogStore_returnsTrue() {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"        logStore.addLogWithId(TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(logStore.hasLog(TypicalLogs.LOG_BENSON_TO_FIONA));","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"    public void setLog_logInLogStore_updatesLog() {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"        Log originalLog \u003d TypicalLogs.LOG_ALICE_TO_ELLE;","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        logStore.addLogWithId(originalLog);","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        Log editedLog \u003d new Log(originalLog.getLogId(), TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"        logStore.setLog(editedLog);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        Log logInStore \u003d logStore.getLogById(originalLog.getLogId());","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(editedLog, logInStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"    public void removeLog_logInLogStore_removesLog() {","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"        Log logToRemove \u003d TypicalLogs.LOG_BENSON_TO_FIONA;","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        logStore.addLogWithId(logToRemove);","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"        logStore.removeLog(logToRemove.getLogId());","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(logStore.hasLog(logToRemove));","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"    public void getLogList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logStore.getLogList().remove(0));","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"    public void updateFilteredLogListByPersonId_updateFilter_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"        logStore.addLogWithId(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"        logStore.addLogWithId(TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"        // Initial filtering","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"        logStore.updateFilteredLogListByPersonId(TypicalLogs.LOG_ALICE_TO_ELLE.getVolunteerId());","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(1, logStore.getFilteredLogList().size());","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(logStore.getFilteredLogList().contains(TypicalLogs.LOG_ALICE_TO_ELLE));","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"        // Filter is updated after CRUD","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"chaaaaun"},"content":"        logStore.removeLog(TypicalLogs.LOG_ALICE_TO_ELLE.getLogId());","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(0, logStore.getFilteredLogList().size());","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(logStore.getFilteredLogList().contains(TypicalLogs.LOG_ALICE_TO_ELLE));","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"        // Filter is reset","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"        logStore.updateFilteredLogListByPersonId(null);","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(1, logStore.getFilteredLogList().size());","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        String expected \u003d LogStore.class.getCanonicalName() + \"{logs\u003d\" + logStore.getLogList() + \"}\";","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expected, logStore.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"    public void equalsMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"        logStore.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"        LogStore logStoreCopy \u003d new LogStore(logStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(logStore, logStoreCopy);","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(logStore, logStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(logStore, null);","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(logStore, new Object());","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"        // different person store -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"        LogStore differentLogStore \u003d new LogStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"        differentLogStore.addLog(TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(logStore, differentLogStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"        LogStore logStore1 \u003d new LogStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"        logStore1.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"        LogStore logStore2 \u003d new LogStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"        logStore2.addLog(TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"        int hashCode1 \u003d logStore1.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"        int hashCode2 \u003d logStore1.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"        int hashCode3 \u003d logStore2.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"        // Consistency: hashCode on same object returns same result","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(hashCode1, hashCode2);","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"        // Equality: equal objects return same hashCode","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(hashCode1, hashCode3);","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"chaaaaun":170}},{"path":"src/test/java/scrolls/elder/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(new Datastore(), modelManager.getMutableDatastore());","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        userPrefs.setDatastoreFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        userPrefs.setDatastoreFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    public void setDatastoreFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setDatastoreFilePath(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    public void setDatastoreFilePath_validPath_setsDatastoreFilePath() {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        Path path \u003d Paths.get(\"data/store/file/path\");","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        modelManager.setDatastoreFilePath(path);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(path, modelManager.getDatastoreFilePath());","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        Datastore datastore \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        datastore.getMutablePersonStore().addPerson(TypicalPersons.AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        Datastore differentDatastore \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        modelManager \u003d new ModelManager(datastore, userPrefs);","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(datastore, userPrefs);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"        // different datastore -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentDatastore, userPrefs)));","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"        differentUserPrefs.setDatastoreFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(modelManager.equals(new ModelManager(datastore, differentUserPrefs)));","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"chaaaaun":25,"-":74}},{"path":"src/test/java/scrolls/elder/model/PersonStoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Volunteer;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"public class PersonStoreTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    private PersonStore personStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        personStore \u003d new PersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    public void emptyConstructor() {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(Collections.emptyList(), personStore.getPersonList());","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    public void nonEmptyConstructor_createsDeepCopy() {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        PersonStore originalPersonStore \u003d TypicalPersons.getTypicalPersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        PersonStore copiedPersonStore \u003d new PersonStore(originalPersonStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        // Check if deep copied","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"        assertNotSame(originalPersonStore, copiedPersonStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        // Check if the data is the same","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(originalPersonStore, copiedPersonStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        // Check if the data is independent","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"        originalPersonStore.addPerson(TypicalPersons.BOB);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(copiedPersonStore.hasPerson(TypicalPersons.BOB));","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e personStore.resetData(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"    public void resetData_withValidReadOnlyPersonStore_replacesData() {","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        PersonStore newData \u003d TypicalPersons.getTypicalPersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        personStore.resetData(newData);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(newData, personStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"            new PersonBuilder(TypicalPersons.ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        PersonStoreStub newData \u003d new PersonStoreStub(newPersons);","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e personStore.resetData(newData));","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e personStore.hasPerson(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"    public void hasPerson_personNotInPersonStore_returnsFalse() {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(personStore.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"    public void hasPerson_personInPersonStore_returnsTrue() {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        personStore.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(personStore.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"    public void hasPerson_personWithSameIdentityFieldsInPersonStore_returnsTrue() {","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"        personStore.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"            new PersonBuilder(TypicalPersons.ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(personStore.hasPerson(editedAlice));","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e personStore.getPersonList().remove(0));","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"        String expected \u003d PersonStore.class.getCanonicalName() + \"{persons\u003d\" + personStore.getPersonList() + \"}\";","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expected, personStore.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"    public void equalsMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"        personStore.addPerson(TypicalPersons.AMY);","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"        PersonStore personStoreCopy \u003d new PersonStore(personStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(personStore, personStoreCopy);","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(personStore, personStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(personStore, null);","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(personStore, new Object());","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"        // different person store -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"        PersonStore differentPersonStore \u003d new PersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"        differentPersonStore.addPerson(new Volunteer(-1, TypicalPersons.BOB));","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(personStore, differentPersonStore);","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"        PersonStore personStore1 \u003d new PersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"        personStore1.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"        PersonStore personStore2 \u003d new PersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"        personStore2.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"        int hashCode1 \u003d personStore1.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"        int hashCode2 \u003d personStore1.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"        int hashCode3 \u003d personStore2.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"        // Consistency: hashCode on same object returns same result","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(hashCode1, hashCode2);","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"        // Equality: equal objects return same hashCode","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(hashCode1, hashCode3);","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"     * A stub ReadOnlyPersonStore whose persons list can violate interface constraints.","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"    private static class PersonStoreStub implements ReadOnlyPersonStore {","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"        PersonStoreStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"chaaaaun"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"chaaaaun"},"content":"            return persons;","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"gerteck"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"chaaaaun"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"chaaaaun"},"content":"        public ObservableList\u003cPerson\u003e getFilteredVolunteerList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"gerteck"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"chaaaaun"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"chaaaaun"},"content":"        public ObservableList\u003cPerson\u003e getFilteredBefriendeeList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"gerteck"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"CJerrong"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":192,"author":{"gitId":"CJerrong"},"content":"        public Name getNameFromID(int id) {","lastModifiedDate":"2024-03-30"},{"lineNumber":193,"author":{"gitId":"CJerrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":194,"author":{"gitId":"CJerrong"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"chaaaaun"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"chaaaaun"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"gerteck"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":200,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"gerteck"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"gerteck"},"content":"        public void updateFilteredVolunteerList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"gerteck"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":205,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"gerteck"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"gerteck"},"content":"        public void updateFilteredBefriendeeList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"gerteck"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"CJerrong":6,"gerteck":13,"chaaaaun":125,"-":69}},{"path":"src/test/java/scrolls/elder/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    public void setDatastoreFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setDatastoreFilePath(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    public void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        userPrefs.setDatastoreFilePath(Paths.get(\"data/store/file/path\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(userPrefs, userPrefs);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        UserPrefs userPrefsCopy \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(userPrefs, userPrefsCopy);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(userPrefs, null);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(userPrefs, new Object());","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        differentUserPrefs.setDatastoreFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(userPrefs, differentUserPrefs);","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chaaaaun":34,"-":15}},{"path":"src/test/java/scrolls/elder/model/log/LogTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.log;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalLogs;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"public class LogTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"CJerrong"},"content":"        String expectedToStringAliceToElle \u003d String.format(\"%s{Log ID\u003d%d, Title\u003d%s, Volunteer ID\u003d%d, Befriendee ID\u003d%d, \"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"                + \"Duration\u003d%s, Start Date\u003d%s, Remarks\u003d%s}\", Log.class.getCanonicalName(),","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"CJerrong"},"content":"            TypicalLogs.LOG_ALICE_TO_ELLE.getLogId(), TypicalLogs.LOG_ALICE_TO_ELLE.getLogTitle(),","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"            TypicalLogs.LOG_ALICE_TO_ELLE.getVolunteerId(),","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"            TypicalLogs.LOG_ALICE_TO_ELLE.getBefriendeeId(), TypicalLogs.LOG_ALICE_TO_ELLE.getDuration(),","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"            TypicalLogs.LOG_ALICE_TO_ELLE.getStartDate(), TypicalLogs.LOG_ALICE_TO_ELLE.getRemarks());","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expectedToStringAliceToElle, TypicalLogs.LOG_ALICE_TO_ELLE.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    public void equalsMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        Log log1 \u003d new Log(0, TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        Log log2 \u003d new Log(0, TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(log1, log2);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(log1, log1);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(log1, null);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(log1, new Object());","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        // different log -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"        Log differentLog \u003d new Log(1, TypicalLogs.LOG_BENSON_TO_FIONA);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(log1, differentLog);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        Log log1 \u003d new Log(0, TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"        Log log2 \u003d new Log(0, TypicalLogs.LOG_ALICE_TO_ELLE);","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        int hashCode1 \u003d log1.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        int hashCode2 \u003d log1.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        int hashCode3 \u003d log2.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"        // Consistency: hashCode on same object returns same result","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(hashCode1, hashCode2);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        // Equality: equal objects return same hashCode","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(hashCode1, hashCode3);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"CJerrong":3,"chaaaaun":58}},{"path":"src/test/java/scrolls/elder/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chaaaaun":6,"-":51}},{"path":"src/test/java/scrolls/elder/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chaaaaun":6,"-":83}},{"path":"src/test/java/scrolls/elder/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chaaaaun":2,"-":83}},{"path":"src/test/java/scrolls/elder/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chaaaaun":6,"-":55}},{"path":"src/test/java/scrolls/elder/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"public class PersonTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSamePerson(TypicalPersons.ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSamePerson(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        // same id, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"                new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"                        .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"                        .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"                        .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"                        .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"                        .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        // different id, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        Person aliceCopy \u003d new PersonBuilder(TypicalPersons.ALICE).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(TypicalPersons.ALICE, aliceCopy);","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(TypicalPersons.ALICE, TypicalPersons.ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertNotEquals(null, TypicalPersons.ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertNotEquals(5, TypicalPersons.ALICE);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertNotEquals(TypicalPersons.ALICE, TypicalPersons.BOB);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertNotEquals(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertNotEquals(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertNotEquals(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertNotEquals(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertNotEquals(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"        String expected \u003d Volunteer.class.getCanonicalName() + \"{name\u003d\" + TypicalPersons.ALICE.getName() + \", phone\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"                + TypicalPersons.ALICE.getPhone()","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"                + \", email\u003d\" + TypicalPersons.ALICE.getEmail() + \", address\u003d\" + TypicalPersons.ALICE.getAddress()","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"soons1"},"content":"                + \", tags\u003d\" + TypicalPersons.ALICE.getTags() + \", role\u003d\" + TypicalPersons.ALICE.getRole()","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"CJerrong"},"content":"                + \", pairedWithName\u003d\" + (TypicalPersons.ALICE.getPairedWithName().orElse(Name.getNone()))","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"soons1"},"content":"                + \", pairedWithId\u003d\" + (TypicalPersons.ALICE.getPairedWithId().orElse(-1))","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"CJerrong"},"content":"                + \", timeServed\u003d\" + (TypicalPersons.ALICE.getTimeServed())","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"CJerrong"},"content":"                + \", latestLogId\u003d\" + (TypicalPersons.ALICE.getLatestLogId().orElse(-1)) + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(expected, TypicalPersons.ALICE.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"CJerrong":7,"soons1":2,"chaaaaun":93}},{"path":"src/test/java/scrolls/elder/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chaaaaun":6,"-":55}},{"path":"src/test/java/scrolls/elder/model/person/TagListContainsTagsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerteck"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"public class TagListContainsTagsPredicateTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"gerteck"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate firstTagPredicate \u003d prepareTagPredicate(\"first\");","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate secondTagPredicate \u003d prepareTagPredicate(\"first second\");","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"gerteck"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"gerteck"},"content":"        assertTrue(firstTagPredicate.equals(firstTagPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"gerteck"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"gerteck"},"content":"        TagListContainsTagsPredicate firstPredicateCopy \u003d prepareTagPredicate(\"first\");","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"        assertTrue(firstTagPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"gerteck"},"content":"        assertFalse(firstTagPredicate.equals(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"gerteck"},"content":"        assertFalse(firstTagPredicate.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"gerteck"},"content":"        assertFalse(firstTagPredicate.equals(secondTagPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"    private TagListContainsTagsPredicate prepareTagPredicate(String userInput) {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"gerteck"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"gerteck"},"content":"        String[] tagsArray \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"gerteck"},"content":"        for (String tag : tagsArray) {","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"gerteck"},"content":"            tagList.add(new Tag(tag));","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"gerteck"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"        return new TagListContainsTagsPredicate(tagList);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"gerteck":49}},{"path":"src/test/java/scrolls/elder/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.PersonBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(uniquePersonList.contains(TypicalPersons.ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(uniquePersonList.contains(TypicalPersons.ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"                new PersonBuilder(TypicalPersons.ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"                        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(TypicalPersons.ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, TypicalPersons.ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(TypicalPersons.ALICE, null));","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(PersonNotFoundException.class, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"                -\u003e uniquePersonList.setPerson(TypicalPersons.ALICE, TypicalPersons.ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.setPerson(TypicalPersons.ALICE, TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"        expectedUniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"                new PersonBuilder(TypicalPersons.ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"                        .build();","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.setPerson(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.setPerson(TypicalPersons.ALICE, TypicalPersons.BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"        expectedUniquePersonList.add(TypicalPersons.BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.BENSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"                -\u003e uniquePersonList.setPerson(TypicalPersons.ALICE, TypicalPersons.BENSON));","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"chaaaaun"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"chaaaaun"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(TypicalPersons.ALICE));","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.remove(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"chaaaaun"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"chaaaaun"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":135,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":137,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"chaaaaun"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"chaaaaun"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"        expectedUniquePersonList.add(TypicalPersons.BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"chaaaaun"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"chaaaaun"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(TypicalPersons.BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"chaaaaun"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"chaaaaun"},"content":"        expectedUniquePersonList.add(TypicalPersons.BOB);","lastModifiedDate":"2024-03-12"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":161,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":162,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"chaaaaun"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"chaaaaun"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(TypicalPersons.ALICE, TypicalPersons.ALICE);","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"chaaaaun"},"content":"                -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"chaaaaun"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"chaaaaun"},"content":"                -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"chaaaaun"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"chaaaaun":179}},{"path":"src/test/java/scrolls/elder/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.model.tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    public void equalsMethod() {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        Tag tag1 \u003d new Tag(\"tag1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        Tag tag2 \u003d new Tag(\"tag1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(tag1, tag2);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(tag1, tag1);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(tag1, null);","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(tag1, new Object());","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        Tag differentTag \u003d new Tag(\"tag2\");","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"        assertNotEquals(tag1, differentTag);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"chaaaaun":30,"-":20}},{"path":"src/test/java/scrolls/elder/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"gerteck"},"content":"    private static final String INVALID_ROLE \u003d \"friend\";","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    private static final String VALID_ID \u003d String.valueOf(TypicalPersons.BENSON.getPersonId());","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    private static final String VALID_NAME \u003d TypicalPersons.BENSON.getName().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    private static final String VALID_PHONE \u003d TypicalPersons.BENSON.getPhone().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    private static final String VALID_EMAIL \u003d TypicalPersons.BENSON.getEmail().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    private static final String VALID_ADDRESS \u003d TypicalPersons.BENSON.getAddress().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"    private static final String VALID_ROLE \u003d TypicalPersons.BENSON.getRole().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"CJerrong"},"content":"    private static final String VALID_PAIRED_WITH \u003d TypicalPersons.HOON.getPairedWithName().get().toString();","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    private static final String VALID_PAIRED_WITH_ID \u003d TypicalPersons.HOON.getPairedWithId().get().toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalPersons.BENSON.getTags().stream()","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"    private static final String VALID_TIME_SERVED \u003d String.valueOf(TypicalPersons.BENSON.getTimeServed());","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    private static final String VALID_LATEST_LOG_ID \u003d TypicalPersons.BENSON.getLatestLogId().get().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TypicalPersons.BENSON);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        Assertions.assertEquals(TypicalPersons.BENSON, person.toModelType());","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"                new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE,","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"CJerrong"},"content":"                        VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED, VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"CJerrong"},"content":"                VALID_ADDRESS, VALID_ROLE, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"CJerrong"},"content":"                VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"                String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"                        VALID_ROLE, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"CJerrong"},"content":"                        VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"CJerrong"},"content":"                VALID_ROLE, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"CJerrong"},"content":"                VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"                String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"                        VALID_ROLE, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"                        VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"CJerrong"},"content":"                VALID_ROLE, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"CJerrong"},"content":"                VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"                String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"CJerrong"},"content":"                        VALID_ROLE, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"CJerrong"},"content":"                        VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"chaaaaun"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"                VALID_ROLE, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"                VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"chaaaaun"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"chaaaaun"},"content":"                String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"gerteck"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"chaaaaun"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"CJerrong"},"content":"                INVALID_ROLE, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"                VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"gerteck"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"gerteck"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"gerteck"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"gerteck"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"CJerrong"},"content":"                null, VALID_TAGS, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"CJerrong"},"content":"                VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"gerteck"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"gerteck"},"content":"                String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"gerteck"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"chaaaaun"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"                        VALID_ROLE, invalidTags, VALID_PAIRED_WITH, VALID_PAIRED_WITH_ID, VALID_TIME_SERVED,","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"                        VALID_LATEST_LOG_ID);","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"CJerrong":23,"soons1":1,"gerteck":22,"chaaaaun":46,"-":70}},{"path":"src/test/java/scrolls/elder/storage/JsonDatastoreStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalPersons;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"public class JsonDatastoreStorageTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDatastoreStorageTest\");","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    @TempDir","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    public Path testFolder;","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    public void readDatastore_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readDatastore(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"    private Optional\u003cReadOnlyDatastore\u003e readDatastore(String filePath) throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        return new JsonDatastoreStorage(Paths.get(filePath)).readDatastore(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"            : null;","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        assertFalse(readDatastore(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readDatastore(\"notJsonFormatDatastore.json\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"    public void readDatastore_invalidPersonDatastore_throwDataLoadingException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readDatastore(\"invalidPersonDatastore.json\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    public void readDatastore_invalidAndValidPersonDatastore_throwDataLoadingException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readDatastore(\"invalidAndValidPersonDatastore.json\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"    public void readAndSaveDatastore_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDatastore.json\");","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"        Datastore original \u003d TypicalDatastore.getTypicalDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        PersonStore personStore \u003d original.getMutablePersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        JsonDatastoreStorage jsonDatastoreStorage \u003d new JsonDatastoreStorage(filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"chaaaaun"},"content":"        // Save in new file and read back","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"chaaaaun"},"content":"        jsonDatastoreStorage.saveDatastore(original, filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"chaaaaun"},"content":"        ReadOnlyDatastore readBack \u003d jsonDatastoreStorage.readDatastore(filePath).get();","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(original, new Datastore(readBack));","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"        Person hoon \u003d TypicalPersons.HOON;","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"        personStore.addPerson(hoon);","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        personStore.removePerson(TypicalPersons.ALICE);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        jsonDatastoreStorage.saveDatastore(original, filePath);","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"        readBack \u003d jsonDatastoreStorage.readDatastore(filePath).get();","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(original, new Datastore(readBack));","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"chaaaaun"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"chaaaaun"},"content":"        Person ida \u003d TypicalPersons.IDA;","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"chaaaaun"},"content":"        personStore.addPerson(ida);","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"        jsonDatastoreStorage.saveDatastore(original); // file path not specified","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"chaaaaun"},"content":"        readBack \u003d jsonDatastoreStorage.readDatastore().get(); // file path not specified","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(original, new Datastore(readBack));","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"chaaaaun"},"content":"    public void saveDatastore_nullDatastore_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveDatastore(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"chaaaaun"},"content":"     * Saves {@code Datastore} at the specified {@code filePath}.","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"chaaaaun"},"content":"    private void saveDatastore(ReadOnlyDatastore datastore, String filePath) {","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"chaaaaun"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"chaaaaun"},"content":"            new JsonDatastoreStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"chaaaaun"},"content":"                .saveDatastore(datastore, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"chaaaaun"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"chaaaaun"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"chaaaaun"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveDatastore(new Datastore(), null));","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"chaaaaun":113}},{"path":"src/test/java/scrolls/elder/storage/JsonSerializableDatastoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.util.JsonUtil;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"public class JsonSerializableDatastoreTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDatastoreTest\");","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsDatastore.json\");","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonDatastore.json\");","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonDatastore.json\");","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"        JsonSerializableDatastore dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"            JsonSerializableDatastore.class).get();","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        Datastore datastoreFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        Datastore typicalPersonsDatastore \u003d TypicalDatastore.getTypicalDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(datastoreFromFile, typicalPersonsDatastore);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        JsonSerializableDatastore dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"            JsonSerializableDatastore.class).get();","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        JsonSerializableDatastore dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"            JsonSerializableDatastore.class).get();","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableDatastore.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"chaaaaun":47}},{"path":"src/test/java/scrolls/elder/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"        userPrefs.setDatastoreFilePath(Paths.get(\"datastore.json\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chaaaaun":10,"-":113}},{"path":"src/test/java/scrolls/elder/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.storage;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.GuiSettings;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.ReadOnlyDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.UserPrefs;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.TypicalDatastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        JsonDatastoreStorage datastoreStorage \u003d new JsonDatastoreStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        storageManager \u003d new StorageManager(datastoreStorage, userPrefsStorage);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    public void datastoreReadSave() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"         * {@link JsonDatastoreStorage} class.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDatastoreStorageTest} class.","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        Datastore original \u003d TypicalDatastore.getTypicalDatastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        storageManager.saveDatastore(original);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        ReadOnlyDatastore retrieved \u003d storageManager.readDatastore().get();","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        assertEquals(original, new Datastore(retrieved));","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    public void getDatastoreFilePath() {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        assertNotNull(storageManager.getDatastoreFilePath());","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":17,"-":51}},{"path":"src/test/java/scrolls/elder/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"chaaaaun":1,"-":33}},{"path":"src/test/java/scrolls/elder/testutil/EditLogDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"import scrolls.elder.logic.commands.LogEditCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":" * A utility class to help with building EditLogDescriptor objects.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"public class EditLogDescriptorBuilder {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"    private LogEditCommand.EditLogDescriptor descriptor;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder() {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"        descriptor \u003d new LogEditCommand.EditLogDescriptor();","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder(LogEditCommand.EditLogDescriptor descriptor) {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"        this.descriptor \u003d new LogEditCommand.EditLogDescriptor(descriptor);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"     * Returns an {@code EditLogDescriptor} with fields containing {@code log}\u0027s details","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder(Log log) {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"        descriptor \u003d new LogEditCommand.EditLogDescriptor();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"        descriptor.setTitle(log.getLogTitle());","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"        descriptor.setVolunteerIndex(Index.fromZeroBased(log.getVolunteerId()));","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"        descriptor.setBefriendeeIndex(Index.fromZeroBased(log.getBefriendeeId()));","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"        descriptor.setDuration(log.getDuration());","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"        descriptor.setStartDate(log.getStartDate());","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"        descriptor.setRemarks(log.getRemarks());","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"     * Sets the {@code title} of the {@code EditLogDescriptor} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"        descriptor.setTitle(title);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"        return this;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"     * Sets the {@code volunteerIndex} of the {@code EditLogDescriptor} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder withVolunteerIndex(Index volunteerIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"        descriptor.setVolunteerIndex(volunteerIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"        return this;","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"     * Sets the {@code befriendeeIndex} of the {@code EditLogDescriptor} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder withBefriendeeIndex(Index befriendeeIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"        descriptor.setBefriendeeIndex(befriendeeIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"soons1"},"content":"        return this;","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"soons1"},"content":"     * Sets the {@code duration} of the {@code EditLogDescriptor} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder withDuration(int duration) {","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"        descriptor.setDuration(duration);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"soons1"},"content":"        return this;","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"soons1"},"content":"     * Parses the {@code startDate} into a {@code Set\u003cTag\u003e} and set it to the {@code EditLogDescriptor}","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"soons1"},"content":"     * that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder withStartDate(Date startDate) {","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"soons1"},"content":"        descriptor.setStartDate(startDate);","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"soons1"},"content":"        return this;","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"soons1"},"content":"     * Sets the {@code remark} of the {@code EditLogDescriptor} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"soons1"},"content":"    public EditLogDescriptorBuilder withRemarks(String remarks) {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"soons1"},"content":"        descriptor.setRemarks(remarks);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"soons1"},"content":"        return this;","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"soons1"},"content":"    public LogEditCommand.EditLogDescriptor build() {","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"soons1"},"content":"        return descriptor;","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"soons1":89}},{"path":"src/test/java/scrolls/elder/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    private EditCommand.EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"    public EditPersonDescriptorBuilder(EditCommand.EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        this.descriptor \u003d new EditCommand.EditPersonDescriptor(descriptor);","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"gerteck"},"content":"        descriptor.setRole(person.getRole());","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"CJerrong"},"content":"     * Sets the {@code role} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"gerteck"},"content":"    public EditPersonDescriptorBuilder withRole(String roleString) {","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"gerteck"},"content":"        descriptor.setRole(new Role(roleString));","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"CJerrong"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"    public EditCommand.EditPersonDescriptor build() {","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"CJerrong":6,"gerteck":4,"chaaaaun":14,"-":73}},{"path":"src/test/java/scrolls/elder/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.PersonFactory;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"CJerrong"},"content":"import scrolls.elder.model.person.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"import scrolls.elder.model.person.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    public static final String DEFAULT_ID \u003d \"0\";","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"gerteck"},"content":"    public static final String DEFAULT_VOLUNTEER_ROLE_STRING \u003d \"volunteer\";","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"    private int id;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"gerteck"},"content":"    private Role role;","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"    private Optional\u003cName\u003e pairedWithName;","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    private Optional\u003cInteger\u003e pairedWithId;","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"    private int timeServed;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"CJerrong"},"content":"    private Optional\u003cInteger\u003e latestLogId;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        id \u003d -1;","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"gerteck"},"content":"        role \u003d new Role(DEFAULT_VOLUNTEER_ROLE_STRING);","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"CJerrong"},"content":"        pairedWithName \u003d Optional.empty();","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"        pairedWithId \u003d Optional.empty();","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"        timeServed \u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"CJerrong"},"content":"        latestLogId \u003d Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        id \u003d personToCopy.getPersonId();","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"gerteck"},"content":"        role \u003d personToCopy.getRole();","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"CJerrong"},"content":"        pairedWithName \u003d personToCopy.getPairedWithName();","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"chaaaaun"},"content":"        pairedWithId \u003d personToCopy.getPairedWithId();","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"soons1"},"content":"        timeServed \u003d personToCopy.getTimeServed();","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"CJerrong"},"content":"        latestLogId \u003d personToCopy.getLatestLogId();","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"chaaaaun"},"content":"     * Sets the {@code id} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"chaaaaun"},"content":"    public PersonBuilder withId(int id) {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"chaaaaun"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"chaaaaun"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"CJerrong"},"content":"     * Sets the {@code isVolunteer} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"gerteck"},"content":"    public PersonBuilder withRole(String roleString) {","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"gerteck"},"content":"        this.role \u003d new Role(roleString);","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"CJerrong"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"CJerrong"},"content":"     * Sets the {@code pairedWithName} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-22"},{"lineNumber":133,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"CJerrong"},"content":"    public PersonBuilder withPairedWithName(Optional\u003cName\u003e pairedWithName) {","lastModifiedDate":"2024-03-22"},{"lineNumber":135,"author":{"gitId":"CJerrong"},"content":"        this.pairedWithName \u003d pairedWithName;","lastModifiedDate":"2024-03-22"},{"lineNumber":136,"author":{"gitId":"CJerrong"},"content":"        return this;","lastModifiedDate":"2024-03-22"},{"lineNumber":137,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":138,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":139,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":140,"author":{"gitId":"chaaaaun"},"content":"     * Sets the {@code pairedWithId} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":142,"author":{"gitId":"chaaaaun"},"content":"    public PersonBuilder withPairedWithID(Optional\u003cInteger\u003e pairedWithId) {","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"chaaaaun"},"content":"        this.pairedWithId \u003d pairedWithId;","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"soons1"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"soons1"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"soons1"},"content":"     * Sets the {@code timeServed} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"soons1"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"soons1"},"content":"    public PersonBuilder withTimeServed(int timeServed) {","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"soons1"},"content":"        this.timeServed \u003d timeServed;","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"soons1"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"CJerrong"},"content":"     * Sets the {@code latestLogId} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"CJerrong"},"content":"    public PersonBuilder withLatestLogId(Optional\u003cInteger\u003e latestLogId) {","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"CJerrong"},"content":"        this.latestLogId \u003d latestLogId;","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"CJerrong"},"content":"        return this;","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"CJerrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"CJerrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"CJerrong"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"CJerrong"},"content":"     * Builds a Person based on the fields in the person builder","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"CJerrong"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":167,"author":{"gitId":"chaaaaun"},"content":"        return PersonFactory.withIdFromParams(id, name, phone, email, address, role, tags, pairedWithName,","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"CJerrong"},"content":"                pairedWithId, timeServed, latestLogId);","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"soons1":17,"CJerrong":37,"gerteck":7,"chaaaaun":23,"-":87}},{"path":"src/test/java/scrolls/elder/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.AddCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.commands.EditCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.logic.parser.CliSyntax;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.tag.Tag;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":" * A utility class for Person.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"public class PersonUtil {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"chaaaaun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"        sb.append(CliSyntax.PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        sb.append(CliSyntax.PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        sb.append(CliSyntax.PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        sb.append(CliSyntax.PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"gerteck"},"content":"        sb.append(CliSyntax.PREFIX_ROLE + person.getRole().value + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"        );","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    public static String getEditPersonDescriptorDetails(EditCommand.EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(CliSyntax.PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"chaaaaun"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(CliSyntax.PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"chaaaaun"},"content":"        descriptor.getAddress().ifPresent(address -\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"chaaaaun"},"content":"                sb.append(CliSyntax.PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"        descriptor.getRole().ifPresent(role -\u003e sb.append(CliSyntax.PREFIX_ROLE).append(role.value).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"                sb.append(CliSyntax.PREFIX_TAG);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"            } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"                tags.forEach(s -\u003e sb.append(CliSyntax.PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"            }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"gerteck":3,"chaaaaun":58}},{"path":"src/test/java/scrolls/elder/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":1,"-":71}},{"path":"src/test/java/scrolls/elder/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"     * Returns the middle index of an ObservableList.","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    public static Index getMidIndex(ObservableList\u003c?\u003e list) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"chaaaaun"},"content":"        return Index.fromOneBased(list.size() / 2);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"     * Returns the last index of an ObservableList.","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"    public static Index getLastIndex(ObservableList\u003c?\u003e list) {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"        return Index.fromOneBased(list.size());","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chaaaaun":9,"-":38}},{"path":"src/test/java/scrolls/elder/testutil/TypicalDatastore.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":" * A utility class containing application data to be used in tests.","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"public class TypicalDatastore {","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"    private TypicalDatastore() {} // prevents instantiation","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"     * Returns an {@code Datastore} with the typical Stores.","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"    public static Datastore getTypicalDatastore() {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":"        Datastore ds \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":"        ds.getMutablePersonStore().resetData(TypicalPersons.getTypicalPersonStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":"        return ds;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"chaaaaun":19}},{"path":"src/test/java/scrolls/elder/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"    public static final Index INDEX_FOURTH_PERSON \u003d Index.fromOneBased(4);","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"    public static final Index INDEX_FIFTH_PERSON \u003d Index.fromOneBased(5);","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"sdevih"},"content":"    public static final Index INDEX_FIRST_LOG \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"sdevih"},"content":"    public static final Index INDEX_SECOND_LOG \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"sdevih"},"content":"    public static final Index INDEX_THIRD_LOG \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"soons1":2,"chaaaaun":2,"-":10,"sdevih":4}},{"path":"src/test/java/scrolls/elder/testutil/TypicalLogs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"chaaaaun"},"content":"import java.util.Calendar;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"chaaaaun"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"chaaaaun"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"chaaaaun"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.Datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.LogStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.log.Log;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"chaaaaun"},"content":" * A utility class containing a list of {@code Log} objects to be used in tests.","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"chaaaaun"},"content":" * Relies on {@link TypicalPersons} to provide the typical persons.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"chaaaaun"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"chaaaaun"},"content":"public class TypicalLogs {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"chaaaaun"},"content":"     * Log without a log ID","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"chaaaaun"},"content":"    public static final Log LOG_ALICE_TO_ELLE;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"chaaaaun"},"content":"     * Log with a log ID","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"chaaaaun"},"content":"    public static final Log LOG_BENSON_TO_FIONA;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"sdevih"},"content":"    public static final Log LOG_BENSON_TO_FIONA_2;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"chaaaaun"},"content":"    private static final Datastore datastore;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"    static {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"        datastore \u003d new Datastore();","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"chaaaaun"},"content":"        datastore.getMutablePersonStore().resetData(TypicalPersons.getTypicalPersonStore());","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"chaaaaun"},"content":"        Calendar calendar \u003d new GregorianCalendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        calendar.set(2024, Calendar.MARCH, 7);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        final Date marchSeventh \u003d calendar.getTime();","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"CJerrong"},"content":"        LOG_ALICE_TO_ELLE \u003d new Log(datastore, \"House visit\", 0, 4, 2, marchSeventh, \"Was great!\");","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"chaaaaun"},"content":"        calendar.set(2024, Calendar.APRIL, 8);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"chaaaaun"},"content":"        final Date aprilEighth \u003d calendar.getTime();","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"CJerrong"},"content":"        Log tempLog \u003d new Log(datastore, \"Icebreaker\", 1, 5, 3, aprilEighth, \"Was okay.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        LOG_BENSON_TO_FIONA \u003d new Log(1, tempLog);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"sdevih"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"sdevih"},"content":"        calendar.set(2024, Calendar.APRIL, 2);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"sdevih"},"content":"        final Date aprilSecond \u003d calendar.getTime();","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"sdevih"},"content":"        Log tempLog2 \u003d new Log(datastore, \"House visit\", 1, 5, 4, aprilSecond, \"Was good.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"sdevih"},"content":"        LOG_BENSON_TO_FIONA_2 \u003d new Log(2, tempLog2);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"chaaaaun"},"content":"    private TypicalLogs() {} // prevents instantiation","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"chaaaaun"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"     * Returns an {@code LogStore} with all the typical logs.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"chaaaaun"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"chaaaaun"},"content":"    public static LogStore getTypicalLogStore() {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"        LogStore store \u003d new LogStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"chaaaaun"},"content":"        for (Log log : getTypicalLogs()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"chaaaaun"},"content":"            store.addLog(log);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"chaaaaun"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"chaaaaun"},"content":"        return store;","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"chaaaaun"},"content":"    public static List\u003cLog\u003e getTypicalLogs() {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"chaaaaun"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(LOG_ALICE_TO_ELLE, LOG_BENSON_TO_FIONA));","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"chaaaaun"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"chaaaaun"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"CJerrong":2,"chaaaaun":59,"sdevih":6}},{"path":"src/test/java/scrolls/elder/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.testutil;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ROLE_BEFRIENDEE;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_ROLE_VOLUNTEER;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"gerteck"},"content":"import static scrolls.elder.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"sdevih"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.PersonStore;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"sdevih"},"content":"import scrolls.elder.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"gerteck"},"content":"    // VOLUNTEERs (ALICE, BENSON, CARL, DANIEL)","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"chaaaaun"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withId(0).withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"gerteck"},"content":"            .withPhone(\"94351253\").withRole(\"volunteer\")","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"CJerrong"},"content":"            .withTags(\"friends\").withPairedWithName(Optional.of(new Name(\"Elle Meyer\")))","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"CJerrong"},"content":"            .withPairedWithID(Optional.of(4)).withTimeServed(2)","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"CJerrong"},"content":"            .withLatestLogId(Optional.of(0)).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withId(1).withName(\"Benson Meier\")","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"gerteck"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRole(\"volunteer\")","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"CJerrong"},"content":"            .withTags(\"owesMoney\", \"friends\").withTimeServed(3)","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"CJerrong"},"content":"            .withLatestLogId(Optional.of(1)).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"chaaaaun"},"content":"    public static final Person CARL \u003d new PersonBuilder().withId(2).withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRole(\"volunteer\")","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"            .withTimeServed(0).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"chaaaaun"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withId(3).withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"gerteck"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"            .withRole(\"volunteer\").withTimeServed(0).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"gerteck"},"content":"    // BEFRIENDEEs (ELLE, FIONA, GEORGE)","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"chaaaaun"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withId(4).withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"sdevih"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withRole(\"befriendee\")","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"            .withPairedWithName(Optional.of(ALICE.getName())).withPairedWithID(Optional.of(0))","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"CJerrong"},"content":"            .withTimeServed(2).withLatestLogId(Optional.of(0)).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"chaaaaun"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withId(5).withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withRole(\"befriendee\")","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"CJerrong"},"content":"            .withTimeServed(3).withLatestLogId(Optional.of(1)).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"chaaaaun"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withId(6).withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"soons1"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withRole(\"befriendee\")","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"            .withTimeServed(0).withTags(\"exConvict\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"sdevih"},"content":"    public static final Person HOON \u003d new PersonBuilder().withId(7).withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"sdevih"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withRole(\"volunteer\")","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"            .withPairedWithName(Optional.of(new Name(\"Ida Mueller\"))).withPairedWithID(Optional.of(8))","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"            .withTimeServed(0).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"sdevih"},"content":"    public static final Person IDA \u003d new PersonBuilder().withId(8).withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"sdevih"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withRole(\"befriendee\")","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"soons1"},"content":"            .withPairedWithName(Optional.of(HOON.getName())).withPairedWithID(Optional.of(7))","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"            .withTimeServed(0).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"gerteck"},"content":"    // AMY has role VOLUNTEER","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"gerteck"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"soons1"},"content":"            .withRole(VALID_ROLE_VOLUNTEER).withTimeServed(0).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"gerteck"},"content":"    // BOB has role BEFRIENDEE","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"soons1"},"content":"            .withRole(VALID_ROLE_BEFRIENDEE).withTimeServed(0).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"chaaaaun"},"content":"    public static PersonStore getTypicalPersonStore() {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"chaaaaun"},"content":"        PersonStore store \u003d new PersonStore();","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"chaaaaun"},"content":"            store.addPersonWithId(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"chaaaaun"},"content":"        return store;","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"sdevih"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"gerteck"},"content":"    public static List\u003cPerson\u003e getTypicalVolunteerPersons() {","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"gerteck"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL));","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"gerteck"},"content":"    public static List\u003cPerson\u003e getTypicalBefriendeePersons() {","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"gerteck"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ELLE, FIONA, GEORGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"gerteck"},"content":"    public static List\u003cPerson\u003e getPairedPersons() {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"gerteck"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, ELLE));","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"gerteck"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"gerteck"},"content":"    public static List\u003cPerson\u003e getUnpairedPersons() {","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"gerteck"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BENSON, CARL, DANIEL, FIONA, GEORGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"gerteck"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"CJerrong":7,"soons1":13,"gerteck":40,"chaaaaun":14,"-":34,"sdevih":8}},{"path":"src/test/java/scrolls/elder/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chaaaaun":1,"-":44}},{"path":"src/test/java/scrolls/elder/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chaaaaun"},"content":"package scrolls.elder.ui;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.MainApp;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"chaaaaun"},"content":"import scrolls.elder.testutil.Assert;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"chaaaaun"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chaaaaun":15,"-":99}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"\u003c?import scrolls.elder.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chaaaaun":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"chaaaaun"},"content":"\u003c?import scrolls.elder.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"chaaaaun"},"content":"\u003cfx:root type\u003d\"TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chaaaaun":2,"-":5}}]
