[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"# StaffConnect","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-F08-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103-F08-3/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"StaffConnect offers convenience and peace of mind to a struggling student with memory recollection issues.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"This product allows users to easily identify and connect with educators by providing visual cues alongside contact","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"details, supported by a quick and easy filter system. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"# Features:","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"* Quickly add and review contacts","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"* Filter and search your required contacts quickly","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"* Add consultation times to the particular contact","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"* View and manage your meeting times","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"# Getting Started","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":" * Ensure that at least **Java 11 with JavaFx runtime is installed**","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":" * Run the the application with ```java -jar StaffConnect.jar```","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"# Credits","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"StaffConnect is an ongoing software project for a desktop application used for managing contact details.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"* For the detailed documentation of this project, see the **[StaffConnect Product Website](https://ay2324s2-cs2103-f08-3.github.io/tp/)**.","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"* If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"Pluiexo":22,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"mainClassName \u003d \u0027staffconnect.Main\u0027","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"    archiveFileName \u003d \u0027StaffConnect.jar\u0027","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"whitesnowx"},"content":"run {","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"whitesnowx"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsulim":2,"whitesnowx":3,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"### Lim Xiu Jia","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"\u003cimg src\u003d\"images/tsulim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"[[github](https://github.com/tsulim)]","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"[[portfolio](team/tsulim.md)]","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"* Role: Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"### Calista Wong","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"\u003cimg src\u003d\"images/whitesnowx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"[[github](https://github.com/whitesnowx)]","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"[[portfolio](team/whitesnowx)]","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"* Role: Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"* Responsibilities: Documentation and organisation","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"### Li Xinyi","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"\u003cimg src\u003d\"images/iynixil.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"[[github](http://github.com/iynixil)] [[portfolio](team/iynixil.md)]","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"* Responsibilities: Documentation Quality Assurance","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"### Jerry Wang","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"\u003cimg src\u003d\"images/jerrywang0000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"[[github](http://github.com/JerryWang0000)]","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"[[portfolio](team/jerrywang0000)]","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"* Role: Backend Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"* Responsibilities: Development of Functionalities","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"### Norton Ng","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"\u003cimg src\u003d\"images/pluiexo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"[[github](http://github.com/Pluiexo)]","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"[[portfolio](team/pluiexo.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"* Responsibilities: Development of UI/UX and Integration, Lead","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"tsulim":9,"iynixil":4,"JerryWang0000":4,"Pluiexo":5,"whitesnowx":5,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"* This developer guide is adapted from [AB-3 Developer Guide](https://se-education.org/addressbook-level3/DeveloperGuide.html).","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103-F08-3/tp/blob/master/src/main/java/staffconnect/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103-F08-3/tp/blob/master/src/main/java/staffconnect/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103-F08-3/tp/blob/master/src/main/java/staffconnect/ui/Ui.java)","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103-F08-3/tp/blob/master/src/main/java/staffconnect/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103-F08-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103-F08-3/tp/blob/master/src/main/java/staffconnect/logic/Logic.java)","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `StaffConnectParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"tsulim"},"content":"* When called upon to parse a user command, the `StaffConnectParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `StaffConnectParser` returns back as a `Command` object.","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103-F08-3/tp/blob/master/src/main/java/staffconnect/model/Model.java)","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"tsulim"},"content":"* stores the staff book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"tsulim"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `StaffBook`, which `Person` references. This allows `StaffBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"tsulim"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103-F08-3/tp/blob/master/src/main/java/staffconnect/storage/Storage.java)","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"tsulim"},"content":"* can save both staff book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"tsulim"},"content":"* inherits from both `StaffBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"tsulim"},"content":"Classes used by multiple components are in the `staffconnect.commons` package.","lastModifiedDate":"2024-03-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"JerryWang0000"},"content":"### Edit feature","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"JerryWang0000"},"content":"#### How the feature is implemented","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"JerryWang0000"},"content":"The sequence diagram below shows how the edit command `edit 1 p/ 12345678` goes through the `Logic` component.","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"JerryWang0000"},"content":"![Interactions Inside the Logic Component for the `edit 1 p/ 12345678` Command](images/EditSequenceDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"JerryWang0000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `EditCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"JerryWang0000"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"JerryWang0000"},"content":"1. When the user issues the command `edit 1 p/ 12345678`, `Logic` is called upon to execute the command, it is passed to the `StaffConnectParser` object which creates a `EditCommandParser` to parse the arguments for the edit command.","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"JerryWang0000"},"content":"2. The parsing of `EditCommandParser` results in a new `EditCommand` initialized by an index `int` and a `EditPersonDescriptor`. The datails will be explained later.","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"JerryWang0000"},"content":"3. When the `EditCommand` is executed, it creates a new `Person` object according to the `EditPersonDescriptor` passed to it, and replaces the old `Person` object with the new one.","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"JerryWang0000"},"content":"4. The command communicates with the `Model` when it is executed. More specifically, it calls the `updateFilteredPersonList()` method using a `Predicate` object which simply evaluates to true for all `Person`. The intension is that no `Person` will be filtered out in an edit command.","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"JerryWang0000"},"content":"5.  The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`, to show in the `UI` component the success message that the `Person` at the given index is updated with the new information.","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"JerryWang0000"},"content":"The below sequence diagram goes into more detail on how the command is parsed in `EditCommandParser`.","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"JerryWang0000"},"content":"![Interactions Inside EditCommandParser for the `parse(\"1 p/ 12345678\")` Command](images/EditSequenceDiagram-Parser.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"JerryWang0000"},"content":"1. The string is checked to see if if contains tags. If it does, call the corresponding setter method in `EditPersonDescriptor` object. For tags and availabiliies, all values will be updated.","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"JerryWang0000"},"content":"2. If no field is updated, throw a `ParseException` to indicate that no field is updated.","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"JerryWang0000"},"content":"3. The `EditPersonDescriptor` is used to construct an `EditCommand` object, where `EditCommand` object calls `createEditedPerson()` method using the `EditPersonDescriptor` as an argument.","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"JerryWang0000"},"content":"The below activity diagram illustrates the process when a user executes a edit command.","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"JerryWang0000"},"content":"\u003cimg src\u003d\"images/EditActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"JerryWang0000"},"content":"#### Why edit is implemented this way","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"JerryWang0000"},"content":"The command calls `SetPerson()` method in `Model` and then refresh the list of `Person` objects.","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"JerryWang0000"},"content":"Below are some explanations for some implementation details.","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"JerryWang0000"},"content":"Check if `editPersonDescriptor.isAnyFieldEdited()`:","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"JerryWang0000"},"content":"This is to make sure at least one field is modified, or the command will not have any impact on the `Model`.","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"JerryWang0000"},"content":"Call `model.updateFilteredPersonList())` with a `Predicate` that always evaluates to true:","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"JerryWang0000"},"content":"This is to refresh the list of `Person` in `Model`.","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"iynixil"},"content":"### Filter feature","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"iynixil"},"content":"#### How the filter is implemented","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"iynixil"},"content":"The sequence diagram below shows how the filter command `filter f/Computing` goes through the `Logic` component.","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"iynixil"},"content":"![Interactions Inside the Logic Component for the `filter f/Computing` Command](images/FilterSequenceDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"iynixil"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FilterCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"iynixil"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"iynixil"},"content":"1. When the user issues the command `filter f/Computing`, `Logic` is called upon to execute the command, it is passed to the `StaffConnectParser` object which creates a `FilterCommandParser` to parse the arguments for the filter command.","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"iynixil"},"content":"2. This results in a `FilterCommand` object, which then creates a `Predicate` object.","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"JerryWang0000"},"content":"3. The command communicates with the `Model` when it is executed. More specifically, it calls the `updateFilteredPersonList()` method using the `Predicate` object created earlier as the argument. Note that although it is shown as a single step in the diagram (for simplicity), in the code it takes several.","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"iynixil"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`, to show in the `UI` component the number of persons listed with the `Faculty` value of \"Computing\".","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"iynixil"},"content":"The below sequence diagram goes into more detail on how the command is parsed in `FilterCommandParser`.","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"iynixil"},"content":"![Interactions Inside FilterCommandParser for the `parse(\"f/Computing\")` Command](images/FilterSequenceDiagram-Parser.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"iynixil"},"content":"Within `FilterCommandParser`, the filtering criteria is parsed into `PersonHasModulePredicate`, `PersonHasFacultyPredicate`, `PersonHasTagsPredicate`, `PersonHasAvailabilitiesPredicate` objects, which extend from `Predicate`.","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"iynixil"},"content":"These `Predicate` objects are then used to construct a `FilterCommand` object, where `FilterCommand` creates its own `Predicate` object by self-calling the `setPersonPredicate()` method, where the `Predicate` produced is to be used as the argument for the `updateFilteredPersonList()` method.","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"iynixil"},"content":"The below activity diagram illustrates the process when a user executes a filter command.","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"whitesnowx"},"content":"\u003cimg src\u003d\"images/FilterActivityDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"iynixil"},"content":"#### Why filter is implemented this way","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"iynixil"},"content":"The main operation for the filter feature is the `updateFilteredPersonList(Predicate\u003cPerson\u003e predicate)` method in the `Model` component.","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"iynixil"},"content":"The following are some explanations for decisions made in the implementation of the filter feature.","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"iynixil"},"content":"Need for multiple `Predicate` objects:","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"iynixil"},"content":"This is to keep in view for when other commands or enhancements may need the separate attribute predicates.","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"iynixil"},"content":"`FilterCommmandParser` parsing the `Predicate` objects:","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"iynixil"},"content":"This is to prevent `FilterCommand` from taking on more responsibilities (Separation of Concerns).","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"iynixil"},"content":"`FilterCommand` having `setPersonPredicate()` method:","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"iynixil"},"content":"This is so that `FilterCommand` has the required argument of type `Predicate\u003cPerson\u003e` to be used in the `updateFilteredPersonList()` method. Since the `Predicate\u003cPerson\u003e` object is created by chaining the multiple predicates, no parsing is involved to create this `Predicate`.","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"whitesnowx"},"content":"### Sort Feature","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"whitesnowx"},"content":"##### Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"whitesnowx"},"content":"The sort mechanism is facilitated by JavaFX\u0027s `SortedList` within ModelManager, `SortCommand` and `SortCommandParser`. `SortCommandParser` extends the types of command parsers in StaffBookParser, and returns a `SortCommand` to be executed by the LogicManager. This execution also updates the `SortedList` in  Model via ModelManager. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"whitesnowx"},"content":"* `SortCommandParser#parse()`  — Parses user input to identify the attribute to be sorted","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"whitesnowx"},"content":"* `ModelManager#updateSortedPersonList()` — Update the comparator used by SortedList resulting in the data being sorted accordingly","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"whitesnowx"},"content":"Given below is an example usage scenario and how the sort mechanism behaves at each step.","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"whitesnowx"},"content":"Step 1. The user enters **“sort n/”** to sort the list by their name.","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"whitesnowx"},"content":"Step 2. The `LogicManager` takes this command text and calls `StaffBookParser.parseCommand(\"sort n/\")` and identifies the sort command. It then creates a new instance of `SortCommandParser` to `parse(“n/”)` on the attribute.","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"whitesnowx"},"content":"Step 3. `SortCommandParser.parse(“n/”)` then constructs a SortCommand with the appropriate attribute comparator, `NameComparator`.","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"whitesnowx"},"content":"Step 4. The `SortCommand` is returned to Logic manager which calls on its `execute()` to return a `CommandResult()`. During its execution, `ModelManager.updateSortedPersonList(NameComparator)` is invoked which updates the model to show the list of persons being sorted by name.","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"whitesnowx"},"content":"The sequence diagram for executing a **\"sort n/\"** is shown below:","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"whitesnowx"},"content":"\u003cimg src\u003d\"images/SortSequenceDiagram.png\" width\u003d\"850\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"whitesnowx"},"content":"The following activity diagram summarizes what happens when a user executes a new sort command:","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"whitesnowx"},"content":"\u003cimg src\u003d\"images/SortActivityDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"whitesnowx"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"whitesnowx"},"content":"**Aspect: Determining order of sorting of an attribute:**","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":270,"author":{"gitId":"whitesnowx"},"content":"* **Current Design:** Use a configured comparator for each attribute in ascending order.","lastModifiedDate":"2024-03-28"},{"lineNumber":271,"author":{"gitId":"whitesnowx"},"content":"    * Pros: Controlled and more simple for user.","lastModifiedDate":"2024-03-28"},{"lineNumber":272,"author":{"gitId":"whitesnowx"},"content":"    * Cons: Less flexibility and unable to do more advance sorting such as multiple attributes. We must implement a comparator for each attribute used for sorting.","lastModifiedDate":"2024-03-28"},{"lineNumber":273,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":274,"author":{"gitId":"whitesnowx"},"content":"* **Alternative 1:** Get order of sorting from user, prompting for an input in the form of toCompare.","lastModifiedDate":"2024-03-28"},{"lineNumber":275,"author":{"gitId":"whitesnowx"},"content":"    * Pros: More functionality and more suited to the user\u0027s needs.","lastModifiedDate":"2024-03-28"},{"lineNumber":276,"author":{"gitId":"whitesnowx"},"content":"    * Cons: Harder to implement and guide user to use, may have more leeway for error. User unlikely to use this advancement.","lastModifiedDate":"2024-03-28"},{"lineNumber":277,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":278,"author":{"gitId":"whitesnowx"},"content":"**Aspect: Number of Attribute:**","lastModifiedDate":"2024-03-28"},{"lineNumber":279,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":280,"author":{"gitId":"whitesnowx"},"content":"* **Current Design:** Only 1 attribute per sort.","lastModifiedDate":"2024-03-28"},{"lineNumber":281,"author":{"gitId":"whitesnowx"},"content":"    * Pros: Easy to implement, controlled and less likely to be used incorrectly. This increase ease of use for users.","lastModifiedDate":"2024-03-28"},{"lineNumber":282,"author":{"gitId":"whitesnowx"},"content":"    * Cons: Limited sorting and lesser functionality.","lastModifiedDate":"2024-03-28"},{"lineNumber":283,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":284,"author":{"gitId":"whitesnowx"},"content":"* **Alternative 1:** 1 or more attribute per sort.","lastModifiedDate":"2024-03-28"},{"lineNumber":285,"author":{"gitId":"whitesnowx"},"content":"    * Pros: More functionality, more advanced view of contacts.","lastModifiedDate":"2024-03-28"},{"lineNumber":286,"author":{"gitId":"whitesnowx"},"content":"    * Cons: Harder to implement, order of prefix affects priority of attribute and have to specify to user.","lastModifiedDate":"2024-03-28"},{"lineNumber":287,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":288,"author":{"gitId":"JerryWang0000"},"content":"### Find feature","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"JerryWang0000"},"content":"#### How the feature is implemented","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"JerryWang0000"},"content":"The sequence diagram below explains how the find command `find Alex` goes through the `Logic` component.","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"JerryWang0000"},"content":"![Interactions Inside the Logic Component for the `find Alex` Command](images/FindSequenceDiagram.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"JerryWang0000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"JerryWang0000"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"JerryWang0000"},"content":"1. When user types in `find Alex`, it is passed to `StaffConnectParser`.","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"JerryWang0000"},"content":"2. `StaffconnectParser` then creates a `FindCommandParser` that will parse `Alex` to create a `FindCommand` which utilizes a predicate judge whether `Alex` is contained in the person\u0027s name. ","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"JerryWang0000"},"content":"3. In `FindCommand`, `Model` executes `updateFilteredPersonList()` method using the predicate mentioned above.","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"JerryWang0000"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`, to show in the `UI` component the number of persons listed with `Alex` in the name.","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"JerryWang0000"},"content":"The below sequence diagram goes into more detail on how the command is parsed in `EditCommandParser`.","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"JerryWang0000"},"content":"![Interactions Inside FindCommandParser for the `parse(\"f/Computing\")` Command](images/FindSequenceDiagram-Parser.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"JerryWang0000"},"content":"1. Within `FindCommandParser`, the command string is first trimmed and checked whether it is empty, then splitted into an string array by space characters.","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"JerryWang0000"},"content":"2. `FindCommandParser` then constructs a predicate to test whether the names of `Person` contain any one of the strings in the array mentioned above. This predicate is passed as an argument for the constructor of `FindCommand`.","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"JerryWang0000"},"content":"The below activity diagram illustrates the process when a user executes a find command.","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"JerryWang0000"},"content":"\u003cimg src\u003d\"images/FindActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"JerryWang0000"},"content":"#### Why find is implemented this way","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"JerryWang0000"},"content":"The main operation for the find feature is the `updateFilteredPersonList(Predicate\u003cPerson\u003e predicate)` method in the `Model` component.","lastModifiedDate":"2024-03-29"},{"lineNumber":318,"author":{"gitId":"JerryWang0000"},"content":"Below are some explanations for the special considerations in the implementation.","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"JerryWang0000"},"content":"`FindCommmandParser` parsing the `Predicate` objects:","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"JerryWang0000"},"content":"This is to prevent `FindCommand` from taking on more responsibilities (Separation of Concerns).","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"tsulim"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedStaffBook`. It extends `StaffBook` with an undo/redo history, stored internally as an `staffBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-27"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"tsulim"},"content":"* `VersionedStaffBook#commit()` — Saves the current staff book state in its history.","lastModifiedDate":"2024-03-27"},{"lineNumber":330,"author":{"gitId":"tsulim"},"content":"* `VersionedStaffBook#undo()` — Restores the previous staff book state from its history.","lastModifiedDate":"2024-03-27"},{"lineNumber":331,"author":{"gitId":"tsulim"},"content":"* `VersionedStaffBook#redo()` — Restores a previously undone staff book state from its history.","lastModifiedDate":"2024-03-27"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"tsulim"},"content":"These operations are exposed in the `Model` interface as `Model#commitStaffBook()`, `Model#undoStaffBook()` and `Model#redoStaffBook()` respectively.","lastModifiedDate":"2024-03-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"tsulim"},"content":"Step 1. The user launches the application for the first time. The `VersionedStaffBook` will be initialized with the initial staff book state, and the `currentStatePointer` pointing to that single staff book state.","lastModifiedDate":"2024-03-27"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"tsulim"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the staff book. The `delete` command calls `Model#commitStaffBook()`, causing the modified state of the staff book after the `delete 5` command executes to be saved in the `staffBookStateList`, and the `currentStatePointer` is shifted to the newly inserted staff book state.","lastModifiedDate":"2024-03-27"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"tsulim"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitStaffBook()`, causing another modified staff book state to be saved into the `staffBookStateList`.","lastModifiedDate":"2024-03-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"tsulim"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitStaffBook()`, so the staff book state will not be saved into the `staffBookStateList`.","lastModifiedDate":"2024-03-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"tsulim"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoStaffBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous staff book state, and restores the staff book to that state.","lastModifiedDate":"2024-03-27"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"tsulim"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial StaffBook state, then there are no previous StaffBook states to restore. The `undo` command uses `Model#canUndoStaffBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-03-27"},{"lineNumber":358,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":372,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":374,"author":{"gitId":"tsulim"},"content":"The `redo` command does the opposite — it calls `Model#redoStaffBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the staff book to that state.","lastModifiedDate":"2024-03-27"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"tsulim"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `staffBookStateList.size() - 1`, pointing to the latest staff book state, then there are no undone StaffBook states to restore. The `redo` command uses `Model#canRedoStaffBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-03-27"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"tsulim"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the staff book, such as `list`, will usually not call `Model#commitStaffBook()`, `Model#undoStaffBook()` or `Model#redoStaffBook()`. Thus, the `staffBookStateList` remains unchanged.","lastModifiedDate":"2024-03-27"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"tsulim"},"content":"Step 6. The user executes `clear`, which calls `Model#commitStaffBook()`. Since the `currentStatePointer` is not pointing at the end of the `staffBookStateList`, all staff book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-03-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"tsulim"},"content":"* **Alternative 1 (current choice):** Saves the entire staff book.","lastModifiedDate":"2024-03-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":412,"author":{"gitId":"Pluiexo"},"content":"### Meeting","lastModifiedDate":"2024-03-27"},{"lineNumber":413,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":414,"author":{"gitId":"Pluiexo"},"content":"Meeting is feature that allows the user to keep track of any events they may have with the particular contact. It contains the description of the meeting event with the date and time it would occur.","lastModifiedDate":"2024-03-27"},{"lineNumber":415,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":416,"author":{"gitId":"Pluiexo"},"content":"#### Implementation","lastModifiedDate":"2024-03-27"},{"lineNumber":417,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":418,"author":{"gitId":"Pluiexo"},"content":"Meeting contains two attributes ```MeetingDescription``` and ```MeetingDateTime``` class. ```MeetingDescription```","lastModifiedDate":"2024-03-27"},{"lineNumber":419,"author":{"gitId":"Pluiexo"},"content":"is used to handle any valid description of the meeting with only alphanumeric values, while the ```MeetingDateTime```","lastModifiedDate":"2024-03-27"},{"lineNumber":420,"author":{"gitId":"Pluiexo"},"content":"is used to handle any valid date time values. Each of this meeting are stored in a list data class ```MeetingList``` that","lastModifiedDate":"2024-03-27"},{"lineNumber":421,"author":{"gitId":"Pluiexo"},"content":"contains each of the meetings related to each other stored in an ```ObservableList```. The ``` MeetingManager ``` is","lastModifiedDate":"2024-03-27"},{"lineNumber":422,"author":{"gitId":"Pluiexo"},"content":"used to manage any operations that require viewing or sorting of meetings from the ```MeetingList``` class.","lastModifiedDate":"2024-03-27"},{"lineNumber":423,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":424,"author":{"gitId":"Pluiexo"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-27"},{"lineNumber":425,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":426,"author":{"gitId":"Pluiexo"},"content":"**Aspect: How the meetings are stored :**","lastModifiedDate":"2024-03-27"},{"lineNumber":427,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":428,"author":{"gitId":"Pluiexo"},"content":"* **Alternative 1 (current choice):** Store meetings in an ObservableList.","lastModifiedDate":"2024-03-27"},{"lineNumber":429,"author":{"gitId":"Pluiexo"},"content":"    * Pros: Better segregation of the OOP functionalities, and good integration with the UI ListView.","lastModifiedDate":"2024-03-27"},{"lineNumber":430,"author":{"gitId":"Pluiexo"},"content":"    * Cons: Larger code complexity.","lastModifiedDate":"2024-03-27"},{"lineNumber":431,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":432,"author":{"gitId":"Pluiexo"},"content":"* **Alternative 2:** Store meetings in a Set.","lastModifiedDate":"2024-03-27"},{"lineNumber":433,"author":{"gitId":"Pluiexo"},"content":"    * Pros: Easier implementation.","lastModifiedDate":"2024-03-27"},{"lineNumber":434,"author":{"gitId":"Pluiexo"},"content":"    * Cons: There is an efficiency gap as each element has to be placed into a list before it can be shown to the UI ListView.","lastModifiedDate":"2024-03-27"},{"lineNumber":435,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":436,"author":{"gitId":"tsulim"},"content":"### Fav/unfav feature","lastModifiedDate":"2024-04-02"},{"lineNumber":437,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":438,"author":{"gitId":"tsulim"},"content":"The feature enables us to sets/remove a particular contact using an index as favourite.","lastModifiedDate":"2024-04-02"},{"lineNumber":439,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":440,"author":{"gitId":"tsulim"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":441,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":442,"author":{"gitId":"tsulim"},"content":"The Fav/Unfav feature is implemented via the `FavCommand` and `UnfavCommand`, which is supported by the `FavCommandParser` and `UnfavCommandParser` respectively.","lastModifiedDate":"2024-04-02"},{"lineNumber":443,"author":{"gitId":"tsulim"},"content":"The `FavCommandParser` and `UnfavCommandParser` implements the `Parser` interface.","lastModifiedDate":"2024-04-02"},{"lineNumber":444,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":445,"author":{"gitId":"tsulim"},"content":"1. `LogicManager` receives the user input which is parsed by the `StaffConnectParser`.","lastModifiedDate":"2024-03-29"},{"lineNumber":446,"author":{"gitId":"tsulim"},"content":"2. After splitting the user input into `commandWord` and `arguments` based on the regex pattern of the user input, the `StaffConnectParser` invokes the `FavCommandParser`/`UnfavCommandParser` based on the `commandWord`, calling the method `parse` with `arguments` as the method arguments","lastModifiedDate":"2024-04-02"},{"lineNumber":447,"author":{"gitId":"tsulim"},"content":"3. `FavCommandParser`/`UnfavCommandParser` takes in the `args` string and parse it into with the static `ParserUtil#parseIndex(args)` function. If the `INDEX` format is invalid, a `ParseException` will be thrown.","lastModifiedDate":"2024-04-02"},{"lineNumber":448,"author":{"gitId":"tsulim"},"content":"4. `FavCommandParser`/`UnfavCommandParser` then creates the `FavCommand`/`UnfavCommand` and returns it. ","lastModifiedDate":"2024-04-02"},{"lineNumber":449,"author":{"gitId":"tsulim"},"content":"5. The `LogicManager` executes the `FavCommand`/`UnfavCommand`, which creates a `Person` with the `Favourite` attribute set as `true`/`false` respectively and updates the model with this new `Person`.","lastModifiedDate":"2024-04-02"},{"lineNumber":450,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":451,"author":{"gitId":"tsulim"},"content":"The following sequence diagram shows how the `fav` command works:","lastModifiedDate":"2024-04-02"},{"lineNumber":452,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":453,"author":{"gitId":"tsulim"},"content":"![Fav Command Sequence Diagram](images/FavSequenceDiagram.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":454,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":455,"author":{"gitId":"tsulim"},"content":"Similarly, how the `unfav` command works is shown below:","lastModifiedDate":"2024-04-02"},{"lineNumber":456,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":457,"author":{"gitId":"tsulim"},"content":"![Unfav Command Sequence Diagram](images/UnfavSequenceDiagram.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":465,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":466,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":467,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"iynixil"},"content":"Bob is a 22 year old NUS SOC student who often struggles with finding details about his professors\u0027 and tutors\u0027 consultation hours.","lastModifiedDate":"2024-03-06"},{"lineNumber":478,"author":{"gitId":"iynixil"},"content":"He prefers certain professors and tutors but often misplaces their contact information","lastModifiedDate":"2024-03-06"},{"lineNumber":479,"author":{"gitId":"iynixil"},"content":"as such information can be hard to find online. He also has difficulty identifying his professors and changing tutors.","lastModifiedDate":"2024-03-06"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"iynixil"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-06"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"iynixil"},"content":"StaffConnect offers convenience and efficiency for a forgetful tech-savvy student.","lastModifiedDate":"2024-03-06"},{"lineNumber":484,"author":{"gitId":"iynixil"},"content":"StaffConnect allows users to easily identify and connect with educators by providing visual cues alongside their contact details, supported by an easy-to-use filtering system.","lastModifiedDate":"2024-03-06"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"| Priority | As a …​                                     | I want to …​                    | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"iynixil"},"content":"| `* * *`  | sociable user                              | save a contact\u0027s name, email, phone number, title in one line | save time per entry                     |","lastModifiedDate":"2024-03-06"},{"lineNumber":493,"author":{"gitId":"iynixil"},"content":"| `* * *`  | disorganised student                       | store a professor\u0027s name       | recall how to address the professor                                    |","lastModifiedDate":"2024-03-06"},{"lineNumber":494,"author":{"gitId":"iynixil"},"content":"| `* * *`  | forgetful user                             | store a professor\u0027s faculty    | see the faculty that a professor belongs to                            |","lastModifiedDate":"2024-03-06"},{"lineNumber":495,"author":{"gitId":"iynixil"},"content":"| `* * *`  | student who get lost easily                | view the locations of my meetings/classes | search the locations for my meetings easily                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":496,"author":{"gitId":"iynixil"},"content":"| `* * *`  | disorganised student                       | store a professor\u0027s consultation hours | arrange times to meet my professor for consultation            |","lastModifiedDate":"2024-03-06"},{"lineNumber":497,"author":{"gitId":"iynixil"},"content":"| `* * *`  | slow reader                                | filter through contact entry by their name | not waste time in finding a specific contact/s and access their info easily |","lastModifiedDate":"2024-03-06"},{"lineNumber":498,"author":{"gitId":"iynixil"},"content":"| `* * *`  | slow reader                                | filter through contact entry by their availability | not waste time in finding a specific contact/s and access their info easily |","lastModifiedDate":"2024-03-06"},{"lineNumber":499,"author":{"gitId":"iynixil"},"content":"| `* * *`  | slow reader                                | filter through contact entry by their module | not waste time in finding a specific contact/s and access their info easily |","lastModifiedDate":"2024-03-06"},{"lineNumber":500,"author":{"gitId":"iynixil"},"content":"| `* * *`  | disorganised student                       | store the modules a professor is teaching  | contact the professors who teach a module which I am currently taking       |","lastModifiedDate":"2024-03-06"},{"lineNumber":501,"author":{"gitId":"iynixil"},"content":"| `* * *`  | slow reader                                | filter through contact entry by their module | not waste time in finding a specific contact/s and access their info easily |","lastModifiedDate":"2024-03-06"},{"lineNumber":502,"author":{"gitId":"iynixil"},"content":"| `* * *`  | forgetful user                             | filter the professors by their faculty or the course they teach | not waste time in finding a specific contact/s and access their info easily |","lastModifiedDate":"2024-03-06"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"whitesnowx"},"content":"(For all use cases below, the **System** is the `StaffConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-06"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"whitesnowx"},"content":"**Use case: Add a person**","lastModifiedDate":"2024-03-06"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"whitesnowx"},"content":"1. StaffConnect shows a list of persons","lastModifiedDate":"2024-03-06"},{"lineNumber":515,"author":{"gitId":"whitesnowx"},"content":"2. User requests to add a new person","lastModifiedDate":"2024-03-06"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":517,"author":{"gitId":"whitesnowx"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":519,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":521,"author":{"gitId":"whitesnowx"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":522,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":523,"author":{"gitId":"whitesnowx"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":524,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":525,"author":{"gitId":"whitesnowx"},"content":"**Use case: Filter the list**","lastModifiedDate":"2024-03-06"},{"lineNumber":526,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":527,"author":{"gitId":"whitesnowx"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":528,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":529,"author":{"gitId":"whitesnowx"},"content":"1. StaffConnect shows a list of persons","lastModifiedDate":"2024-03-06"},{"lineNumber":530,"author":{"gitId":"whitesnowx"},"content":"2. User requests to filter the list by a specific attribute","lastModifiedDate":"2024-03-06"},{"lineNumber":531,"author":{"gitId":"whitesnowx"},"content":"3. StaffConnect shows a filtered list of persons","lastModifiedDate":"2024-03-06"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"whitesnowx"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":538,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":539,"author":{"gitId":"whitesnowx"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":540,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"whitesnowx"},"content":"**Use case: Sort the list**","lastModifiedDate":"2024-03-06"},{"lineNumber":546,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":547,"author":{"gitId":"whitesnowx"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":548,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":549,"author":{"gitId":"whitesnowx"},"content":"1. StaffConnect shows a list of persons","lastModifiedDate":"2024-03-06"},{"lineNumber":550,"author":{"gitId":"whitesnowx"},"content":"2. User requests to sort the list by a specific attribute","lastModifiedDate":"2024-03-06"},{"lineNumber":551,"author":{"gitId":"whitesnowx"},"content":"3. StaffConnect shows a sorted list of persons","lastModifiedDate":"2024-03-06"},{"lineNumber":552,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":553,"author":{"gitId":"whitesnowx"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":554,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":555,"author":{"gitId":"whitesnowx"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"whitesnowx"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"whitesnowx"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":560,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":561,"author":{"gitId":"whitesnowx"},"content":"**Use case: Delete a person**","lastModifiedDate":"2024-03-06"},{"lineNumber":562,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":563,"author":{"gitId":"whitesnowx"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":564,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":565,"author":{"gitId":"whitesnowx"},"content":"1. StaffConnect shows a list of persons","lastModifiedDate":"2024-03-06"},{"lineNumber":566,"author":{"gitId":"whitesnowx"},"content":"2. User requests to delete a specific person in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":567,"author":{"gitId":"tsulim"},"content":"3. StaffConnect deletes the person","lastModifiedDate":"2024-03-27"},{"lineNumber":568,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":569,"author":{"gitId":"whitesnowx"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":570,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":571,"author":{"gitId":"whitesnowx"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":572,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":573,"author":{"gitId":"whitesnowx"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":574,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":575,"author":{"gitId":"whitesnowx"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":576,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":577,"author":{"gitId":"whitesnowx"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":578,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":579,"author":{"gitId":"whitesnowx"},"content":"    * 2a1. StaffConnect shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":580,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":581,"author":{"gitId":"whitesnowx"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":582,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":583,"author":{"gitId":"whitesnowx"},"content":"**Use case: Edit a person**","lastModifiedDate":"2024-03-06"},{"lineNumber":584,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":585,"author":{"gitId":"whitesnowx"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":586,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":587,"author":{"gitId":"whitesnowx"},"content":"1. StaffConnect shows a list of persons","lastModifiedDate":"2024-03-06"},{"lineNumber":588,"author":{"gitId":"whitesnowx"},"content":"2. User requests to edit a specific person in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":589,"author":{"gitId":"tsulim"},"content":"3. StaffConnect edits the person","lastModifiedDate":"2024-03-27"},{"lineNumber":590,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":591,"author":{"gitId":"whitesnowx"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":592,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":593,"author":{"gitId":"whitesnowx"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":594,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":595,"author":{"gitId":"whitesnowx"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":596,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":597,"author":{"gitId":"whitesnowx"},"content":"  Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":598,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":599,"author":{"gitId":"whitesnowx"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":601,"author":{"gitId":"whitesnowx"},"content":"    * 2a1. StaffConnect shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":603,"author":{"gitId":"whitesnowx"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"JerryWang0000"},"content":"2. Should be able to answer a user\u0027s prompt within 1 second.","lastModifiedDate":"2024-03-07"},{"lineNumber":611,"author":{"gitId":"JerryWang0000"},"content":"3. Should require less computational resources to allow users with older hardware can use the app without trouble.","lastModifiedDate":"2024-03-07"},{"lineNumber":612,"author":{"gitId":"JerryWang0000"},"content":"4. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":613,"author":{"gitId":"JerryWang0000"},"content":"5. Should be able to provide error messages when a user does not type in expected prompts.","lastModifiedDate":"2024-03-07"},{"lineNumber":614,"author":{"gitId":"JerryWang0000"},"content":"6. Should be able to store the users\u0027 information securely without leakage.","lastModifiedDate":"2024-03-07"},{"lineNumber":615,"author":{"gitId":"JerryWang0000"},"content":"7. Should provide understandable and informative responses whenever a user provides a prompt.","lastModifiedDate":"2024-03-07"},{"lineNumber":616,"author":{"gitId":"JerryWang0000"},"content":"8. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-07"},{"lineNumber":617,"author":{"gitId":"JerryWang0000"},"content":"9. A user without much experience in admin commands should be able to handle the usage in rather short time.","lastModifiedDate":"2024-03-07"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"JerryWang0000"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS, with versions that support Java 11","lastModifiedDate":"2024-03-07"},{"lineNumber":624,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"JerryWang0000"},"content":"* **Users\u0027 Information**: Same as above","lastModifiedDate":"2024-03-07"},{"lineNumber":626,"author":{"gitId":"JerryWang0000"},"content":"* **Error Message**: A prompt printed to the user that the program execution cannot run normally and specifies the most possible cause","lastModifiedDate":"2024-03-07"},{"lineNumber":627,"author":{"gitId":"JerryWang0000"},"content":"* **MSS**: Main Success Scenario","lastModifiedDate":"2024-03-07"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsulim":53,"iynixil":57,"JerryWang0000":88,"Pluiexo":24,"whitesnowx":123,"-":335}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"whitesnowx":2,"-":29}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"   1. Run the `staffconnect.Main` and try a few commands.","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"tsulim":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"   e.g. `staffconnect.commons.StringUtilTest`","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"   e.g. `staffconnect.storage.StorageManagerTest`","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"   e.g. `staffconnect.logic.LogicManagerTest`","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"tsulim":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"StaffConnect (SC) is a **desktop app for managing contacts of Professors and Tutors, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SC can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"2. Download the latest `StaffConnect.jar` from [here](https://github.com/AY2324S2-CS2103-F08-3/tp/).","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your StaffConnect application.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar StaffConnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com m/CS2103 f/Computing v/John street, block 123, #01-01` : Adds a contact named `John Doe` to the contacts list.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"Adds a person to the contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL m/MODULE f/FACULTY v/VENUE [t/TAG]…​ [a/AVAILABILITY]…​`","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"A person can have any number of tags and availabilities (including 0)","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"JerryWang0000"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com f/Computing v/John street, block 123, #01-01 m/CS2103`","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"whitesnowx"},"content":"* `add n/Betsy Crowe t/friend m/CS2103T e/betsycrowe@example.com f/Computing v/Newgate Prison p/1234567 t/criminal a/monday 11:00 12:00 a/wednesday 14:00 16:00`","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"Shows a list of all persons in the contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"Edits an existing person in the contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [m/MODULE] [f/FACULTY] [v/VENUE] [t/TAG]…​ [a/AVAILABILITY]…​`","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"tsulim"},"content":"* When editing availabilities, the existing availabilites of the person will be removed i.e adding of availabilities is not cumulative.","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"* You can remove all the person’s availabilities by typing `a/` without","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"  specifying any availabilities after it.","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"### Filtering persons by attribute: `filter`","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"Filters persons whose module, faculty, tags or availabilities match the given filtering criteria.","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"format: `filter [m/MODULE] [f/FACULTY] [t/TAG]… [a/AVAILABILITY]…`","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"iynixil"},"content":"* Only module, faculty, tags and availabilities can be filtered.","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"iynixil"},"content":"* The filter only accepts a single module to filter from.","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"iynixil"},"content":"* The filter only accepts a single faculty to filter from.","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"iynixil"},"content":"* The filter only accepts valid values for faculty. e.g `faculty of business` is an invalid faculty value.","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"* The filter accepts single or multiple tags to filter from.","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"* The filter accepts single or multiple availabilities to filter from.","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"iynixil"},"content":"* The filter only accepts whole values for the available filtering criteria. e.g `mon` does not match `mon 12:00 13:00`, `cs` does not match `CS2030S`","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"iynixil"},"content":"* The filter is case-insensitive for the available filtering criteria. e.g `tUTOR` will match `tutor`, `cs2100` will match `CS2100`","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"iynixil"},"content":"* Persons matching all fields will be returned (i.e. `AND` search).","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"iynixil"},"content":"  e.g. `filter m/CS2030S f/Computing` will return `Charlotte Oliveiro`","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"iynixil"},"content":"Examples:","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"iynixil"},"content":"* `filter m/CS1101S` returns `Alex Yeoh`","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"iynixil"},"content":"* `filter t/tutor` returns `Bernice Yu`, `Irfan Ibrahim`\u003cbr\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"iynixil"},"content":"  ![result for \u0027filter t/tutor\u0027](images/filterTutorTagResult.png)","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"whitesnowx"},"content":"### Sorting persons by attribute: `sort`","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"whitesnowx"},"content":"Sorts the list of persons based on specified attribute.","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"whitesnowx"},"content":"Format: `sort [ATTRIBUTE]`","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"whitesnowx"},"content":"* By default, sorting is done in alphanumeric order.","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"whitesnowx"},"content":"* The order of character priority would be letters (A-Z), numbers (0-9), special characters (!@#$%^\u0026*).","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"whitesnowx"},"content":"* The capitalisation of the letters do not affect their priority such that `Aaron` will have same priority as `aaron`.","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"whitesnowx"},"content":"* For attribute with exact same values, the tie-breaker is determined by their added order.","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"whitesnowx"},"content":"* `[ATTRIBUTE]` is to be noted by their prefix. e.g `name` will be `n/`.","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"whitesnowx"},"content":"Examples:","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"whitesnowx"},"content":"* `sort n/` returns person by ascending names `Alex`, `Bernice` followed by `Charlotte`","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"whitesnowx"},"content":"* `sort p/` returns person by ascending phone numbers `87438807`, `91031282` followed by `92492021`\u003cbr\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"whitesnowx"},"content":"  ![result for \u0027sort p/\u0027](images/sortByPhoneNumberResult.png)","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"Pluiexo"},"content":"### Adding a meeting to a person: `meeting`","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"Pluiexo"},"content":"Add a meeting to a person based on specified description and date.","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"Pluiexo"},"content":"Format: `meeting INDEX [d/DESCRIPTION] [s/DATETIME]`","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"Pluiexo"},"content":"* Adds a meeting to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3,…​ and tally within range index of the displayed list.","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"Pluiexo"},"content":"* Both of the fields must be provided and valid values.","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"Pluiexo"},"content":"* A valid `DESCRIPTION` of the meeting can only contain latin alphanumeric characters.","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"Pluiexo"},"content":"* A valid `DATETIME` of the meeting can only contain valid date and 24 hour time values with a single space to separate the date and time in the format of `dd/MM/yyyy HH:mm`.","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"Pluiexo"},"content":"* Duplicate meetings with the same `DESCRIPTION` and `DATETIME` in the same person is not allowed.","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"Pluiexo"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"Pluiexo"},"content":"* `meeting 1 d/ Meet for finals preparation s/ 12/04/2024 18:00` adds a meeting to the first person with the description of `Meet for finals preparation` and the date and time of `12/04/2024 18:00`","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"Pluiexo"},"content":"* `meeting 2 d/ Meet for practical exam s/ 20/04/2024 15:00` adds a meeting to the second person with the description of `Meet for practical exam` and the date and time of `20/04/2024 15:00`","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"Pluiexo"},"content":"  ![result for \u0027meeting 1 d/ Meet for finals preparation s/ 12/04/2024 18:00\u0027](images/addMeetingResult.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Pluiexo"},"content":"Deletes the specified person from the contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"Pluiexo"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"tsulim"},"content":"### Setting a person as favourite: `fav`","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"tsulim"},"content":"Sets the specified person from the contacts as favourite.","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"tsulim"},"content":"Format: `fav INDEX`","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"tsulim"},"content":"* Sets the person at the specified `INDEX`.","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"tsulim"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"tsulim"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"tsulim"},"content":"Examples:","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"tsulim"},"content":"* `list` followed by `fav 2` sets the 2nd person as favourite in the contacts.","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"tsulim"},"content":"* `find Betsy` followed by `fav 1` sets the 1st person as favourite in the results of the `find` command.","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"tsulim"},"content":"### Removes a person as favourite: `unfav`","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"tsulim"},"content":"Removes the specified person from the contacts as favourite.","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"tsulim"},"content":"Format: `unfav INDEX`","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"tsulim"},"content":"* Removes the person at the specified `INDEX`.","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"tsulim"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"tsulim"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-26"},{"lineNumber":227,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":228,"author":{"gitId":"tsulim"},"content":"Examples:","lastModifiedDate":"2024-03-26"},{"lineNumber":229,"author":{"gitId":"tsulim"},"content":"* `list` followed by `unfav 2` removes the 2nd person as favourite in the contacts.","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"tsulim"},"content":"* `find Betsy` followed by `unfav 1` removes the 1st person as favourite in the results of the `find` command.","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":232,"author":{"gitId":"JerryWang0000"},"content":"### Refresh and clear all outdated meetings: `refresh`","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"JerryWang0000"},"content":"Deletes all meetings that start before the very moment the user types in the command and enters.","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"JerryWang0000"},"content":"Format: `refresh`","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"JerryWang0000"},"content":"* The deleted meetings will be explicitly printed again to the use, specifying content of the meeting and who \"owns\" the meeting.","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"JerryWang0000"},"content":"* If no meetings are deleted, there will no error thrown. Instead, a prompt will be given to user that no meeting is deleted.","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"JerryWang0000"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"JerryWang0000"},"content":"* If there is a meeting `French Revolution` that happened in `14/07/1789 12:00`, when the user types in `refresh`, it will be deleted.","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"JerryWang0000"},"content":"* If there is a meeting `Future Meeting` that will happen in `31/12/2999 12:00`, when the user types in `refresh`, it will not be deleted.","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"Pluiexo"},"content":"Clears all entries from the contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"Pluiexo"},"content":"StaffConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"tsulim"},"content":"StaffConnect data are saved automatically as a JSON file `[JAR file location]/data/staffconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":266,"author":{"gitId":"Pluiexo"},"content":"If your changes to the data file makes its format invalid, StaffConnect will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":267,"author":{"gitId":"Pluiexo"},"content":"Furthermore, certain edits can cause the StaffConnect to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"Pluiexo"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous StaffConnect home folder.","lastModifiedDate":"2024-03-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":282,"author":{"gitId":"JerryWang0000"},"content":"2. **Restrictions on the valid user input of `Faculty` values**: For the current version, a valid user input for `Faculty` with prefix `f/` can only match exactly the same string as suggested below. Cases can be ignored though.","lastModifiedDate":"2024-03-17"},{"lineNumber":283,"author":{"gitId":"JerryWang0000"},"content":"   - Faculty of Arts of Social Sciences; Arts and Social Sciences; FASS","lastModifiedDate":"2024-03-18"},{"lineNumber":284,"author":{"gitId":"JerryWang0000"},"content":"   - Business School; Business; Biz School; Biz","lastModifiedDate":"2024-03-18"},{"lineNumber":285,"author":{"gitId":"JerryWang0000"},"content":"   - School of Computing; Computing; SoC","lastModifiedDate":"2024-03-18"},{"lineNumber":286,"author":{"gitId":"JerryWang0000"},"content":"   - School of Continuing and Lifelong Education; Continuing and Lifelong Education; SCALE","lastModifiedDate":"2024-03-18"},{"lineNumber":287,"author":{"gitId":"JerryWang0000"},"content":"   - Faculty of Dentistry; Dentistry","lastModifiedDate":"2024-03-18"},{"lineNumber":288,"author":{"gitId":"JerryWang0000"},"content":"   - School of Design and Environment; Design and Environment; SDE","lastModifiedDate":"2024-03-18"},{"lineNumber":289,"author":{"gitId":"JerryWang0000"},"content":"   - Duke-NUS Medical School; Duke-NUS","lastModifiedDate":"2024-03-18"},{"lineNumber":290,"author":{"gitId":"JerryWang0000"},"content":"   - Faculty of Engineering; Engineering; FoE","lastModifiedDate":"2024-03-18"},{"lineNumber":291,"author":{"gitId":"JerryWang0000"},"content":"   - Integrative Sciences and Engineering; ISEP","lastModifiedDate":"2024-03-18"},{"lineNumber":292,"author":{"gitId":"JerryWang0000"},"content":"   - Faculty of Law; Law","lastModifiedDate":"2024-03-18"},{"lineNumber":293,"author":{"gitId":"JerryWang0000"},"content":"   - Yong Loo Lin School of Medicine; Medicine","lastModifiedDate":"2024-03-18"},{"lineNumber":294,"author":{"gitId":"JerryWang0000"},"content":"   - Yong Siew Toh Conservatory of Music; Music; TST Conservatory of Music","lastModifiedDate":"2024-03-18"},{"lineNumber":295,"author":{"gitId":"JerryWang0000"},"content":"   - Saw Swee Hock School of Public Health; Public Health","lastModifiedDate":"2024-03-18"},{"lineNumber":296,"author":{"gitId":"JerryWang0000"},"content":"   - Lee Kuan Yew School of Public Policy; Public Policy; LKY School of Public Policy","lastModifiedDate":"2024-03-18"},{"lineNumber":297,"author":{"gitId":"JerryWang0000"},"content":"   - Faculty of Science; Science; FoS","lastModifiedDate":"2024-03-18"},{"lineNumber":298,"author":{"gitId":"JerryWang0000"},"content":"   - University Scholars Programme; USP","lastModifiedDate":"2024-03-18"},{"lineNumber":299,"author":{"gitId":"JerryWang0000"},"content":"   - Yale-NUS College; Yale-NUS","lastModifiedDate":"2024-03-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"whitesnowx"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL m/MODULE f/FACULTY v/VENUE [t/TAG]…​ [a/AVAILABILITY]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com m/CS2103 f/Computing v/123, Clementi Rd, 1234665 t/friend t/colleague a/monday 14:00 16:00`","lastModifiedDate":"2024-03-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"tsulim"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [m/MODULE] [f/FACULTY] [v/VENUE] [t/TAG]…​ [a/AVAILABILITY]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-03-17"},{"lineNumber":310,"author":{"gitId":"iynixil"},"content":"**Filter** | `filter [m/MODULE] [f/FACULTY] [t/TAG]… [a/AVAILABILITY]…`\u003cbr\u003e e.g., `filter m/CS2100 t/friends`","lastModifiedDate":"2024-03-26"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"whitesnowx"},"content":"**Sort** | `sort [ATTRIBUTE]`\u003cbr\u003e e.g., `sort p/`","lastModifiedDate":"2024-03-16"},{"lineNumber":313,"author":{"gitId":"Pluiexo"},"content":"**Add Meeting** | `meeting INDEX [d/DESCRIPTION] [s/DATETIME]`\u003cbr\u003e e.g., `meeting 1 d/ Meet for finals preparation s/ 12/04/2024 18:00`","lastModifiedDate":"2024-03-19"},{"lineNumber":314,"author":{"gitId":"tsulim"},"content":"**Set as Favourite** | `fav INDEX`\u003cbr\u003e e.g., `fav 3`","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"tsulim"},"content":"**Remove as Favourite** | `unfav INDEX`\u003cbr\u003e e.g., `unfav 3`","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsulim":39,"iynixil":24,"Pluiexo":30,"JerryWang0000":32,"whitesnowx":25,"-":167}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"tsulim"},"content":"    content: \"StaffConnect\";","lastModifiedDate":"2024-03-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"tsulim":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveStaffBook(staffBook)","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tsulim":1,"-":38}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"StaffBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"StaffBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"StaffBook *-right-\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"UniqueMeetingList -[hidden]down- UniqueTagList","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"UniqueMeetingList -right-\u003e \"*\" Meeting","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"Person -up-\u003e \"*\" Meeting","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"Person *--\u003e Module","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"Person *--\u003e Faculty","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"Person *--\u003e Venue","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"Person *--\u003e \"*\" Availability","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"whitesnowx":10,"-":17}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"if () then ([command commits StaffBook])","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"    :Save StaffBook to","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"    staffBookStateList;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"whitesnowx":3,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"participant \":StaffConnectParser\" as StaffConnectParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"LogicManager -\u003e StaffConnectParser : parseCommand(\"delete 1\")","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"activate StaffConnectParser","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"StaffConnectParser -\u003e DeleteCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"DeleteCommandParser --\u003e StaffConnectParser","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"StaffConnectParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"DeleteCommandParser --\u003e StaffConnectParser : d","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"DeleteCommandParser -[hidden]-\u003e StaffConnectParser","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"StaffConnectParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"deactivate StaffConnectParser","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tsulim":10,"-":60}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"skin rose","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"start","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":":User executes edit command;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"if () then ([index is valid])","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"    if () then ([any field is changed])","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"        :Construct a new Person object;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"        :Replace the original Person with the new one;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"        :Refresh the list of Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"    else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"        :Throw ParseException that no field is changed;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"    endif","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"    :Throw CommandException that index is is invalid;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"endif","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"stop","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"JerryWang0000":23}},{"path":"docs/diagrams/EditSequenceDiagram-Parser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"skinparam ParticipantPadding 0","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"Participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"Participant \":EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"Participant \"ep:EditPersonDescriptor\" as ep LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"[-\u003e EditCommandParser : parse(\"1 p/ 12345678\")","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"create EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"create ep","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e ep: setName()","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e ep: setPhone()","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e ep: setEmail()","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e ep: setModule()","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e ep: setFaculty()","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e ep: setVenue()","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e ep: setTags()","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e ep","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"activate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e ep: setAvailabilities()","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"JerryWang0000"},"content":"ep --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"JerryWang0000"},"content":"deactivate ep","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"JerryWang0000"},"content":"create EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e EditCommand: new(ep)","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"JerryWang0000"},"content":"activate EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"JerryWang0000"},"content":"EditCommand --\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"JerryWang0000"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"JerryWang0000"},"content":"[\u003c-- EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"JerryWang0000"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"JerryWang0000"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JerryWang0000":76}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"participant \":StaffConnectParser\" as StaffConnectParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"participant \"f:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"[-\u003e LogicManager : execute(\"edit 1 p/ 12345678\")","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"activate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"LogicManager -\u003e StaffConnectParser : parseCommand(\"edit 1 p/ 12345678\")","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"activate StaffConnectParser","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"create EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"StaffConnectParser -\u003e EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e StaffConnectParser","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"StaffConnectParser -\u003e EditCommandParser : parse(\"1 p/ 12345678\")","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"create EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"activate EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"EditCommand -\u003e EditCommand : createEditedPerson()","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"activate EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"EditCommand --\u003e EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"EditCommand --\u003e EditCommandParser :","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser --\u003e StaffConnectParser : f","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"EditCommandParser -[hidden]-\u003e StaffConnectParser","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"destroy EditCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"JerryWang0000"},"content":"StaffConnectParser --\u003e LogicManager : f","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"deactivate StaffConnectParser","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"LogicManager -\u003e EditCommand : execute(m)","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"activate EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"EditCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"JerryWang0000"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"create CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"JerryWang0000"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"JerryWang0000"},"content":"activate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"JerryWang0000"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"JerryWang0000"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"JerryWang0000"},"content":"EditCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"JerryWang0000"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"JerryWang0000"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"JerryWang0000"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JerryWang0000":75}},{"path":"docs/diagrams/FavSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"!include style.puml","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"participant \":StaffConnectParser\" as StaffConnectParser LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"participant \":FavCommandParser\" as FavCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"participant \"f:FavCommand\" as FavCommand LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"participant FavCommand as FavCommand1 \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nPersonUtil\" as PersonUtil LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"end box","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"end box","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"[-\u003e LogicManager : execute(userInput)","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"activate LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"LogicManager -\u003e StaffConnectParser : parseCommand(userInput)","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"activate StaffConnectParser","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"create FavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"StaffConnectParser -\u003e FavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"activate FavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"FavCommandParser --\u003e StaffConnectParser","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"deactivate FavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"StaffConnectParser -\u003e FavCommandParser : parse(args)","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"activate FavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"FavCommandParser -\u003e ParserUtil : parseIndex(oneBasedIndex)","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"create FavCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"FavCommandParser -\u003e FavCommand++","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"return f","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"destroy FavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"return f","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"LogicManager -\u003e FavCommand : execute(model)","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"activate FavCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"FavCommand -\u003e Model : getSortedFilteredPersonList()","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"activate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"FavCommand -\u003e FavCommand1 : createFavPerson(personToFav)","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"activate FavCommand1","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"FavCommand1 -\u003e PersonUtil : createPersonWithFavouriteStatus(Person selectedPerson, Favourite favourite)","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"activate PersonUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"create Person","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"PersonUtil -\u003e Person++","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"return createdPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"return favPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"return favPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"FavCommand -\u003e Model : setPerson(personToFav, favPerson)","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"activate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"FavCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"activate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"create CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"FavCommand -\u003e CommandResult++","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"return r","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"tsulim":84}},{"path":"docs/diagrams/FilterActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"skin rose","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"start","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":":User executes filter command;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"if () then ([criteria is given])","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    if () then ([Person fulfils criteria])","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"        :Show in list;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"        :Not shown in list;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"    endif","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    :Show error message to User;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"endif","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"stop","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"iynixil":21}},{"path":"docs/diagrams/FilterSequenceDiagram-Parser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"skinparam ParticipantPadding 0","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"Participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"Participant \":FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"Participant \"mp:PersonHasModulePredicate\" as modulePredicate LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"Participant \"fp:PersonHasFacultyPredicate\" as facultyPredicate LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"Participant \"tp:PersonHasTagsPredicate\" as tagsPredicate LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"Participant \"ap:PersonHasAvailabilitiesPredicate\" as availabilitiesPredicate LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"Participant \"pp:Predicate\" as personPredicate LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"[-\u003e FilterCommandParser : parse(\"f/Computing\")","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"create FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"create modulePredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"FilterCommandParser -\u003e modulePredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"activate modulePredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"modulePredicate --\u003e FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"deactivate modulePredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"create facultyPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"FilterCommandParser -\u003e facultyPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"activate facultyPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"facultyPredicate --\u003e FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"deactivate facultyPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"create tagsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"FilterCommandParser -\u003e tagsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"activate tagsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"tagsPredicate --\u003e FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"deactivate tagsPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"create availabilitiesPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"FilterCommandParser -\u003e availabilitiesPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"activate availabilitiesPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"availabilitiesPredicate --\u003e FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"deactivate availabilitiesPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"create FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"FilterCommandParser -\u003e FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"FilterCommand -\u003e FilterCommand : setPersonPredicate()","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"create personPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"FilterCommand -\u003e personPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"activate personPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"personPredicate --\u003e FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"deactivate personPredicate","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"FilterCommand --\u003e FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"FilterCommand --\u003e FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"[\u003c-- FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"iynixil":61}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"participant \":StaffConnectParser\" as StaffConnectParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"participant \"f:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"participant \"p:Predicate\" as Predicate LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"[-\u003e LogicManager : execute(\"filter f/Computing\")","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"LogicManager -\u003e StaffConnectParser : parseCommand(\"filter f/Computing\")","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"activate StaffConnectParser","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"create FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"StaffConnectParser -\u003e FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"FilterCommandParser --\u003e StaffConnectParser","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"StaffConnectParser -\u003e FilterCommandParser : parse(\"f/Computing\")","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"create FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"FilterCommandParser -\u003e FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"FilterCommand -\u003e FilterCommand : setPersonPredicate()","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"create Predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"FilterCommand -\u003e Predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"activate Predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"Predicate --\u003e FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"deactivate Predicate","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"FilterCommand --\u003e FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"FilterCommand --\u003e FilterCommandParser :","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"FilterCommandParser --\u003e StaffConnectParser : f","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"FilterCommandParser -[hidden]-\u003e StaffConnectParser","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"destroy FilterCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"StaffConnectParser --\u003e LogicManager : f","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"deactivate StaffConnectParser","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"LogicManager -\u003e FilterCommand : execute(m)","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"FilterCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"create CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"activate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"CommandResult --\u003e FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"FilterCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"iynixil":82}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"skin rose","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"start","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":":User executes find command;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"if () then ([command is non-empty])","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"    if () then ([Person fulfils criteria])","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"        :Show in list;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"    else ([else])","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"        :Not shown in list;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"    endif","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"else ([else])","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"    :Show error message to User;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"endif","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"stop","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JerryWang0000":21}},{"path":"docs/diagrams/FindSequenceDiagram-Parser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"skinparam ParticipantPadding 0","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"Participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"Participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"Participant \"p:NameContainsKeywordsPredicate\" as p LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"[-\u003e FindCommandParser : parse(\"Alex\")","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"create FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"create p","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"FindCommandParser -\u003e p: new(\"Alex\")","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"activate p","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"p --\u003e FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"deactivate p","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"create FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"FindCommandParser -\u003e FindCommand: new(p)","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"activate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"[\u003c-- FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JerryWang0000":30}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"participant \":StaffConnectParser\" as StaffConnectParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"[-\u003e LogicManager : execute(\"find Alex\")","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"activate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"LogicManager -\u003e StaffConnectParser : parseCommand(\"find Alex\")","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"activate StaffConnectParser","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"create FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"StaffConnectParser -\u003e FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"FindCommandParser --\u003e StaffConnectParser","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"StaffConnectParser -\u003e FindCommandParser : parse(\"Alex\")","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"create FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"FindCommandParser -\u003e FindCommand: new(NameContainsKeywordsPredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"activate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"FindCommand --\u003e FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"FindCommand --\u003e FindCommandParser :","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"FindCommandParser --\u003e StaffConnectParser : f","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"FindCommandParser -[hidden]-\u003e StaffConnectParser","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"StaffConnectParser --\u003e LogicManager : f","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"JerryWang0000"},"content":"deactivate StaffConnectParser","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"LogicManager -\u003e FindCommand : execute(m)","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"activate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(NameContainsKeywordsPredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"JerryWang0000"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"create CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"JerryWang0000"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"activate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"JerryWang0000"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"JerryWang0000"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"JerryWang0000"},"content":"FindCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"JerryWang0000"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"JerryWang0000"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"JerryWang0000"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"JerryWang0000":73}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyStaffBook\" as ReadOnlyStaffBook","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"Class StaffBook","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"Class Email","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"Class Module","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"Class Faculty","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"Class Venue","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"Class Availability","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"Class Meeting","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"StaffBook .up.|\u003e ReadOnlyStaffBook","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"Model .left.\u003e ReadOnlyStaffBook","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"ModelManager -left-\u003e \"1\" StaffBook","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"StaffBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"Person *--\u003e Module","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"Person *--\u003e Faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"Person *--\u003e Venue","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"Person *--\u003e \"*\" Availability","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"Person *--\u003e \"*\" Meeting","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"Email -[hidden]right-\u003e Module","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"Module -[hidden]right-\u003e Faculty","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"Faculty -[hidden]right-\u003e Venue","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"Venue -[hidden]right-\u003e Tag","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"Tag -[hidden]right-\u003e Availability","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"Availability -[hidden]right-\u003e Meeting","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Pluiexo":14,"JerryWang0000":1,"whitesnowx":9,"-":43}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"Class StaffConnectParser","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"HiddenOutside ..\u003e StaffConnectParser","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"StaffConnectParser .down.\u003e XYZCommandParser: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"StaffConnectParser ..\u003e Command : \u003c\u003cuse\u003e\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"whitesnowx":4,"-":34}},{"path":"docs/diagrams/SortActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"skin rose","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"start","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":":User enters a sort command;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"if () then ([attribute is sortable])","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"    :Listed contacts are sorted","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"    based on the given attribute;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"else ([else])","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    :displays Sort Usage message;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"endif","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"stop","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"@enduml","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"whitesnowx":17}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"participant \":StaffConnectParser\" as StaffConnectParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nNameComparator\" as NameComparator LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"participant \"c:NameComparator\" as NAME_COMPARATOR LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"[-\u003e LogicManager : execute(\"sort n/\")","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"LogicManager -\u003e StaffConnectParser : parseCommand(\"sort n/\")","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"activate StaffConnectParser","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"create SortCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"StaffConnectParser -\u003e SortCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"activate SortCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"SortCommandParser --\u003e StaffConnectParser","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"deactivate SortCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"StaffConnectParser -\u003e SortCommandParser : parse(\"n/\")","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"activate SortCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"SortCommandParser -\u003e SortCommandParser : parseComparatorForKeywords(\"n/\")","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"activate SortCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"create NameComparator","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"SortCommandParser -\u003e NameComparator","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"activate NameComparator","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"create NAME_COMPARATOR","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"NameComparator -\u003e NAME_COMPARATOR","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"activate NAME_COMPARATOR","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"NAME_COMPARATOR --\u003e NameComparator : c","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"deactivate NAME_COMPARATOR","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"NameComparator --\u003e SortCommandParser : c","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"deactivate NameComparator","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"SortCommandParser --\u003e SortCommandParser : c","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"deactivate SortCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"create SortCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"SortCommandParser -\u003e SortCommand : SortCommand(c)","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"activate SortCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"SortCommand --\u003e SortCommandParser : s","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"deactivate SortCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"SortCommandParser --\u003e StaffConnectParser  : s","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"deactivate SortCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"whitesnowx"},"content":"SortCommandParser -[hidden]-\u003e SortCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"whitesnowx"},"content":"destroy SortCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"whitesnowx"},"content":"StaffConnectParser --\u003e LogicManager : s","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"whitesnowx"},"content":"deactivate StaffConnectParser","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"whitesnowx"},"content":"LogicManager -\u003e SortCommand : execute(m)","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"whitesnowx"},"content":"activate SortCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"whitesnowx"},"content":"SortCommand -\u003e Model : updateSortedPersonList(c)","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"whitesnowx"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"whitesnowx"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"whitesnowx"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"whitesnowx"},"content":"create CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"whitesnowx"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"whitesnowx"},"content":"activate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"whitesnowx"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"whitesnowx"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"whitesnowx"},"content":"SortCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"whitesnowx"},"content":"deactivate SortCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"whitesnowx"},"content":"SortCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"whitesnowx"},"content":"destroy SortCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"whitesnowx"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"whitesnowx"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"whitesnowx"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"whitesnowx":94}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"package \"StaffBook Storage\" #F4F6F6{","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStaffBookStorage\" as StaffBookStorage","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"Class JsonStaffBookStorage","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"Class JsonSerializableStaffBook","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"Class JsonAdaptedAvailability","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"Class JsonAdaptedMeeting","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"StorageManager -up-\u003e \"1\" StaffBookStorage","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"Storage -right-|\u003e StaffBookStorage","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"JsonStaffBookStorage .up.|\u003e StaffBookStorage","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"JsonStaffBookStorage ..\u003e JsonSerializableStaffBook","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"JsonSerializableStaffBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedAvailability","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedMeeting","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"iynixil":11,"Pluiexo":3,"-":34}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"    class State1 as \"\u003cu\u003esb0:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"    class State2 as \"\u003cu\u003esb1:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    class State3 as \"\u003cu\u003esb2:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"whitesnowx":3,"-":18}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"    class State1 as \"\u003cu\u003esb0:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"    class State2 as \"\u003cu\u003esb1:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    class State3 as \"\u003cu\u003esb2:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"whitesnowx":3,"-":20}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"    class State1 as \"\u003cu\u003esb0:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"    class State2 as \"\u003cu\u003esb1:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    class State3 as \"\u003cu\u003esb2:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"whitesnowx":3,"-":18}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"    class State1 as \"\u003cu\u003esb0:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"    class State2 as \"\u003cu\u003esb1:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    class State3 as \"\u003cu\u003esb2:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"whitesnowx":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"    class State1 as \"\u003cu\u003esb0:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"    class State2 as \"\u003cu\u003esb1:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    class State3 as \"\u003cu\u003esb2:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"whitesnowx":3,"-":18}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"    class State1 as \"\u003cu\u003esb0:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"    class State2 as \"\u003cu\u003esb1:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    class State3 as \"\u003cu\u003esb3:StaffBook\u003c/u\u003e\"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"note right on link: State sb2 deleted.","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"whitesnowx":4,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"participant \":StaffConnectParser\" as StaffConnectParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"LogicManager -\u003e StaffConnectParser : parseCommand(undo)","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"activate StaffConnectParser","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"StaffConnectParser -\u003e UndoCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"UndoCommand --\u003e StaffConnectParser","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"StaffConnectParser --\u003e LogicManager : u","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"deactivate StaffConnectParser","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"UndoCommand -\u003e Model : undoStaffBook()","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JerryWang0000":8,"-":38}},{"path":"docs/diagrams/UndoSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"participant \":VersionedStaffBook\" as VersionedStaffBook MODEL_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"[-\u003e Model : undoStaffBook()","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"Model -\u003e VersionedStaffBook : undo()","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"activate VersionedStaffBook","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"VersionedStaffBook -\u003e VersionedStaffBook :resetData(ReadOnlyStaffBook)","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"VersionedStaffBook --\u003e Model :","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"deactivate VersionedStaffBook","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"[\u003c-- Model","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"JerryWang0000":7,"-":16}},{"path":"docs/diagrams/UnfavSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"!include style.puml","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"participant \":StaffConnectParser\" as StaffConnectParser LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"participant \":UnfavCommandParser\" as UnfavCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"participant \"u:UnfavCommand\" as UnfavCommand LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"participant UnfavCommand as UnfavCommand1 \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nPersonUtil\" as PersonUtil LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"end box","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"end box","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"[-\u003e LogicManager : execute(userInput)","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"activate LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"LogicManager -\u003e StaffConnectParser : parseCommand(userInput)","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"activate StaffConnectParser","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"create UnfavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"StaffConnectParser -\u003e UnfavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"activate UnfavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"UnfavCommandParser --\u003e StaffConnectParser","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"deactivate UnfavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"StaffConnectParser -\u003e UnfavCommandParser : parse(args)","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"activate UnfavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"UnfavCommandParser -\u003e ParserUtil : parseIndex(oneBasedIndex)","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"activate ParserUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"create UnfavCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"UnfavCommandParser -\u003e UnfavCommand++","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"return u","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"destroy UnfavCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"return u","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"LogicManager -\u003e UnfavCommand : execute(model)","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"activate UnfavCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"UnfavCommand -\u003e Model : getSortedFilteredPersonList()","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"activate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"UnfavCommand -\u003e UnfavCommand1 : createUnfavPerson(personToUnfav)","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"activate UnfavCommand1","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"UnfavCommand1 -\u003e PersonUtil : createPersonWithFavouriteStatus(Person selectedPerson, Favourite favourite)","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"activate PersonUtil","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"create Person","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"PersonUtil -\u003e Person++","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"return createdPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"return unfavPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"return unfavPerson","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"UnfavCommand -\u003e Model : setPerson(personToUnfav, unfavPerson)","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"activate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"UnfavCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"activate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"create CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"UnfavCommand -\u003e CommandResult++","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"return r","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"return","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"tsulim":84}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"title: StaffConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103-F08-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103-F08-3/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103-F08-3/tp/graph/badge.svg?token\u003dWLNT3ZUBO6)](https://codecov.io/gh/AY2324S2-CS2103-F08-3/tp)","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"**StaffConnect offers convenience and peace of mind to a struggling student with memory recollection issues.**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"This product allows users to easily identify and connect with educators by providing visual cues alongside contact","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"details, supported by a quick and easy filter system. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"* If you are interested in using StaffConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"* If you are interested about developing StaffConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsulim":1,"Pluiexo":7,"-":13}},{"path":"docs/team/iynixil.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"layout: page","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"title: Xin Yi\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"### Project: StaffConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"StaffConnect offers convenience and peace of mind to a struggling student with memory recollection issues. This product allows users to easily identify and connect with educators by providing visual cues alongside contact details, supported by a quick and easy filter system. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"* **Project management**:","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"  * User Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"* **Community**:","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"* **Tools**:","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"iynixil":43,"Pluiexo":3}},{"path":"docs/team/jerrywang0000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"layout: page","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"title: Jerry Wang\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"### Project: StaffConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"StaffConnect offers convenience and peace of mind to a struggling student with memory recollection issues. This product allows users to easily identify and connect with educators by providing visual cues alongside contact details, supported by a quick and easy filter system. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"* **Project management**:","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"  * User Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"* **Community**:","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"* **Tools**:","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"JerryWang0000":44,"Pluiexo":2}},{"path":"docs/team/pluiexo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"title: Norton\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"### Project: StaffConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"StaffConnect offers convenience and peace of mind to a struggling student with memory recollection issues. This product allows users to easily identify and connect with educators by providing visual cues alongside contact details, supported by a quick and easy filter system. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Pluiexo":3,"-":43}},{"path":"docs/team/tsulim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"layout: page","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"title: Xiu Jia\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"### Project: StaffConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"StaffConnect offers convenience and peace of mind to a struggling student with memory recollection issues. This product allows users to easily identify and connect with educators by providing visual cues alongside contact details, supported by a quick and easy filter system. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"* **Project management**:","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"  * User Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"* **Community**:","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"* **Tools**:","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"tsulim":43,"Pluiexo":3}},{"path":"docs/team/whitesnowx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"title: Wong\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"### Project: StaffConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"StaffConnect offers convenience and peace of mind to a struggling student with memory recollection issues. This product allows users to easily identify and connect with educators by providing visual cues alongside contact details, supported by a quick and easy filter system. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Pluiexo":2,"whitesnowx":1,"-":43}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.address.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"import static staffconnect.util.commons.address.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"tsulim"},"content":"Create a `RemarkCommandParser` class in the `staffconnect.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2024-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"tsulim"},"content":"Create a new `Remark` in `staffconnect.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-03-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"tsulim"},"content":"Simply add the following to [`staffconnect.ui.address.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"tsulim":6,"-":393}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"The `address` field in `Person` is actually an instance of the `staffconnect.model.person.model.address.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsulim":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `staffconnect.logic.address.Logic`.","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"A quick look at the `staffconnect.logic.address.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsulim":2,"-":299}},{"path":"src/main/java/staffconnect/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.FileUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"tsulim":4,"-":69}},{"path":"src/main/java/staffconnect/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"tsulim":2,"-":39}},{"path":"src/main/java/staffconnect/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.Config;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.Version;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ConfigUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.LogicManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.JsonStaffBookStorage;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.StaffBookStorage;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.Storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.StorageManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.UserPrefsStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"import staffconnect.ui.Ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"import staffconnect.ui.UiManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing StaffConnect ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"        StaffBookStorage staffBookStorage \u003d new JsonStaffBookStorage(userPrefs.getStaffConnectFilePath());","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        storage \u003d new StorageManager(staffBookStorage, userPrefsStorage);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s staff book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"     * The data from the sample staff book will be used instead if {@code storage}\u0027s staff book is not found,","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"     * or an empty staff book will be used instead if errors occur when reading {@code storage}\u0027s staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"        logger.info(\"Using data file : \" + storage.getStaffBookFilePath());","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"        Optional\u003cReadOnlyStaffBook\u003e staffBookOptional;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"        ReadOnlyStaffBook initialData;","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"            staffBookOptional \u003d storage.readStaffBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"            if (!staffBookOptional.isPresent()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"                logger.info(\"Creating a new data file \" + storage.getStaffBookFilePath()","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"                        + \" populated with a sample StaffBook.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"            initialData \u003d staffBookOptional.orElseGet(SampleDataUtil::getSampleStaffBook);","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"            logger.warning(\"Data file at \" + storage.getStaffBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"                    + \" Will be starting with an empty StaffBook.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"            initialData \u003d new StaffBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"tsulim"},"content":"        logger.info(\"Starting StaffConnect \" + MainApp.VERSION);","lastModifiedDate":"2024-03-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"tsulim"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping StaffConnect ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":43,"Pluiexo":1,"-":142}},{"path":"src/main/java/staffconnect/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":2,"-":64}},{"path":"src/main/java/staffconnect/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    private static final double DEFAULT_HEIGHT \u003d 700;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    private static final double DEFAULT_WIDTH \u003d 840;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":2,"Pluiexo":2,"-":78}},{"path":"src/main/java/staffconnect/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"    private static final String LOG_FILE \u003d \"staffconnect.log\";","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"     * Creates a logger named \u0027sc\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"        baseLogger \u003d Logger.getLogger(\"sc\");","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":4,"-":102}},{"path":"src/main/java/staffconnect/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":1,"-":120}},{"path":"src/main/java/staffconnect/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core.index;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tsulim":2,"-":67}},{"path":"src/main/java/staffconnect/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"tsulim":1,"-":10}},{"path":"src/main/java/staffconnect/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":1,"-":20}},{"path":"src/main/java/staffconnect/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.MainApp;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsulim":2,"-":40}},{"path":"src/main/java/staffconnect/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":1,"-":34}},{"path":"src/main/java/staffconnect/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.Config;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsulim":3,"-":20}},{"path":"src/main/java/staffconnect/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":1,"-":82}},{"path":"src/main/java/staffconnect/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":3,"-":141}},{"path":"src/main/java/staffconnect/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":2,"-":66}},{"path":"src/main/java/staffconnect/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"tsulim":1,"-":52}},{"path":"src/main/java/staffconnect/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"     * Returns the StaffBook.","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"     * @see staffconnect.model.Model#getStaffBook()","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    ReadOnlyStaffBook getStaffBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    /** Returns the first person if it exists. */","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"    Optional\u003cPerson\u003e getFirstPersonIfExist();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"     * Returns the user prefs\u0027 StaffConnect file path.","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"    Path getStaffConnectFilePath();","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsulim":12,"Pluiexo":4,"-":38}},{"path":"src/main/java/staffconnect/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.Command;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.StaffConnectParser;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.Storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"    private final StaffConnectParser staffConnectParser;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"        staffConnectParser \u003d new StaffConnectParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"        Command command \u003d staffConnectParser.parseCommand(commandText);","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"            storage.saveStaffBook(model.getStaffBook());","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"    public ReadOnlyStaffBook getStaffBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"        return model.getStaffBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"        return model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"    public Optional\u003cPerson\u003e getFirstPersonIfExist() {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"        return model.getSortedFilteredPersonList().isEmpty()","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"                ? Optional.empty() : Optional.of(model.getSortedFilteredPersonList().get(0));","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"    public Path getStaffConnectFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"        return model.getStaffConnectFilePath();","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tsulim":21,"Pluiexo":7,"-":68}},{"path":"src/main/java/staffconnect/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.Prefix;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"            \"The person index provided is invalid or person does not exist\";","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"            \"The meeting index provided is invalid or meeting does not exist\";","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"                .append(person.getFaculty())","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"                .append(\"; Faculty: \")","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"                .append(\"; Venue: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"                .append(person.getVenue())","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"                .append(\"; Module: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"                .append(person.getModule())","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"        builder.append(\"; Availabilities: \");","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        person.getAvailabilities().forEach(builder::append);","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"     * Formats the {@code meeting} for display to the user.","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"    public static String format(Meeting meeting) {","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        builder.append(meeting.getDescription())","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"            .append(\"; At: \")","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"            .append(meeting.getStartDate());","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":7,"iynixil":2,"Pluiexo":19,"JerryWang0000":2,"-":45}},{"path":"src/main/java/staffconnect/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":" * Adds a person to the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the staff book. \"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"            + PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"            + PREFIX_FACULTY + \"FACULTY \"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"            + PREFIX_VENUE + \"VENUE \"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"            + \"[\" + PREFIX_AVAILABILITY + \"AVAILABILITY]...\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"            + PREFIX_MODULE + \"CS2103 \"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"            + PREFIX_FACULTY + \"Computing \"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"            + PREFIX_VENUE + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"            + PREFIX_AVAILABILITY + \"mon 12:00 14:00 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"            + PREFIX_AVAILABILITY + \"thur 12:00 14:00\";","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the staff book\";","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":20,"iynixil":3,"JerryWang0000":3,"whitesnowx":2,"-":66}},{"path":"src/main/java/staffconnect/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_DESCRIPTION;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_STARTDATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateThenDescriptionComparator.MEETING_DATE_THEN_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.person.PersonUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":" * Adds a meeting to the staff book.","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    public static final String COMMAND_WORD \u003d \"meeting-add\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a meeting to the person identified \"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"            + \"by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + PREFIX_MEETING_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"            + PREFIX_MEETING_STARTDATE + \"DATETIME[dd/MM/yyyy HH:mm] \\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_MEETING_DESCRIPTION","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"            + \"Meet for finals \" + PREFIX_MEETING_STARTDATE + \"12/04/2023 18:00\";","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting is already planned for this person!\";","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"    private final Meeting toAdd;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    private final Index index;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"     * Creates an AddMeetingCommand to add the specified {@code Meeting}","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    public AddMeetingCommand(Index index, Meeting meeting) {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"        toAdd \u003d meeting;","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"        Person editedPerson \u003d PersonUtil.copyPerson(personToEdit);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        if (personToEdit.hasDuplicateMeeting(toAdd)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"        editedPerson.addMeetings(toAdd);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"        editedPerson.updateSortedMeetingList(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"        //setPerson to force update the ui with the new items","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof AddMeetingCommand)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"        AddMeetingCommand otherAddMeetingCommand \u003d (AddMeetingCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"        return index.equals(otherAddMeetingCommand.index) \u0026\u0026 toAdd.equals(otherAddMeetingCommand.toAdd);","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"        return new ToStringBuilder(this).add(\"index\", index).add(\"toAdd\", toAdd).toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"tsulim":1,"Pluiexo":94}},{"path":"src/main/java/staffconnect/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":" * Clears the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Staff book has been cleared!\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"        model.setStaffBook(new StaffBook());","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":6,"-":16}},{"path":"src/main/java/staffconnect/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":3,"-":17}},{"path":"src/main/java/staffconnect/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":2,"-":80}},{"path":"src/main/java/staffconnect/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":" * Deletes a person identified using it\u0027s displayed index from the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":9,"-":60}},{"path":"src/main/java/staffconnect/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_INDEX;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateThenDescriptionComparator.MEETING_DATE_THEN_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.person.PersonUtil;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":" * Deletes a meeting identified using its displayed index from the person\u0027s meeting list.","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    public static final String COMMAND_WORD \u003d \"meeting-delete\";","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the meeting identified in the person\u0027s \"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"            + \"meeting list. \\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"            + PREFIX_MEETING_INDEX + \"INDEX (must be a positive integer) \\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_MEETING_INDEX + \"2\";","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Deleted Meeting: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    private final Index targetPersonIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"    private final Index targetMeetingIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"     * Constructs a DeleteMeetingCommand to indicate which meeting to delete from the person\u0027s meeting list.","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"     * @param targetPersonIndex to select the person\u0027s meeting list.","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"     * @param targetMeetingIndex to select the meeting to delete.","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"    public DeleteMeetingCommand(Index targetPersonIndex, Index targetMeetingIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        this.targetPersonIndex \u003d targetPersonIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"        this.targetMeetingIndex \u003d targetMeetingIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"        if (targetPersonIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        Person personToSelect \u003d lastShownList.get(targetPersonIndex.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        Person editedPerson \u003d PersonUtil.copyPerson(personToSelect);","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        List\u003cMeeting\u003e meetingShownList \u003d personToSelect.getFilteredMeetings();","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"        // can\u0027t group guard clauses together, as this guard clause has to be here","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        if (targetMeetingIndex.getZeroBased() \u003e\u003d meetingShownList.size()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"        Meeting meetingToSelect \u003d meetingShownList.get(targetMeetingIndex.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"        editedPerson.removeMeeting(meetingToSelect);","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"        editedPerson.updateSortedMeetingList(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        //force update the ui","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"        model.setPerson(personToSelect, editedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS, Messages.format(meetingToSelect)));","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof DeleteMeetingCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand otherDeleteCommand \u003d (DeleteMeetingCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"        return targetPersonIndex.equals(otherDeleteCommand.targetPersonIndex)","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"                \u0026\u0026 targetMeetingIndex.equals(otherDeleteCommand.targetMeetingIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"                .add(\"targetPersonIndex\", targetPersonIndex)","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"                .add(\"targetMeetingIndex\", targetMeetingIndex)","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"tsulim":1,"Pluiexo":97}},{"path":"src/main/java/staffconnect/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":" * Edits the details of an existing person in the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"            + \"[\" + PREFIX_FACULTY + \"FACULTY] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"            + \"[\" + PREFIX_VENUE + \"VENUE] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"            + \"[\" + PREFIX_AVAILABILITY + \"AVAILABILITY]...\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the staff book.\";","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"tsulim"},"content":"        Module updatedModule \u003d editPersonDescriptor.getModule().orElse(personToEdit.getModule());","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"JerryWang0000"},"content":"        Faculty updatedFaculty \u003d editPersonDescriptor.getFaculty().orElse(personToEdit.getFaculty());","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"        Venue updatedVenue \u003d editPersonDescriptor.getVenue().orElse(personToEdit.getVenue());","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"        Set\u003cAvailability\u003e updatedAvailabilities \u003d editPersonDescriptor.getAvailabilities()","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"                .orElse(personToEdit.getAvailabilities());","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"tsulim"},"content":"        Favourite favourite \u003d personToEdit.getFavourite();","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"Pluiexo"},"content":"        Person editedPerson \u003d new Person(updatedName, updatedPhone, updatedEmail, updatedModule,","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"                updatedFaculty, updatedVenue, updatedTags, updatedAvailabilities, favourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Pluiexo"},"content":"        editedPerson.setMeetings(personToEdit.getMeetings());","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"Pluiexo"},"content":"        return editedPerson;","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"tsulim"},"content":"        private Module module;","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"JerryWang0000"},"content":"        private Faculty faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"iynixil"},"content":"        private Venue venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"tsulim"},"content":"        private Set\u003cAvailability\u003e availabilities;","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"tsulim"},"content":"         * A defensive copy of {@code tags} and {@code availabilities} is used internally.","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"tsulim"},"content":"            setModule(toCopy.module);","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"JerryWang0000"},"content":"            setFaculty(toCopy.faculty);","lastModifiedDate":"2024-03-15"},{"lineNumber":175,"author":{"gitId":"iynixil"},"content":"            setVenue(toCopy.venue);","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"tsulim"},"content":"            setAvailabilities(toCopy.availabilities);","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"tsulim"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, module, faculty, venue, tags,","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"tsulim"},"content":"                    availabilities);","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"tsulim"},"content":"        public void setModule(Module module) {","lastModifiedDate":"2024-03-13"},{"lineNumber":213,"author":{"gitId":"tsulim"},"content":"            this.module \u003d module;","lastModifiedDate":"2024-03-13"},{"lineNumber":214,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":216,"author":{"gitId":"tsulim"},"content":"        public Optional\u003cModule\u003e getModule() {","lastModifiedDate":"2024-03-13"},{"lineNumber":217,"author":{"gitId":"tsulim"},"content":"            return Optional.ofNullable(module);","lastModifiedDate":"2024-03-13"},{"lineNumber":218,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":219,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":220,"author":{"gitId":"JerryWang0000"},"content":"        public void setFaculty(Faculty faculty) {","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"JerryWang0000"},"content":"            this.faculty \u003d faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":223,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"JerryWang0000"},"content":"        public Optional\u003cFaculty\u003e getFaculty() {","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"JerryWang0000"},"content":"            return Optional.ofNullable(faculty);","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"iynixil"},"content":"        public void setVenue(Venue venue) {","lastModifiedDate":"2024-03-13"},{"lineNumber":229,"author":{"gitId":"iynixil"},"content":"            this.venue \u003d venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"iynixil"},"content":"        public Optional\u003cVenue\u003e getVenue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":233,"author":{"gitId":"iynixil"},"content":"            return Optional.ofNullable(venue);","lastModifiedDate":"2024-03-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"tsulim"},"content":"        /**","lastModifiedDate":"2024-03-15"},{"lineNumber":254,"author":{"gitId":"tsulim"},"content":"         * Sets {@code availabilities} to this object\u0027s {@code availabilities}.","lastModifiedDate":"2024-03-15"},{"lineNumber":255,"author":{"gitId":"tsulim"},"content":"         * A defensive copy of {@code availabilities} is used internally.","lastModifiedDate":"2024-03-15"},{"lineNumber":256,"author":{"gitId":"tsulim"},"content":"         */","lastModifiedDate":"2024-03-15"},{"lineNumber":257,"author":{"gitId":"tsulim"},"content":"        public void setAvailabilities(Set\u003cAvailability\u003e availabilities) {","lastModifiedDate":"2024-03-15"},{"lineNumber":258,"author":{"gitId":"tsulim"},"content":"            this.availabilities \u003d (availabilities !\u003d null) ? new HashSet\u003c\u003e(availabilities) : null;","lastModifiedDate":"2024-03-15"},{"lineNumber":259,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":260,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":261,"author":{"gitId":"tsulim"},"content":"        /**","lastModifiedDate":"2024-03-15"},{"lineNumber":262,"author":{"gitId":"tsulim"},"content":"         * Returns an unmodifiable availability set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-15"},{"lineNumber":263,"author":{"gitId":"tsulim"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-15"},{"lineNumber":264,"author":{"gitId":"tsulim"},"content":"         * Returns {@code Optional#empty()} if {@code availabilities} is null.","lastModifiedDate":"2024-03-15"},{"lineNumber":265,"author":{"gitId":"tsulim"},"content":"         */","lastModifiedDate":"2024-03-15"},{"lineNumber":266,"author":{"gitId":"tsulim"},"content":"        public Optional\u003cSet\u003cAvailability\u003e\u003e getAvailabilities() {","lastModifiedDate":"2024-03-15"},{"lineNumber":267,"author":{"gitId":"tsulim"},"content":"            return (availabilities !\u003d null)","lastModifiedDate":"2024-03-15"},{"lineNumber":268,"author":{"gitId":"tsulim"},"content":"                    ? Optional.of(Collections.unmodifiableSet(availabilities))","lastModifiedDate":"2024-03-15"},{"lineNumber":269,"author":{"gitId":"tsulim"},"content":"                    : Optional.empty();","lastModifiedDate":"2024-03-15"},{"lineNumber":270,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":271,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"tsulim"},"content":"                    \u0026\u0026 Objects.equals(module, otherEditPersonDescriptor.module)","lastModifiedDate":"2024-03-13"},{"lineNumber":288,"author":{"gitId":"JerryWang0000"},"content":"                    \u0026\u0026 Objects.equals(faculty, otherEditPersonDescriptor.faculty)","lastModifiedDate":"2024-03-15"},{"lineNumber":289,"author":{"gitId":"iynixil"},"content":"                    \u0026\u0026 Objects.equals(venue, otherEditPersonDescriptor.venue)","lastModifiedDate":"2024-03-13"},{"lineNumber":290,"author":{"gitId":"tsulim"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":291,"author":{"gitId":"tsulim"},"content":"                    \u0026\u0026 Objects.equals(availabilities, otherEditPersonDescriptor.availabilities);","lastModifiedDate":"2024-03-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"tsulim"},"content":"                    .add(\"module\", module)","lastModifiedDate":"2024-03-13"},{"lineNumber":301,"author":{"gitId":"JerryWang0000"},"content":"                    .add(\"faculty\", faculty)","lastModifiedDate":"2024-03-15"},{"lineNumber":302,"author":{"gitId":"iynixil"},"content":"                    .add(\"venue\", venue)","lastModifiedDate":"2024-03-13"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":304,"author":{"gitId":"tsulim"},"content":"                    .add(\"availabilities\", availabilities)","lastModifiedDate":"2024-03-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tsulim":72,"iynixil":12,"JerryWang0000":16,"Pluiexo":3,"-":205}},{"path":"src/main/java/staffconnect/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting StaffConnect as requested ...\";","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tsulim":3,"-":16}},{"path":"src/main/java/staffconnect/logic/commands/FavCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.model.person.PersonUtil.createPersonWithFavouriteStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Favourite;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":" * Sets a person as favourite in the staff book.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"public class FavCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"    public static final String COMMAND_WORD \u003d \"fav\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets a person as favourite in the staff book. \"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_SET_PERSON_FAVOURITE_SUCCESS \u003d \"Person set as favourite: %1$s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_DUPLICATE_FAV \u003d \"This person is already your favourite in the staff book.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"     * @param targetIndex of the person in the filtered person list to set as favourite.","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"    public FavCommand(Index targetIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"        Person personToFav \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"        if (personToFav.getFavourite().hasFavourite()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FAV);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"        Person favPerson \u003d createFavPerson(personToFav);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"        model.setPerson(personToFav, favPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"        return new CommandResult(String.format(MESSAGE_SET_PERSON_FAVOURITE_SUCCESS, Messages.format(favPerson)));","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToFav}.","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"    private static Person createFavPerson(Person personToFav) {","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"        assert personToFav !\u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"        Favourite updatedFavourite \u003d new Favourite(true);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"        Person favPerson \u003d createPersonWithFavouriteStatus(personToFav, updatedFavourite);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"        return favPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        if (!(other instanceof FavCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"tsulim"},"content":"        FavCommand otherFavCommand \u003d (FavCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"        return targetIndex.equals(otherFavCommand.targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"                .toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":97}},{"path":"src/main/java/staffconnect/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasAvailabilitiesPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasFacultyPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasModulePredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasTagsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":" * Filters all persons in staff book whose module code or faculty or","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":" * tags include the given filtering criteria.","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":" * Criteria matching is case-insensitive.","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all persons in staff book whose\"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"            + \" module, faculty, tags or availabilities contain the specified criteria (case-insensitive)\"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"            + \" and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE]\"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"            + \" [\" + PREFIX_FACULTY + \"FACULTY]\"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"            + \" [\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"            + \" [\" + PREFIX_AVAILABILITY + \"AVAILABILITY]...\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"            + PREFIX_TAG + \"BestProf\";","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    private final PersonHasModulePredicate modulePredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    private final PersonHasFacultyPredicate facultyPredicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    private final PersonHasTagsPredicate tagsPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    private final PersonHasAvailabilitiesPredicate availabilitiesPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    private final Predicate\u003cPerson\u003e personPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"     * Creates a FilterCommand to filter for the specified {@code Module},","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"     * {@code Faculty}, {@code Tags}, {@code Availabilities}.","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"    public FilterCommand(PersonHasModulePredicate modulePredicate, PersonHasFacultyPredicate facultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"            PersonHasTagsPredicate tagsPredicate, PersonHasAvailabilitiesPredicate availabilitiesPredicate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"        this.modulePredicate \u003d modulePredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        this.facultyPredicate \u003d facultyPredicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"        this.tagsPredicate \u003d tagsPredicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"        this.availabilitiesPredicate \u003d availabilitiesPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        this.personPredicate \u003d setPersonPredicate();","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"        model.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getSortedFilteredPersonList().size()));","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"     * Sets the filtering criteria for a person, given any {@code Module},","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"     * {@code Faculty}, {@code Tags}, {@code Availabilities}.","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"     * @return the person predicate to filter persons from.","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"    private Predicate\u003cPerson\u003e setPersonPredicate() {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"        return this.modulePredicate.and(facultyPredicate.and(tagsPredicate.and(availabilitiesPredicate)));","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"        return modulePredicate.toString().equals(otherFilterCommand.modulePredicate.toString())","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"                \u0026\u0026 facultyPredicate.toString().equals(otherFilterCommand.facultyPredicate.toString())","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"                \u0026\u0026 tagsPredicate.toString().equals(otherFilterCommand.tagsPredicate.toString())","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"                \u0026\u0026 availabilitiesPredicate.toString().equals(otherFilterCommand.availabilitiesPredicate.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"                .add(\"modulePredicate\", modulePredicate)","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"                .add(\"facultyPredicate\", facultyPredicate)","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"                .add(\"tagsPredicate\", tagsPredicate)","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"                .add(\"availabilitiesPredicate\", availabilitiesPredicate)","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"                .toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"tsulim":1,"iynixil":103}},{"path":"src/main/java/staffconnect/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":" * Finds and lists all persons in staff book whose name contains any of the argument keywords.","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getSortedFilteredPersonList().size()));","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tsulim":6,"iynixil":1,"-":51}},{"path":"src/main/java/staffconnect/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":2,"-":19}},{"path":"src/main/java/staffconnect/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.model.person.comparators.DefaultComparator.DEFAULT_COMPARATOR;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":" * Lists all persons in the staff book to the user.","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"        model.updateSortedPersonList(DEFAULT_COMPARATOR);","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":6,"-":20}},{"path":"src/main/java/staffconnect/logic/commands/RefreshCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateThenDescriptionComparator.MEETING_DATE_THEN_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.PersonUtil;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":" * Deletes all meetings that are outdated.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":" * An outdated meeting refers to a meeting that starts before the user types in the command.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"public class RefreshCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"    public static final String COMMAND_WORD \u003d \"refresh\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"    public static final String REFRESH_SUCCESS \u003d \"Upcoming meetings successfully refreshed. \"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"            + \"All outdated meetings are deleted.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"    public static final String REFRESH_NO_MODIFICATION \u003d \"Upcoming meetings successfully refreshed. \"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"            + \"No meetings are outdated.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"     * Deletes all outdated meetings.","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"     * @return The detailed information of all deleted meetings","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"     * @throws CommandException if the execution is unsuccessful.","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"        boolean isAnyPersonModified \u003d false;","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"        String deletedMeetings \u003d \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"            Person person \u003d lastShownList.get(i);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"            boolean isModified \u003d false;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"JerryWang0000"},"content":"            List\u003cMeeting\u003e toDelete \u003d findMeetingstoDelete(person, currentTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"JerryWang0000"},"content":"            if (!toDelete.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"                isModified \u003d true;","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"                isAnyPersonModified \u003d true;","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"            if (isModified) {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"                deletedMeetings +\u003d constructStringofMeetings(i + 1, person, toDelete);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"                Person newPerson \u003d deleteMeetings(person, toDelete);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"JerryWang0000"},"content":"                newPerson.updateSortedMeetingList(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"                model.setPerson(person, newPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"JerryWang0000"},"content":"        if (isAnyPersonModified) {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"            return new CommandResult(String.format(\"%s\\n%s\\n%s\", REFRESH_SUCCESS,","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"JerryWang0000"},"content":"                    \"The following meeting(s) is(are) deleted\", deletedMeetings));","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"JerryWang0000"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"JerryWang0000"},"content":"            return new CommandResult(REFRESH_NO_MODIFICATION);","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"JerryWang0000"},"content":"    private List\u003cMeeting\u003e findMeetingstoDelete(Person person, LocalDateTime currentTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"JerryWang0000"},"content":"        List\u003cMeeting\u003e meetingShownList \u003d person.getFilteredMeetings();","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"JerryWang0000"},"content":"        List\u003cMeeting\u003e toDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"        for (Meeting meeting : meetingShownList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"JerryWang0000"},"content":"            if (meeting.getStartDate().getDateTime().isBefore(currentTime)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"JerryWang0000"},"content":"                toDelete.add(meeting);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"JerryWang0000"},"content":"        return toDelete;","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"JerryWang0000"},"content":"    private String constructStringofMeetings(int index, Person person, List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"JerryWang0000"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"JerryWang0000"},"content":"        for (Meeting meeting : meetings) {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"JerryWang0000"},"content":"            result +\u003d person.getName() + String.format(\" (Index: %d) %s\\n\", index, meeting);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"JerryWang0000"},"content":"        return result;","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"JerryWang0000"},"content":"    private Person deleteMeetings(Person person, List\u003cMeeting\u003e toDelete) {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"JerryWang0000"},"content":"        Person newPerson \u003d PersonUtil.copyPerson(person);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"JerryWang0000"},"content":"        for (Meeting meeting : toDelete) {","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"JerryWang0000"},"content":"            newPerson.removeMeeting(meeting);","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"JerryWang0000"},"content":"        return newPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"JerryWang0000"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"JerryWang0000"},"content":"        return obj instanceof RefreshCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"JerryWang0000"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"JerryWang0000"},"content":"        return \"Refresh\";","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"JerryWang0000":106}},{"path":"src/main/java/staffconnect/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":" * Sorts and lists all persons in staff book in ascending order.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":" * Attribute shorthand matching is not case-insensitive.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"    public static final String MESSAGE_SORT_LIST_SUCCESS \u003d \"Sorted list: %1$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sort all persons by the attribute specified \"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"            + \"Parameters: [ATTRIBUTE]\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"            + \"[\" + PREFIX_NAME + \"] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"            + \"[\" + PREFIX_PHONE + \"] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"            + \"[\" + PREFIX_MODULE + \"] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"            + \"[\" + PREFIX_FACULTY + \"] \"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"            + \"[\" + PREFIX_VENUE + \"] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"    public SortCommand(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        model.updateSortedPersonList(comparator);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"                String.format(MESSAGE_SORT_LIST_SUCCESS, comparator));","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"        SortCommand otherSortCommand \u003d (SortCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"        return comparator.equals(otherSortCommand.comparator);","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"whitesnowx"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"whitesnowx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"whitesnowx"},"content":"                .add(\"comparator\", comparator)","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"whitesnowx"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"whitesnowx":71}},{"path":"src/main/java/staffconnect/logic/commands/UnfavCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.model.person.PersonUtil.createPersonWithFavouriteStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Favourite;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":" * Removes a person as favourite in the staff book.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"public class UnfavCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"    public static final String COMMAND_WORD \u003d \"unfav\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a person as favourite in the staff book. \"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_REMOVE_PERSON_FAVOURITE_SUCCESS \u003d \"Person removed as favourite: %1$s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_DUPLICATE_UNFAV \u003d \"This person is already no longer your favourite \"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"            + \"in the staff book.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"     * @param targetIndex of the person in the filtered person list to remove as favourite.","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"    public UnfavCommand(Index targetIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"        Person personToUnfav \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        if (!personToUnfav.getFavourite().hasFavourite()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_UNFAV);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        Person unfavPerson \u003d createUnfavPerson(personToUnfav);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"        model.setPerson(personToUnfav, unfavPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_PERSON_FAVOURITE_SUCCESS, Messages.format(unfavPerson)));","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToUnfav}.","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"    private static Person createUnfavPerson(Person personToUnfav) {","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"        assert personToUnfav !\u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"        Favourite updatedFavourite \u003d new Favourite(false);","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"        Person unfavPerson \u003d createPersonWithFavouriteStatus(personToUnfav, updatedFavourite);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"        return unfavPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"        if (!(other instanceof UnfavCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"        UnfavCommand otherUnfavCommand \u003d (UnfavCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"tsulim"},"content":"        return targetIndex.equals(otherUnfavCommand.targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"                .toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":96}},{"path":"src/main/java/staffconnect/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tsulim":1,"-":16}},{"path":"src/main/java/staffconnect/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"                PREFIX_EMAIL, PREFIX_MODULE, PREFIX_FACULTY, PREFIX_VENUE, PREFIX_TAG, PREFIX_AVAILABILITY);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_MODULE,","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"                PREFIX_FACULTY, PREFIX_VENUE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"            PREFIX_MODULE, PREFIX_FACULTY, PREFIX_VENUE);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        Module module \u003d ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get());","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"        Venue venue \u003d ParserUtil.parseVenue(argMultimap.getValue(PREFIX_VENUE).get());","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"        Faculty faculty \u003d ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).get());","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        Set\u003cAvailability\u003e availabilityList \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"                ParserUtil.parseAvailabilities(argMultimap.getAllValues(PREFIX_AVAILABILITY));","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"        Favourite favourite \u003d new Favourite(false);","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        Person person \u003d new Person(name, phone, email, module, faculty, venue, tagList, availabilityList, favourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tsulim":29,"iynixil":3,"JerryWang0000":3,"-":39}},{"path":"src/main/java/staffconnect/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_DESCRIPTION;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_STARTDATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.commands.AddMeetingCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDateTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":" * Parses input arguments and creates a new AddMeetingCommand object","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMeetingCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"     * and returns an AddMeetingCommand object for execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_MEETING_DESCRIPTION, PREFIX_MEETING_STARTDATE);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        Index index;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"                    AddMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_MEETING_DESCRIPTION, PREFIX_MEETING_STARTDATE);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEETING_DESCRIPTION, PREFIX_MEETING_STARTDATE)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescription description \u003d ParserUtil.parseDescription(argMultimap.getValue(","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"                PREFIX_MEETING_DESCRIPTION).get());","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        MeetingDateTime startDate \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_MEETING_STARTDATE).get());","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"        Meeting meeting \u003d new Meeting(description, startDate);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"        return new AddMeetingCommand(index, meeting);","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pluiexo":65}},{"path":"src/main/java/staffconnect/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"tsulim":3,"-":75}},{"path":"src/main/java/staffconnect/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"tsulim":1,"-":147}},{"path":"src/main/java/staffconnect/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"    public static final Prefix PREFIX_FACULTY \u003d new Prefix(\"f/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    public static final Prefix PREFIX_VENUE \u003d new Prefix(\"v/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"    public static final Prefix PREFIX_AVAILABILITY \u003d new Prefix(\"a/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    public static final Prefix PREFIX_MEETING_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    public static final Prefix PREFIX_MEETING_STARTDATE \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    public static final Prefix PREFIX_MEETING_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tsulim":3,"iynixil":1,"JerryWang0000":1,"Pluiexo":4,"-":13}},{"path":"src/main/java/staffconnect/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tsulim":5,"-":24}},{"path":"src/main/java/staffconnect/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_INDEX;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEETING_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        Index personIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"            personIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"                    DeleteMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEETING_INDEX)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_MEETING_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        Index meetingIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"            meetingIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MEETING_INDEX).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"                    DeleteMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        return new DeleteMeetingCommand(personIndex, meetingIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Pluiexo":62}},{"path":"src/main/java/staffconnect/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"                    PREFIX_MODULE, PREFIX_FACULTY, PREFIX_VENUE, PREFIX_TAG, PREFIX_AVAILABILITY);","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_MODULE,","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"                PREFIX_FACULTY, PREFIX_VENUE);","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"            editPersonDescriptor.setModule(ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"JerryWang0000"},"content":"        if (argMultimap.getValue(PREFIX_FACULTY).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"JerryWang0000"},"content":"            editPersonDescriptor.setFaculty(ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"        if (argMultimap.getValue(PREFIX_VENUE).isPresent()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"            editPersonDescriptor.setVenue(ParserUtil.parseVenue(argMultimap.getValue(PREFIX_VENUE).get()));","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        parseAvailabilitiesForEdit(argMultimap.getAllValues(PREFIX_AVAILABILITY))","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"                .ifPresent(editPersonDescriptor::setAvailabilities);","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"     * Parses {@code Collection\u003cString\u003e availabilities} into a {@code Set\u003cAvailability\u003e}","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"tsulim"},"content":"     * if {@code availabilities} is non-empty.","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"tsulim"},"content":"     * If {@code availabilities} contain only one element which is an empty string, it will be parsed","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"     * into a {@code Set\u003cAvailability\u003e} containing zero availabilities.","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"tsulim"},"content":"    private Optional\u003cSet\u003cAvailability\u003e\u003e parseAvailabilitiesForEdit(Collection\u003cString\u003e availabilities)","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"tsulim"},"content":"            throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"tsulim"},"content":"        assert availabilities !\u003d null;","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"        if (availabilities.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"tsulim"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"tsulim"},"content":"        Collection\u003cString\u003e availabilitySet \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"tsulim"},"content":"                availabilities.size() \u003d\u003d 1 \u0026\u0026 availabilities.contains(\"\")","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"tsulim"},"content":"                        ? Collections.emptySet()","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"                        : availabilities;","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"        return Optional.of(ParserUtil.parseAvailabilities(availabilitySet));","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tsulim":42,"iynixil":3,"JerryWang0000":4,"-":69}},{"path":"src/main/java/staffconnect/logic/parser/FavCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.FavCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":" * Parses input arguments and creates a new FavCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"public class FavCommandParser implements Parser\u003cFavCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"     * Parses the given {@code String} of arguments in the context of the FavCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"     * and returns a FavCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"    public FavCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"        Index index;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FavCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        return new FavCommand(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":29}},{"path":"src/main/java/staffconnect/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import staffconnect.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasAvailabilitiesPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasFacultyPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasModulePredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasTagsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":" * Parses input arguments and creates a new FilterCommand object.","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * FilterCommand and returns a FilterCommand object for execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_FACULTY, PREFIX_TAG,","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"                PREFIX_AVAILABILITY);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        if (!argMultimap.getValue(PREFIX_MODULE).isPresent() \u0026\u0026 !argMultimap.getValue(PREFIX_FACULTY).isPresent()","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_TAG).isPresent()","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_AVAILABILITY).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_MODULE, PREFIX_FACULTY);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"        Module module \u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"        Faculty faculty \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e tags \u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e availabilities \u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"            module \u003d ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get());","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"        if (argMultimap.getValue(PREFIX_FACULTY).isPresent()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"            faculty \u003d ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"            tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"        if (argMultimap.getValue(PREFIX_AVAILABILITY).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"            availabilities \u003d ParserUtil.parseAvailabilities(argMultimap.getAllValues(PREFIX_AVAILABILITY));","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d new PersonHasModulePredicate(module);","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d new PersonHasFacultyPredicate(faculty);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d new PersonHasTagsPredicate(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d new PersonHasAvailabilitiesPredicate(availabilities);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"        return new FilterCommand(modulePredicate, facultyPredicate, tagsPredicate, availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"iynixil":72}},{"path":"src/main/java/staffconnect/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.FindCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tsulim":4,"iynixil":1,"-":28}},{"path":"src/main/java/staffconnect/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.Command;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"tsulim":3,"-":13}},{"path":"src/main/java/staffconnect/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDateTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"JerryWang0000"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"JerryWang0000"},"content":"     * Parses a {@code String faculty} into an {@code Faculty}.","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"JerryWang0000"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"JerryWang0000"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"JerryWang0000"},"content":"     * @throws ParseException if the given {@code faculty} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"JerryWang0000"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"JerryWang0000"},"content":"    public static Faculty parseFaculty(String faculty) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"JerryWang0000"},"content":"        requireNonNull(faculty);","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"JerryWang0000"},"content":"        String trimmedFaculty \u003d faculty.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"JerryWang0000"},"content":"        if (!Faculty.isValidFaculty(trimmedFaculty)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"JerryWang0000"},"content":"            throw new ParseException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"JerryWang0000"},"content":"        return new Faculty(trimmedFaculty);","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"     * Parses a {@code String venue} into an {@code Venue}.","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"iynixil"},"content":"     * @throws ParseException if the given {@code venue} is invalid.","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"    public static Venue parseVenue(String venue) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"        requireNonNull(venue);","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"        String trimmedVenue \u003d venue.trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"        if (!Venue.isValidVenue(trimmedVenue)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"            throw new ParseException(Venue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"        return new Venue(trimmedVenue);","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"     * Parses a {@code String module} into an {@code Module}.","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"tsulim"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"tsulim"},"content":"    public static Module parseModule(String module) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"tsulim"},"content":"        requireNonNull(module);","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"tsulim"},"content":"        String trimmedModule \u003d module.trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"tsulim"},"content":"        if (!Module.isValidModule(trimmedModule)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"tsulim"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"tsulim"},"content":"        return new Module(trimmedModule);","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"Pluiexo"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"Pluiexo"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"Pluiexo"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"Pluiexo"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"Pluiexo"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"Pluiexo"},"content":"        return tagSet;","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"Pluiexo"},"content":"     * Parses a {@code String description} into a {@code MeetingDescription}.","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"Pluiexo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"Pluiexo"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"Pluiexo"},"content":"    public static MeetingDescription parseDescription(String description) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"Pluiexo"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"Pluiexo"},"content":"        if (!MeetingDescription.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"Pluiexo"},"content":"            throw new ParseException(MeetingDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"Pluiexo"},"content":"        return new MeetingDescription(trimmedDescription);","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"Pluiexo"},"content":"     * Parses a {@code String dateTime} into a {@code MeetingDateTime}.","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"Pluiexo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"Pluiexo"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"Pluiexo"},"content":"    public static MeetingDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"Pluiexo"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"Pluiexo"},"content":"        if (!MeetingDateTime.isValidMeetDateTime(trimmedDateTime)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"Pluiexo"},"content":"            throw new ParseException(MeetingDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"Pluiexo"},"content":"        return new MeetingDateTime(trimmedDateTime);","lastModifiedDate":"2024-03-24"},{"lineNumber":189,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":191,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"tsulim"},"content":"     * Parses {@code Collection\u003cString\u003e availabilities} into a {@code Set\u003cAvailability\u003e}.","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"tsulim"},"content":"    public static Set\u003cAvailability\u003e parseAvailabilities(Collection\u003cString\u003e availabilities) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":195,"author":{"gitId":"tsulim"},"content":"        requireNonNull(availabilities);","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"tsulim"},"content":"        final Set\u003cAvailability\u003e availabilitySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"tsulim"},"content":"        for (String value : availabilities) {","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"tsulim"},"content":"            availabilitySet.add(parseAvailability(value));","lastModifiedDate":"2024-03-15"},{"lineNumber":199,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":200,"author":{"gitId":"tsulim"},"content":"        return availabilitySet;","lastModifiedDate":"2024-03-15"},{"lineNumber":201,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":202,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"Pluiexo"},"content":"     * Parses a {@code String availability} into a {@code Availability}.","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"Pluiexo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"Pluiexo"},"content":"     * @throws ParseException if the given {@code availability} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":209,"author":{"gitId":"Pluiexo"},"content":"    public static Availability parseAvailability(String availability) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":210,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(availability);","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"Pluiexo"},"content":"        String trimmedAvailability \u003d availability.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"Pluiexo"},"content":"        if (!Availability.isValidAvailability(trimmedAvailability)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":213,"author":{"gitId":"Pluiexo"},"content":"            throw new ParseException(Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":214,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"Pluiexo"},"content":"        return new Availability(trimmedAvailability);","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tsulim":45,"iynixil":9,"Pluiexo":59,"JerryWang0000":16,"-":88}},{"path":"src/main/java/staffconnect/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"tsulim":1,"-":41}},{"path":"src/main/java/staffconnect/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.FacultyComparator.FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.ModuleComparator.MODULE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.PhoneComparator.PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.VenueComparator.VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.logic.commands.SortCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"        return new SortCommand(parseComparatorForKeywords(trimmedArgs));","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"    private Comparator\u003cPerson\u003e parseComparatorForKeywords(String keyword) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        if (keyword.equals(PREFIX_NAME.getPrefix())) {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"            return NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        } else if (keyword.equals(PREFIX_PHONE.getPrefix())) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"            return PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"        } else if (keyword.equals(PREFIX_MODULE.getPrefix())) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"            return MODULE_COMPARATOR;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"        } else if (keyword.equals(PREFIX_FACULTY.getPrefix())) {","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"            return FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"        } else if (keyword.equals(PREFIX_VENUE.getPrefix())) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"            return VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"whitesnowx":61}},{"path":"src/main/java/staffconnect/logic/parser/StaffConnectParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.commands.AddMeetingCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.Command;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.FavCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"import staffconnect.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.FindCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.ListCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.logic.commands.RefreshCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.logic.commands.SortCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.UnfavCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"public class StaffConnectParser {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StaffConnectParser.class);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"        switch (commandWord.toLowerCase()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"whitesnowx"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"whitesnowx"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"        case FavCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"            return new FavCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"tsulim"},"content":"        case UnfavCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"            return new UnfavCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"JerryWang0000"},"content":"        case RefreshCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"JerryWang0000"},"content":"            return new RefreshCommand();","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":23,"iynixil":4,"Pluiexo":9,"JerryWang0000":5,"whitesnowx":4,"-":69}},{"path":"src/main/java/staffconnect/logic/parser/UnfavCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.UnfavCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":" * Parses input arguments and creates a new UnfavCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"public class UnfavCommandParser implements Parser\u003cUnfavCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"     * Parses the given {@code String} of arguments in the context of the UnfavCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"     * and returns a UnfavCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"    public UnfavCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"        Index index;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnfavCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        return new UnfavCommand(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":29}},{"path":"src/main/java/staffconnect/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"tsulim":2,"-":15}},{"path":"src/main/java/staffconnect/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"     * Returns the user prefs\u0027 StaffConnect file path.","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"    Path getStaffConnectFilePath();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"     * Sets the user prefs\u0027 StaffConnect file path.","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"    void setStaffConnectFilePath(Path staffConnectFilePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"     * Replaces staff book data with the data in {@code staffBook}.","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"    void setStaffBook(ReadOnlyStaffBook staffBook);","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"    /** Returns the StaffBook */","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"    ReadOnlyStaffBook getStaffBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"     * The person must exist in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"     * {@code person} must not already exist in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"     * {@code target} must exist in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"     * Returns index of specified person in the staff book.","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"    int indexOf(Person person);","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"    ObservableList\u003cPerson\u003e getSortedFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"whitesnowx"},"content":"     * Updates the sort attribute of the sorted person list to sort by the given {@code predicate}.","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"whitesnowx"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"whitesnowx"},"content":"    void updateSortedPersonList(Comparator\u003cPerson\u003e com);","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsulim":22,"whitesnowx":7,"-":70}},{"path":"src/main/java/staffconnect/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.comparators.DefaultComparator;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.comparators.FavouriteComparator;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":" * Represents the in-memory model of the staff book data.","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"    private final StaffBook staffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"    private final SortedList\u003cPerson\u003e sortedFilteredPersons;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"     * Initializes a ModelManager with the given staffBook and userPrefs.","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"    public ModelManager(ReadOnlyStaffBook staffBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"        requireAllNonNull(staffBook, userPrefs);","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"        logger.fine(\"Initializing with staff book: \" + staffBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"        this.staffBook \u003d new StaffBook(staffBook);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.staffBook.getPersonList());","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        sortedFilteredPersons \u003d new SortedList\u003c\u003e(filteredPersons,","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"                new FavouriteComparator(new DefaultComparator(this.staffBook)));","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"        this(new StaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"    public Path getStaffConnectFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"        return userPrefs.getStaffConnectFilePath();","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"    public void setStaffConnectFilePath(Path staffConnectFilePath) {","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"        requireNonNull(staffConnectFilePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"        userPrefs.setStaffConnectFilePath(staffConnectFilePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StaffBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"    public void setStaffBook(ReadOnlyStaffBook staffBook) {","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"        this.staffBook.resetData(staffBook);","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"    public ReadOnlyStaffBook getStaffBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"        return staffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"        return staffBook.hasPerson(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"tsulim"},"content":"        staffBook.removePerson(target);","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"tsulim"},"content":"        staffBook.addPerson(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"        staffBook.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"tsulim"},"content":"    public int indexOf(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"tsulim"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"tsulim"},"content":"        assert hasPerson(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"tsulim"},"content":"        return staffBook.indexOf(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"tsulim"},"content":"     * {@code versionedStaffBook}","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"tsulim"},"content":"    public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"whitesnowx"},"content":"        return sortedFilteredPersons;","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"whitesnowx"},"content":"    public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"whitesnowx"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"whitesnowx"},"content":"        filteredPersons.setPredicate(null);","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"tsulim"},"content":"        if (comparator instanceof DefaultComparator) {","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"tsulim"},"content":"            sortedFilteredPersons.setComparator(new FavouriteComparator(new DefaultComparator(this.staffBook)));","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"tsulim"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"tsulim"},"content":"            sortedFilteredPersons.setComparator(new FavouriteComparator(comparator));","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"tsulim"},"content":"        return staffBook.equals(otherModelManager.staffBook)","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":47,"whitesnowx":11,"-":115}},{"path":"src/main/java/staffconnect/model/ReadOnlyStaffBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":" * Unmodifiable view of a staff book","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"public interface ReadOnlyStaffBook {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":4,"-":13}},{"path":"src/main/java/staffconnect/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"    Path getStaffConnectFilePath();","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"tsulim":3,"-":13}},{"path":"src/main/java/staffconnect/model/StaffBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.UniquePersonList;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"public class StaffBook implements ReadOnlyStaffBook {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"    public StaffBook() {}","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"     * Creates a StaffBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"    public StaffBook(ReadOnlyStaffBook toBeCopied) {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"     * Resets the existing data of this {@code StaffBook} with {@code newData}.","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"    public void resetData(ReadOnlyStaffBook newData) {","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"     * Adds a person to the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"     * The person must not already exist in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"     * {@code target} must exist in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"     * Removes {@code key} from this {@code StaffBook}.","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"     * {@code key} must exist in the staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"tsulim"},"content":"     * Returns index of specified person in the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"    public int indexOf(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"tsulim"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"tsulim"},"content":"        assert hasPerson(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"        return persons.indexOf(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"tsulim"},"content":"        if (!(other instanceof StaffBook)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"tsulim"},"content":"        StaffBook otherStaffBook \u003d (StaffBook) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"tsulim"},"content":"        return persons.equals(otherStaffBook.persons);","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":29,"-":110}},{"path":"src/main/java/staffconnect/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"    private Path staffConnectFilePath \u003d Paths.get(\"data\" , \"staffconnect.json\");","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"        setStaffConnectFilePath(newUserPrefs.getStaffConnectFilePath());","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"    public Path getStaffConnectFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"        return staffConnectFilePath;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"    public void setStaffConnectFilePath(Path staffConnectFilePath) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"        requireNonNull(staffConnectFilePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"        this.staffConnectFilePath \u003d staffConnectFilePath;","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"                \u0026\u0026 staffConnectFilePath.equals(otherUserPrefs.staffConnectFilePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"        return Objects.hash(guiSettings, staffConnectFilePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"        sb.append(\"\\nLocal data file location : \" + staffConnectFilePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":12,"-":76}},{"path":"src/main/java/staffconnect/model/availability/Availability.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.availability;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":" * Represents a Person\u0027s availability in the staff book.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAvailability(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"public class Availability {","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"[DAY_OF_THE_WEEK] [START_TIME] [END_TIME] E.g. mon 09:00 13:00\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"            + \"[DAY_OF_THE_WEEK] Should be a week of the day, the full word or the first syllable of the word\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"            + \"[START_TIME], [END_TIME] Using a 24H digital time format HH:mm\\n\";","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"    public static final String VALIDATION_REGEX_DAY \u003d \"(?i)((mon|tue(s)?|wed(nes)?|thu(r)?(rs)?|fri|sat(ur)?|sun)\"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"            + \"(day)?)\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"    public static final String VALIDATION_REGEX \u003d VALIDATION_REGEX_DAY + \" [0-9]{2}:[0-9]{2} [0-9]{2}:[0-9]{2}\";","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"    private final DayOfWeek day;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"     * Constructs a {@code Availability}.","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"     * @param availability A valid availability.","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"    public Availability(String availability) {","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"        requireNonNull(availability);","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"        checkArgument(isValidAvailability(availability), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"        String [] availabilityFields \u003d availability.split(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"        day \u003d parseToDayOfWeek(availabilityFields[0]);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"        startTime \u003d parseToLocalTime(availabilityFields[1]);","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        endTime \u003d parseToLocalTime(availabilityFields[2]);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        value \u003d day + \" \" + startTime + \" \" + endTime;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"     * Returns true if a given string is a valid availability.","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"    public static boolean isValidAvailability(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"        String [] availabilityFields \u003d test.split(\" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"        if (!isValidLocalTime(availabilityFields[1]) || !isValidLocalTime(availabilityFields[2])) {","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"        LocalTime startTime \u003d parseToLocalTime(availabilityFields[1]);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"        LocalTime endTime \u003d parseToLocalTime(availabilityFields[2]);","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"whitesnowx"},"content":"        return startTime.isBefore(endTime);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"whitesnowx"},"content":"     * Returns true if a given string is a valid LocalTime.","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"whitesnowx"},"content":"    public static boolean isValidLocalTime(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"whitesnowx"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"whitesnowx"},"content":"            LocalTime.parse(test, timeFormatter);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"whitesnowx"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"whitesnowx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"whitesnowx"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"whitesnowx"},"content":"     * Returns a standardised Day of the Week.","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"whitesnowx"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"whitesnowx"},"content":"     * @param validDay a valid Day String to be translated.","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"whitesnowx"},"content":"     * @return Corresponding Day of Week.","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"whitesnowx"},"content":"    public static DayOfWeek parseToDayOfWeek(String validDay) {","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"whitesnowx"},"content":"        if (validDay.matches(\"(?i)(mon)(day)?\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"whitesnowx"},"content":"            return DayOfWeek.MONDAY;","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"whitesnowx"},"content":"        } else if (validDay.matches(\"(?i)(tue)(s)?(sday)?\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"whitesnowx"},"content":"            return DayOfWeek.TUESDAY;","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"whitesnowx"},"content":"        } else if (validDay.matches(\"(?i)(wed)(nes)?(nesday)?\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"whitesnowx"},"content":"            return DayOfWeek.WEDNESDAY;","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"whitesnowx"},"content":"        } else if (validDay.matches(\"(?i)(thu)(r)?(rs)?(rsday)?\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"whitesnowx"},"content":"            return DayOfWeek.THURSDAY;","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"whitesnowx"},"content":"        } else if (validDay.matches(\"(?i)(fri)(day)?\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"whitesnowx"},"content":"            return DayOfWeek.FRIDAY;","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"whitesnowx"},"content":"        } else if (validDay.matches(\"(?i)(sat)(ur)?(urday)?\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"whitesnowx"},"content":"            return DayOfWeek.SATURDAY;","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"whitesnowx"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"whitesnowx"},"content":"            return DayOfWeek.SUNDAY;","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"whitesnowx"},"content":"     * Returns a standardised LocalTime.","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"whitesnowx"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"whitesnowx"},"content":"     * @param validTime a valid Time String to be translated.","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"whitesnowx"},"content":"     * @return Corresponding Local Time.","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"whitesnowx"},"content":"    public static LocalTime parseToLocalTime(String validTime) {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"whitesnowx"},"content":"        return LocalTime.parse(validTime, timeFormatter);","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"whitesnowx"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"whitesnowx"},"content":"        return \u0027[\u0027 + value + \u0027]\u0027;","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"whitesnowx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"whitesnowx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"whitesnowx"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"whitesnowx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"whitesnowx"},"content":"        if (!(other instanceof Availability)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"whitesnowx"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"whitesnowx"},"content":"        Availability otherAvailability \u003d (Availability) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"whitesnowx"},"content":"        return value.equals(otherAvailability.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"whitesnowx"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"whitesnowx"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"whitesnowx":138}},{"path":"src/main/java/staffconnect/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":" * Represents a Meeting event in the staff book.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"public class Meeting {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    private final MeetingDescription description;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    private final MeetingDateTime startDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"     * Constructs a {@code Meeting}.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"     * @param description A valid meeting description.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"     * @param startDate   A valid time and date for the meeting.","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    public Meeting(MeetingDescription description, MeetingDateTime startDate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"        requireAllNonNull(description, startDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"    public MeetingDescription getDescription() {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        return description;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"    public MeetingDateTime getStartDate() {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        return startDate;","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        return Objects.hash(description, startDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"        return description.equals(otherMeeting.description) \u0026\u0026 startDate.equals(otherMeeting.startDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"     * Formats state as text for viewing.","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        return startDate + \":\" + description;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Pluiexo":67}},{"path":"src/main/java/staffconnect/model/meeting/MeetingBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":" * Wraps all the meeting data at the Person level","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"public class MeetingBook implements ReadOnlyMeetingBook {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    private final UniqueMeetingList meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    public MeetingBook() {}","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"     * Creates a MeetingBook using the Meetings in the {@code toBeCopied}","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"    public MeetingBook(ReadOnlyMeetingBook toBeCopied) {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"        this();","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"     * Replaces the contents of the meeting list with {@code meetings}.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"     * Resets the existing data of this {@code MeetingBook} with {@code newData}.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"    public void resetData(ReadOnlyMeetingBook newData) {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the meeting book.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"     * Adds a meeting to the meeting book.","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"     * The meeting must not already exist in the meeting book.","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    public void addMeeting(Meeting toAdd) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        meetings.add(toAdd);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"     * Removes {@code key} from this {@code MeetingBook}.","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"     * {@code key} must exist in the meeting book.","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        meetings.remove(key);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"                .add(\"meetings\", meetings)","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof MeetingBook)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"        MeetingBook otherMeetingBook \u003d (MeetingBook) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"        return meetings.equals(otherMeetingBook.meetings);","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"        return meetings.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Pluiexo":99}},{"path":"src/main/java/staffconnect/model/meeting/MeetingDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":" * Represents a Meeting\u0027s starting time in the staff book.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMeetDateTime(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"public class MeetingDateTime {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"DateTime should be of the correct format and values dd/mm/yyyy \"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"            + \"HH:mm\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    private static final DateTimeFormatter PROCESS_FORMAT \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/uuuu HH:mm\").withResolverStyle(java.time.format.ResolverStyle.STRICT);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    private final LocalDateTime value;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"     * Constructs a {@code MeetingDateTime}.","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"     * @param date A valid date.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"    public MeetingDateTime(String date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"        checkArgument(isValidMeetDateTime(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"        value \u003d java.time.LocalDateTime.parse(date, PROCESS_FORMAT);","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    public static boolean isValidMeetDateTime(String test) {","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isParsable(test);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    //Wrapper method only unique to this class","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    private static boolean isParsable(String test) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"            LocalDateTime.parse(test, PROCESS_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"        return value;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof MeetingDateTime)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"        MeetingDateTime otherDate \u003d (MeetingDateTime) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"        return value.equals(otherDate.value);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"        return value.format(PROCESS_FORMAT);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Pluiexo":82}},{"path":"src/main/java/staffconnect/model/meeting/MeetingDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":" * Represents a Meeting\u0027s description in the staff book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"public class MeetingDescription {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"        \"MeetingDescription should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    /*","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"    public final String description;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"     * Constructs a {@code MeetingDescription}.","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"     * @param textDescription A valid description.","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"    public MeetingDescription(String textDescription) {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(textDescription);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        checkArgument(isValidDescription(textDescription), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        description \u003d textDescription;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        return description.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof MeetingDescription)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescription otherDescription \u003d (MeetingDescription) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        return description.equals(otherDescription.description);","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        return description;","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Pluiexo":66}},{"path":"src/main/java/staffconnect/model/meeting/MeetingDescriptionContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":" * Tests that a {@code Meeting}\u0027s {@code MeetingDescription} matches any of the keywords given.","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"public class MeetingDescriptionContainsKeywordPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    public MeetingDescriptionContainsKeywordPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(meeting.getDescription().description, keyword));","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof MeetingDescriptionContainsKeywordPredicate)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescriptionContainsKeywordPredicate","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"                otherNameContainsKeywordsPredicate \u003d (MeetingDescriptionContainsKeywordPredicate) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Pluiexo":45}},{"path":"src/main/java/staffconnect/model/meeting/MeetingManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateThenDescriptionComparator.MEETING_DATE_THEN_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":" * Represents the in-memory model of the person\u0027s meetings","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"public class MeetingManager {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    public static final Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"    private final MeetingBook meetingBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    private final SortedList\u003cMeeting\u003e sortedFilteredMeetings;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    public MeetingManager() {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        this(new MeetingBook());","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"     * Initializes a MeetingBook with the given {@code meetingBook}.","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    public MeetingManager(ReadOnlyMeetingBook meetingBook) {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        requireAllNonNull(meetingBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"        this.meetingBook \u003d new MeetingBook(meetingBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.meetingBook.getMeetingList());","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        sortedFilteredMeetings \u003d new SortedList\u003c\u003e(filteredMeetings);","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        updateSortedMeetingList(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR); //sets the default view to be sorted by date.","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UniqueMeetingList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"     * Updates the sort attribute of the sorted meeting list of MeetingBook to sort by the given comparator.","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"     * @param comparator to decide how to sort the meetings.","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"    public void updateSortedMeetingList(Comparator\u003cMeeting\u003e comparator) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"        filteredMeetings.setPredicate(null);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"        sortedFilteredMeetings.setComparator(comparator);","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"     * Returns the MeetingBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    public ReadOnlyMeetingBook getMeetingBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"        return meetingBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"     * Replaces all the current meeting data in MeetingBook with the current list.","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"     * @param meetingBook the input meeting list to replace to.","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"    public void setMeetingBook(List\u003cMeeting\u003e meetingBook) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        this.meetingBook.setMeetings(meetingBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"     * Checks if the current MeetingBook contains the same meeting.","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"     * @param meeting the meeting to check.","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"     * @return true if a meeting with the same identity as {@code meeting} exists in the meeting list.","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"        return meetingBook.hasMeeting(meeting);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"     * Removes the specified meeting from the MeetingBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"     * @param target meeting to remove .","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"        meetingBook.removeMeeting(target);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"     * Adds a meeting to the current list within MeetingBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"     * @param meeting to add to the MeetingBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"Pluiexo"},"content":"        meetingBook.addMeeting(meeting);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Meeting List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"     * Updates the filter of the filtered meeting list of MeetingBook to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"     * @param predicate to filter the list to.","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"Pluiexo"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"        sortedFilteredMeetings.setComparator(null);","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"Pluiexo"},"content":"     * Gets an unmodifiable list of meetings.","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"Pluiexo"},"content":"     * @return an ObservableList of meetings.","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"Pluiexo"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"Pluiexo"},"content":"        return meetingBook.getMeetingList();","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"Pluiexo"},"content":"     * Returns an unmodifiable view of the list of {@code meeting}.","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"Pluiexo"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"Pluiexo"},"content":"        return sortedFilteredMeetings;","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof MeetingManager)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"Pluiexo"},"content":"        MeetingManager otherModelManager \u003d (MeetingManager) other;","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"Pluiexo"},"content":"        return meetingBook.equals(otherModelManager.meetingBook)","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"Pluiexo"},"content":"                \u0026\u0026 filteredMeetings.equals(otherModelManager.filteredMeetings);","lastModifiedDate":"2024-03-23"},{"lineNumber":147,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":148,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":149,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"Pluiexo":149}},{"path":"src/main/java/staffconnect/model/meeting/ReadOnlyMeetingBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":" * Unmodifiable view of a MeetingBook","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"public interface ReadOnlyMeetingBook {","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"     * Returns an unmodifiable view of the MeetingBook.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Pluiexo":14}},{"path":"src/main/java/staffconnect/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.exception.DuplicateMeetingException;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.exception.MeetingNotFoundException;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"     * Returns true if the list contains an equivalent meeting as the given argument.","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        if (!meetingsAreUnique((meetings))) {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"            return true;","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"        if (!(other instanceof UniqueMeetingList)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"            return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"        UniqueMeetingList otherMeetingList \u003d (UniqueMeetingList) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"        return internalList.equals(otherMeetingList.internalList);","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"Pluiexo"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"    public String toString() {","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"     * Returns true if {@code meetings} contains only unique Meeting.","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"Pluiexo"},"content":"        return meetings.stream().allMatch(new HashSet\u003c\u003e()::add);","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"Pluiexo":113}},{"path":"src/main/java/staffconnect/model/meeting/comparator/MeetingDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting.comparator;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":" * Represents a Comparator for a Meeting\u0027s Date in the staff book.","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"public class MeetingDateComparator implements Comparator\u003cMeeting\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"    public static final MeetingDateComparator MEETING_DATE_COMPARATOR \u003d new MeetingDateComparator();","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    public int compare(Meeting meet, Meeting otherMeet) {","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"        return meet.getStartDate().getDateTime().compareTo(otherMeet.getStartDate().getDateTime());","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"Pluiexo":20}},{"path":"src/main/java/staffconnect/model/meeting/comparator/MeetingDateThenDescriptionComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting.comparator;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateComparator.MEETING_DATE_COMPARATOR;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDescriptionComparator.MEETING_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":" * Represents a Comparator for comparing Meeting\u0027s Date then by Description if Dates are equal.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"public class MeetingDateThenDescriptionComparator implements Comparator\u003cMeeting\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    public static final MeetingDateThenDescriptionComparator MEETING_DATE_THEN_DESCRIPTION_COMPARATOR \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"            new MeetingDateThenDescriptionComparator();","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    public int compare(Meeting meet, Meeting otherMeet) {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"        //Compares by Description if DateTime is equal.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"        return MEETING_DATE_COMPARATOR.compare(meet, otherMeet) \u003d\u003d 0","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"                ? MEETING_DESCRIPTION_COMPARATOR.compare(meet, otherMeet)","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"                : MEETING_DATE_COMPARATOR.compare(meet, otherMeet);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Pluiexo":26}},{"path":"src/main/java/staffconnect/model/meeting/comparator/MeetingDescriptionComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting.comparator;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":" * Represents a Comparator for a Meeting\u0027s MeetingDescription in the staff book.","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"public class MeetingDescriptionComparator implements Comparator\u003cMeeting\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"    public static final MeetingDescriptionComparator MEETING_DESCRIPTION_COMPARATOR \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"            new MeetingDescriptionComparator();","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    public int compare(Meeting meet, Meeting otherMeet) {","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"        return meet.getDescription().description.compareTo(otherMeet.getDescription().description);","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"Pluiexo":20}},{"path":"src/main/java/staffconnect/model/meeting/exception/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting.exception;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":" * Signals that the operation will result in duplicate Meeting.","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"Pluiexo":11}},{"path":"src/main/java/staffconnect/model/meeting/exception/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting.exception;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"public class MeetingNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"    public MeetingNotFoundException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"        super(\"Operation cannot continue as meeting does not exist\");","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Pluiexo":10}},{"path":"src/main/java/staffconnect/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":" * Represents a Person\u0027s email in the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":3,"-":76}},{"path":"src/main/java/staffconnect/model/person/Faculty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":" * Represents a Person\u0027s faculty in the staff book.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":" * {@link #isValidFaculty(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"public class Faculty {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"            \"The content should be a String representing a real faculty of NUS\";","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"     * For this version, a valid faculty value should match exactly the full name of the faculty,","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"     * or the value is invalid. The enum class serves as the purpose for parsing user strings into the faculty name.","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"    public enum FacultyName {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"        ARTS_AND_SOCIAL_SCIENCES(\"Faculty of Arts of Social Sciences\", \"Arts and Social Sciences\", \"FASS\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"        BUSINESS(\"Business School\", \"Business\", \"Biz School\", \"Biz\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"        COMPUTING(\"School of Computing\", \"Computing\", \"SoC\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"        CONTINUING_AND_LIFELONG_EDUCATION(\"School of Continuing and Lifelong Education\",","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"                \"Continuing and Lifelong Education\", \"SCALE\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"        DENTISTRY(\"Faculty of Dentistry\", \"Dentistry\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"        DESIGN_AND_ENVIRONMENT(\"School of Design and Environment\", \"Design and Environment\", \"SDE\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"        DUKE_NUS_MEDICAL_SCHOOL(\"Duke-NUS Medical School\", \"Duke-NUS\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"        ENGINEERING(\"Faculty of Engineering\", \"Engineering\", \"FoE\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"        INTEGRATIVE_SCIENCES_AND_ENGINEERING(\"Integrative Sciences and Engineering\", \"ISEP\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"        LAW(\"Faculty of Law\", \"Law\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"        MEDICINE(\"Yong Loo Lin School of Medicine\", \"Medicine\", \"School of Medicine\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"        MUSIC(\"Yong Siew Toh Conservatory of Music\", \"Music\", \"YST Conservatory of Music\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"        PUBLIC_HEALTH(\"Saw Swee Hock School of Public Health\", \"Public Health\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"        PUBLIC_POLICY(\"Public Policy\", \"Lee Kuan Yew School of Public Policy\", \"LKY School of Public Policy\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"        SCIENCE(\"Faculty of Science\", \"Science\", \"FoS\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"        UNIVERSITY_SCHOLARS_PROGRAMME(\"University Scholars Programme\", \"USP\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"        YALE_NUS_COLLEGE(\"Yale-NUS College\", \"Yale-NUS\");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"        private final String[] facultyNameValues;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"        FacultyName(String... facultyNames) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"            this.facultyNameValues \u003d facultyNames;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"        /**","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"         * Links enum member to its name.","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"JerryWang0000"},"content":"         *","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"JerryWang0000"},"content":"         * @return name of the faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"         */","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"        public String getFacultyName() {","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"            return facultyNameValues[0];","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"    public final FacultyName value;","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"     * Constructs a {@code Faculty}.","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"JerryWang0000"},"content":"     * @param faculty A valid faculty.","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"JerryWang0000"},"content":"    public Faculty(String faculty) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"JerryWang0000"},"content":"        requireNonNull(faculty);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"JerryWang0000"},"content":"        checkArgument(isValidFaculty(faculty), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"JerryWang0000"},"content":"        value \u003d fromString(faculty); // can be extended","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"JerryWang0000"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"JerryWang0000"},"content":"     * Verifies if a faculty name is valid.","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"JerryWang0000"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"     * @param test string representing the faculty name","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"JerryWang0000"},"content":"     * @return True if the input matches any faculty name.","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"JerryWang0000"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"JerryWang0000"},"content":"    public static boolean isValidFaculty(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"JerryWang0000"},"content":"        requireNonNull(test, \"faculty cannot be null\");","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"JerryWang0000"},"content":"        return Stream.of(FacultyName.values())","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"JerryWang0000"},"content":"                .flatMap(member -\u003e Arrays.stream(member.facultyNameValues))","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"JerryWang0000"},"content":"                .anyMatch(value -\u003e value.equalsIgnoreCase(test));","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"JerryWang0000"},"content":"    private static FacultyName fromString(String name) {","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"JerryWang0000"},"content":"        return Stream.of(FacultyName.values())","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"JerryWang0000"},"content":"                .filter(member -\u003e Arrays.stream(member.facultyNameValues)","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"JerryWang0000"},"content":"                .anyMatch(value -\u003e value.equalsIgnoreCase(name)))","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"JerryWang0000"},"content":"                .findFirst()","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"JerryWang0000"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"No enum constant matches the provided name: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"JerryWang0000"},"content":"                        + name));","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"JerryWang0000"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"JerryWang0000"},"content":"        return value.getFacultyName();","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"JerryWang0000"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"JerryWang0000"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"JerryWang0000"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"JerryWang0000"},"content":"        if (!(obj instanceof Faculty)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"JerryWang0000"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"JerryWang0000"},"content":"        Faculty otherFaculty \u003d (Faculty) obj;","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"JerryWang0000"},"content":"        return this.value.equals(otherFaculty.value);","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"JerryWang0000"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"JerryWang0000"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"JerryWang0000":116}},{"path":"src/main/java/staffconnect/model/person/Favourite.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":" * Represents a Person\u0027s favourite status in the staff book.","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"public class Favourite {","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"String should only be either \\\"Favourite\\\" or \\\"Not favourite\\\"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"    private static final String FAVOURITE_SYMBOL \u003d \"\\u2605\";","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"    private static final String NOT_FAVOURITE_SYMBOL \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"    private static final String FAVOURITE \u003d \"Favourite\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"    private static final String NOT_FAVOURITE \u003d \"Not favourite\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"    private boolean isFavourite;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"     * Constructs a {@code Favourite} with a boolean parameter.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"     * @param isFavourite A boolean indicating whether a Person is a favourite contact.","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"    public Favourite(boolean isFavourite) {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"        requireNonNull(isFavourite);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"        this.isFavourite \u003d isFavourite;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"     * Constructs a {@code Favourite} with a String parameter.","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"     * @param favouriteStatus A valid string representing a favourite status.","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    public Favourite(String favouriteStatus) {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"        requireNonNull(favouriteStatus);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"        checkArgument(isValidFavourite(favouriteStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"        this.isFavourite \u003d favouriteStatus.equals(FAVOURITE);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"     * Returns true if a given string is a valid favourite status.","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"    public static boolean isValidFavourite(String test) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        return test.equals(FAVOURITE) || test.equals(NOT_FAVOURITE);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"    public boolean hasFavourite() {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"        return isFavourite;","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"     * Returns unicode character representing a Person\u0027s favourite status shown in the GUI.","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"    public String toDisplayString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        return isFavourite ? FAVOURITE_SYMBOL : NOT_FAVOURITE_SYMBOL;","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        return isFavourite ? FAVOURITE : NOT_FAVOURITE;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"        if (!(other instanceof Favourite)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"        Favourite otherFavourite \u003d (Favourite) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"        return isFavourite \u003d\u003d otherFavourite.isFavourite;","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"        return Boolean.hashCode(isFavourite);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"tsulim":79}},{"path":"src/main/java/staffconnect/model/person/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":" * Represents a Person\u0027s Module code in the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModule(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"public class Module {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"            \"Module code should contain 2-4 capital letters followed by 4 digits long and at most 1 capitalised suffix\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z]{2,4}\\\\d{4}[a-zA-Z]{0,1}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"    public final String value;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"     * @param module A valid module code.","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"    public Module(String module) {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"        requireNonNull(module);","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"        checkArgument(isValidModule(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"        value \u003d module.toUpperCase();","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"    public static boolean isValidModule(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"        Module otherModule \u003d (Module) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"        return value.equals(otherModule.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"whitesnowx"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"whitesnowx":67}},{"path":"src/main/java/staffconnect/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":" * Represents a Person\u0027s name in the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":4,"-":63}},{"path":"src/main/java/staffconnect/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":" * Represents a Person in the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    private final Module module;","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"    private final Faculty faculty;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"    private final Venue venue;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"    private final Set\u003cAvailability\u003e availabilities \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    private final MeetingManager meetings \u003d new MeetingManager();","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"    private final Favourite favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"    public Person(Name name, Phone phone, Email email, Module module, Faculty faculty, Venue venue,","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"            Set\u003cTag\u003e tags, Set\u003cAvailability\u003e availabilities, Favourite favourite) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"        requireAllNonNull(name, phone, email, module, faculty, venue, tags, availabilities, favourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"        this.module \u003d module;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"        this.availabilities.addAll(availabilities);","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"        this.favourite \u003d favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    public Name getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"    public Module getModule() {","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"        return module;","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"    public Faculty getFaculty() {","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"JerryWang0000"},"content":"        return faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"    public Venue getVenue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"        return venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"     * Returns an immutable availability set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"    public Set\u003cAvailability\u003e getAvailabilities() {","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"        return Collections.unmodifiableSet(availabilities);","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"Pluiexo"},"content":"    public Favourite getFavourite() {","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":"        return favourite;","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"     * Returns an immutable meeting set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Pluiexo"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"    public ObservableList\u003cMeeting\u003e getMeetings() {","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"        return meetings.getMeetingList();","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Pluiexo"},"content":"    /** Returns an unmodifiable view of the filtered meeting list. */","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"Pluiexo"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetings() {","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"        return meetings.getFilteredMeetingList();","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Pluiexo"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Pluiexo"},"content":"     * @param predicate to filter the list to.","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"Pluiexo"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Pluiexo"},"content":"        meetings.updateFilteredMeetingList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Pluiexo"},"content":"     * Updates the sort attribute of the sorted meeting list to sort by the given comparator.","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Pluiexo"},"content":"     * @param comparator to decide how to sort the meetings.","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"Pluiexo"},"content":"    public void updateSortedMeetingList(Comparator\u003cMeeting\u003e comparator) {","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Pluiexo"},"content":"        meetings.updateSortedMeetingList(comparator);","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"Pluiexo"},"content":"     * Replaces all the current meeting data with the current list.","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Pluiexo"},"content":"     * @param toAdd the input meeting list to replace to.","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Pluiexo"},"content":"    public void setMeetings(List\u003cMeeting\u003e toAdd) {","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"Pluiexo"},"content":"        meetings.setMeetingBook(toAdd);","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"Pluiexo"},"content":"    public void addMeetings(Meeting toAdd) {","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"Pluiexo"},"content":"        meetings.addMeeting(toAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"Pluiexo"},"content":"     * Removes the specified meeting form the current meeting list.","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"Pluiexo"},"content":"     * @param toRemove the meeting.","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"Pluiexo"},"content":"    public void removeMeeting(Meeting toRemove) {","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"Pluiexo"},"content":"        meetings.deleteMeeting(toRemove);","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"Pluiexo"},"content":"     * Returns true if the meeting to add is already tagged to the current person.","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"Pluiexo"},"content":"    public boolean hasDuplicateMeeting(Meeting toAdd) {","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"Pluiexo"},"content":"        return meetings.hasMeeting(toAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":171,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"tsulim"},"content":"                \u0026\u0026 module.equals(otherPerson.module)","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"JerryWang0000"},"content":"                \u0026\u0026 faculty.equals(otherPerson.faculty)","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"iynixil"},"content":"                \u0026\u0026 venue.equals(otherPerson.venue)","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"tsulim"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"tsulim"},"content":"                \u0026\u0026 availabilities.equals(otherPerson.availabilities)","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"tsulim"},"content":"                \u0026\u0026 favourite.equals(otherPerson.favourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":203,"author":{"gitId":"tsulim"},"content":"        return Objects.hash(name, phone, email, module, faculty, venue, tags, availabilities, favourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"tsulim"},"content":"                .add(\"module\", module)","lastModifiedDate":"2024-03-13"},{"lineNumber":213,"author":{"gitId":"JerryWang0000"},"content":"                .add(\"faculty\", faculty)","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"iynixil"},"content":"                .add(\"venue\", venue)","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":216,"author":{"gitId":"tsulim"},"content":"                .add(\"availabilities\", availabilities)","lastModifiedDate":"2024-03-15"},{"lineNumber":217,"author":{"gitId":"Pluiexo"},"content":"                .add(\"meetings\", meetings.getMeetingList())","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"tsulim"},"content":"                .add(\"favourite\", favourite)","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":31,"iynixil":5,"Pluiexo":83,"JerryWang0000":7,"-":96}},{"path":"src/main/java/staffconnect/model/person/PersonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":" * Contains utility methods used for dealing with data in the various *Person classes.","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"public class PersonUtil {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"     * Copies and returns a new Person with the data of {@code personToCopy}.","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    public static Person copyPerson(Person personToCopy) {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"        Name copiedName \u003d personToCopy.getName();","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"        Phone copiedPhone \u003d personToCopy.getPhone();","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"        Email copiedEmail \u003d personToCopy.getEmail();","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"        Module copiedModule \u003d personToCopy.getModule();","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"        Faculty copiedFaculty \u003d personToCopy.getFaculty();","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"        Venue copiedVenue \u003d personToCopy.getVenue();","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"        Set\u003cTag\u003e copiedTags \u003d personToCopy.getTags();","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        Set\u003cAvailability\u003e copiedAvailabilities \u003d personToCopy.getAvailabilities();","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"        List\u003cMeeting\u003e copiedMeetings \u003d personToCopy.getMeetings();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"        Favourite copiedFavourite \u003d personToCopy.getFavourite();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"        Person copiedPerson \u003d new Person(copiedName, copiedPhone, copiedEmail, copiedModule, copiedFaculty, copiedVenue,","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"                copiedTags, copiedAvailabilities, copiedFavourite);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"        copiedPerson.setMeetings(copiedMeetings);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"        return copiedPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"     * Creates and returns a new Person with the data of {@code selectedPerson} and given {@code favourite}.","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"    public static Person createPersonWithFavouriteStatus(Person selectedPerson, Favourite favourite) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"        Name name \u003d selectedPerson.getName();","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        Phone phone \u003d selectedPerson.getPhone();","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"        Email email \u003d selectedPerson.getEmail();","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"        Module module \u003d selectedPerson.getModule();","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"        Faculty faculty \u003d selectedPerson.getFaculty();","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"        Venue venue \u003d selectedPerson.getVenue();","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"        Set\u003cTag\u003e tags \u003d selectedPerson.getTags();","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"        Set\u003cAvailability\u003e availabilities \u003d selectedPerson.getAvailabilities();","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        Person createdPerson \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"                new Person(name, phone, email, module, faculty, venue, tags, availabilities, favourite);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"        createdPerson.setMeetings(selectedPerson.getMeetings());","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        return createdPerson;","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":33,"Pluiexo":22}},{"path":"src/main/java/staffconnect/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":" * Represents a Person\u0027s phone number in the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":3,"-":58}},{"path":"src/main/java/staffconnect/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"tsulim"},"content":"     * Returns index of specified Person in the list.","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"    public int indexOf(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"tsulim"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"tsulim"},"content":"        assert contains(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"tsulim"},"content":"        return internalList.indexOf(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":13,"-":146}},{"path":"src/main/java/staffconnect/model/person/Venue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":" * Represents a Person\u0027s venue in the staff book.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":" * {@link #isValidVenue(String)}","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"public class Venue {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Venues can take any values, and it should not be blank\";","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * The first character of the venue must not be a whitespace,","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"     * Constructs an {@code Venue}.","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"     * @param venue A valid venue.","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    public Venue(String venue) {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        requireNonNull(venue);","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"        checkArgument(isValidVenue(venue), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        value \u003d venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    public static boolean isValidVenue(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        if (!(other instanceof Venue)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"        Venue otherVenue \u003d (Venue) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"        return value.equals(otherVenue.value);","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":2,"iynixil":16,"-":48}},{"path":"src/main/java/staffconnect/model/person/comparators/DefaultComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":" * Compares two contacts on the basis of the contact added earlier ordered","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":" * in front of the other contact.","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"public class DefaultComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"    public static final DefaultComparator DEFAULT_COMPARATOR \u003d new DefaultComparator();","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"    private StaffBook staffBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"     * Constructs a {@code DefaultComparator} with the given staff book.","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"     * @param staffBook A valid staff book.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    public DefaultComparator(StaffBook staffBook) {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"        requireNonNull(staffBook);","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"        this.staffBook \u003d staffBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"     * Constructs a {@code DefaultComparator} with an empty staff book.","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    public DefaultComparator() {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"        this.staffBook \u003d new StaffBook();","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"        return Integer.compare(staffBook.indexOf(p1), staffBook.indexOf(p2));","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"tsulim":40}},{"path":"src/main/java/staffconnect/model/person/comparators/FacultyComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":" * Represents a Comparator for a Person\u0027s Venue in the staff book.","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"public class FacultyComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"    public static final FacultyComparator FACULTY_COMPARATOR \u003d new FacultyComparator();","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"        return p1.getFaculty().toString().compareToIgnoreCase(p2.getFaculty().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"        return \"Faculty by alphanumerical order\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"whitesnowx":24}},{"path":"src/main/java/staffconnect/model/person/comparators/FavouriteComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":" * Compares two contacts on the basis of the favourite status of the contact,","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":" * if equal, it compares the contacts with the given comparator.","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"public class FavouriteComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"    private Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"     * Constructs a {@code FavouriteComparator} with the given comparator.","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"    public FavouriteComparator(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"        if (p1.getFavourite().hasFavourite() \u0026\u0026 !p2.getFavourite().hasFavourite()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"            return -1;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"        } else if (!p1.getFavourite().hasFavourite() \u0026\u0026 p2.getFavourite().hasFavourite()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"            return 1;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"        return comparator.compare(p1, p2);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"tsulim":34}},{"path":"src/main/java/staffconnect/model/person/comparators/ModuleComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":" * Represents a Comparator for a Person\u0027s Module code in the staff book.","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"public class ModuleComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    public static final ModuleComparator MODULE_COMPARATOR \u003d new ModuleComparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"        return p1.getModule().toString().compareToIgnoreCase(p2.getModule().toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"        return \"Module by alphanumerical order\";","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"whitesnowx":23}},{"path":"src/main/java/staffconnect/model/person/comparators/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":" * Represents a Comparator for a Person\u0027s Name in the staff book.","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"public class NameComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    public static final NameComparator NAME_COMPARATOR \u003d new NameComparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"        return p1.getName().toString().compareToIgnoreCase(p2.getName().toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"        return \"Name by alphanumerical order\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"whitesnowx":22}},{"path":"src/main/java/staffconnect/model/person/comparators/PhoneComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":" * Represents a Comparator for a Person\u0027s Phone number in the staff book.","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"public class PhoneComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    public static final PhoneComparator PHONE_COMPARATOR \u003d new PhoneComparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"        return p1.getPhone().toString().compareToIgnoreCase(p2.getPhone().toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"        return \"Phone by ascending order\";","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"whitesnowx":23}},{"path":"src/main/java/staffconnect/model/person/comparators/VenueComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":" * Represents a Comparator for a Person\u0027s Venue in the staff book.","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"public class VenueComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    public static final VenueComparator VENUE_COMPARATOR \u003d new VenueComparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"        return p1.getVenue().toString().compareToIgnoreCase(p2.getVenue().toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"        return \"Venue by alphanumerical order\";","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"whitesnowx":23}},{"path":"src/main/java/staffconnect/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"tsulim":1,"-":10}},{"path":"src/main/java/staffconnect/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person.exceptions;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"tsulim":1,"-":5}},{"path":"src/main/java/staffconnect/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tsulim":2,"iynixil":2,"-":41}},{"path":"src/main/java/staffconnect/model/person/predicates/PersonHasAvailabilitiesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":" * Tests that a {@code Person}\u0027s {@code Availabilities} matches any of the","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":" * availabilities given.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"public class PersonHasAvailabilitiesPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    private final Set\u003cAvailability\u003e availabilities;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    public PersonHasAvailabilitiesPredicate(Set\u003cAvailability\u003e availabilities) {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        this.availabilities \u003d availabilities;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"        if (availabilities \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        // get list of person availabilities","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"        List\u003cString\u003e personAvailabilities \u003d person.getAvailabilities().stream().map(a -\u003e a.value.toLowerCase())","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"        // get stream of availabilities to filter from","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        Stream\u003cString\u003e availabilitiesToFilter \u003d availabilities.stream().map(a -\u003e a.value.toLowerCase())","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"                .collect(Collectors.toList()).stream();","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        // check if the person DOES NOT contain any of the availabilities to filter from, if true","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        // then predicate is not satisfied","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"        return !availabilitiesToFilter.anyMatch(availability -\u003e !personAvailabilities.contains(availability));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"        if (!(other instanceof PersonHasAvailabilitiesPredicate)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate otherPersonHasAvailabilitiesPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"                (PersonHasAvailabilitiesPredicate) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        return availabilities.equals(otherPersonHasAvailabilitiesPredicate.availabilities);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"        return new ToStringBuilder(this).add(\"availabilities\", availabilities).toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"iynixil":60}},{"path":"src/main/java/staffconnect/model/person/predicates/PersonHasFacultyPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":" * Tests that a {@code Person}\u0027s {@code Faculty} matches the given faculty to filter for.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"public class PersonHasFacultyPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    private final Faculty faculty;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    public PersonHasFacultyPredicate(Faculty faculty) {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        if (faculty \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        return person.getFaculty().toString().equalsIgnoreCase(faculty.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        if (!(other instanceof PersonHasFacultyPredicate)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate otherPersonHasFacultyPredicate \u003d (PersonHasFacultyPredicate) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        return faculty.equals(otherPersonHasFacultyPredicate.faculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        return new ToStringBuilder(this).add(\"faculty\", faculty).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"iynixil":46}},{"path":"src/main/java/staffconnect/model/person/predicates/PersonHasModulePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":" * Tests that a {@code Person}\u0027s {@code Module} matches the given module to filter for.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"public class PersonHasModulePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    private final Module module;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    public PersonHasModulePredicate(Module module) {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"        this.module \u003d module;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        return person.getModule().toString().equalsIgnoreCase(module.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        if (!(other instanceof PersonHasModulePredicate)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate otherPersonHasModulePredicate \u003d (PersonHasModulePredicate) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        return module.equals(otherPersonHasModulePredicate.module);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        return new ToStringBuilder(this).add(\"module\", module).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"iynixil":46}},{"path":"src/main/java/staffconnect/model/person/predicates/PersonHasTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import staffconnect.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the tag names given.","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"public class PersonHasTagsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    public PersonHasTagsPredicate(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"        if (tags \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"        // get list of person tags","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        List\u003cString\u003e personTags \u003d person.getTags().stream().map(t -\u003e t.tagName.toLowerCase())","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        // get stream of tags to filter from","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"        Stream\u003cString\u003e tagsToFilter \u003d tags.stream().map(t -\u003e t.tagName.toLowerCase())","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"                .collect(Collectors.toList()).stream();","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        // check if the person DOES NOT contain any of the tags to filter from, if true","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        // then predicate is not satisfied","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        return !tagsToFilter.anyMatch(tag -\u003e !personTags.contains(tag));","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"        if (!(other instanceof PersonHasTagsPredicate)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate otherPersonHasTagsPredicate \u003d (PersonHasTagsPredicate) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        return tags.equals(otherPersonHasTagsPredicate.tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        return new ToStringBuilder(this).add(\"tag names\", tags).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"iynixil":58}},{"path":"src/main/java/staffconnect/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":" * Represents a Tag in the staff book.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tsulim":3,"-":59}},{"path":"src/main/java/staffconnect/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":" * Contains utility methods for populating {@code StaffBook} with sample data.","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"                    new Module(\"CS1101S\"), new Faculty(\"Computing\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"                    new Venue(\"Blk 30 Geylang Street 29, #06-40\"), getTagSet(\"professor\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"                    getAvailabilitySet(\"mon 12:00 13:00\"), new Favourite(false)),","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"                    new Module(\"CS1231S\"), new Faculty(\"Computing\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"                    new Venue(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), getTagSet(\"tutor\", \"friends\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"                    getAvailabilitySet(\"tues 12:00 13:00\", \"wed 12:00 13:00\"), new Favourite(false)),","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"                    new Module(\"CS2030S\"), new Faculty(\"Computing\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"                    new Venue(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getTagSet(\"professor\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"                    getAvailabilitySet(\"mon 12:00 13:00\", \"thurs 12:00 13:00\"), new Favourite(false)),","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"                    new Module(\"CS2040S\"), new Faculty(\"Computing\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"                    new Venue(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"                    getTagSet(\"professor\"), getAvailabilitySet(\"fri 12:00 13:00\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"                    new Favourite(false)),","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"                    new Module(\"CS2100\"), new Faculty(\"Computing\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"                    new Venue(\"Blk 47 Tampines Street 20, #17-35\"), getTagSet(\"tutor\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"                    getAvailabilitySet(\"mon 12:00 13:00\", \"tues 12:00 13:00\", \"thurs 12:00 13:00\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"                    new Favourite(false)),","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"                    new Module(\"CS2101\"), new Faculty(\"Computing\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"                    new Venue(\"Blk 45 Aljunied Street 85, #11-31\"), getTagSet(\"professor\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"                    getAvailabilitySet(\"sat 12:00 13:00\", \"mon 12:00 13:00\",","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"                    \"thurs 12:00 13:00\"), new Favourite(false))","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"    public static ReadOnlyStaffBook getSampleStaffBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        StaffBook sampleSb \u003d new StaffBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"            sampleSb.addPerson(samplePerson);","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        return sampleSb;","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"     * Returns an availability set containing the list of strings given.","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"    public static Set\u003cAvailability\u003e getAvailabilitySet(String... strings) {","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"            .map(Availability::new)","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tsulim":44,"iynixil":1,"JerryWang0000":2,"-":34}},{"path":"src/main/java/staffconnect/storage/JsonAdaptedAvailability.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":" * Jackson-friendly version of {@link Availability}.","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"class JsonAdaptedAvailability {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"    private final String value;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"     * Constructs a {@code JsonAdaptedAvailability} with the given {@code value}.","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"    public JsonAdaptedAvailability(String value) {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"     * Converts a given {@code Availability} into this class for Jackson use.","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"    public JsonAdaptedAvailability(Availability source) {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"        value \u003d source.value;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"    @JsonValue","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    public String getValue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"        return value;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"     * Converts this Jackson-friendly adapted availability object into the model\u0027s {@code Availability} object.","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted availability.","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"    public Availability toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        if (!Availability.isValidAvailability(value)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"            throw new IllegalValueException(Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"        return new Availability(value);","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"tsulim":48}},{"path":"src/main/java/staffconnect/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDateTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    private final String description;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    private final String date;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given {@code Meeting}.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"description\") String description, @JsonProperty(\"date\") String date) {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        description \u003d source.getDescription().toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        date \u003d source.getStartDate().toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"        if (!MeetingDescription.isValidDescription(description)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"            throw new IllegalValueException(MeetingDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"        if (!MeetingDateTime.isValidMeetDateTime(date)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"            throw new IllegalValueException(MeetingDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        return new Meeting(new MeetingDescription(description), new MeetingDateTime(date));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Pluiexo":54}},{"path":"src/main/java/staffconnect/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"    private final String module;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"    private final String faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    private final String venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"    private final List\u003cJsonAdaptedAvailability\u003e availabilities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"    private final String favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"            @JsonProperty(\"module\") String module,","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"            @JsonProperty(\"faculty\") String faculty,","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"            @JsonProperty(\"venue\") String venue,","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"            @JsonProperty(\"availabilities\") List\u003cJsonAdaptedAvailability\u003e availabilities,","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"            @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings,","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"            @JsonProperty(\"favourite\") String favourite) {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"        this.module \u003d module;","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"        if (availabilities !\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"            this.availabilities.addAll(availabilities);","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"        if (meetings !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"            this.meetings.addAll(meetings);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        this.favourite \u003d favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"        module \u003d source.getModule().value;","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"JerryWang0000"},"content":"        faculty \u003d source.getFaculty().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"        venue \u003d source.getVenue().value;","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"        availabilities.addAll(source.getAvailabilities().stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"                .map(JsonAdaptedAvailability::new)","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"        meetings.addAll(source.getMeetings().stream()","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"                .map(JsonAdaptedMeeting::new)","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"        favourite \u003d source.getFavourite().toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"tsulim"},"content":"        final List\u003cAvailability\u003e personAvailabilities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"        for (JsonAdaptedAvailability availability : availabilities) {","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"            personAvailabilities.add(availability.toModelType());","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"tsulim"},"content":"        final List\u003cMeeting\u003e personMeetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"        for (JsonAdaptedMeeting meeting : meetings) {","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"tsulim"},"content":"            personMeetings.add(meeting.toModelType());","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"tsulim"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"tsulim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName()));","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"tsulim"},"content":"        if (!Module.isValidModule(module)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"tsulim"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"tsulim"},"content":"        final Module modelModule \u003d new Module(module);","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"JerryWang0000"},"content":"        if (faculty \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"JerryWang0000"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"JerryWang0000"},"content":"                    Faculty.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"JerryWang0000"},"content":"        if (!Faculty.isValidFaculty(faculty)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"JerryWang0000"},"content":"            throw new IllegalValueException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"JerryWang0000"},"content":"        final Faculty modelFaculty \u003d new Faculty(faculty);","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"iynixil"},"content":"        if (venue \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"iynixil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Venue.class.getSimpleName()));","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"iynixil"},"content":"        if (!Venue.isValidVenue(venue)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"iynixil"},"content":"            throw new IllegalValueException(Venue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"iynixil"},"content":"        final Venue modelVenue \u003d new Venue(venue);","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"tsulim"},"content":"        final Set\u003cAvailability\u003e modelAvailabilities \u003d new HashSet\u003c\u003e(personAvailabilities);","lastModifiedDate":"2024-03-15"},{"lineNumber":176,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"tsulim"},"content":"        if (favourite \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"tsulim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"tsulim"},"content":"                    Favourite.class.getSimpleName()));","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"tsulim"},"content":"        if (!Favourite.isValidFavourite(favourite)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"tsulim"},"content":"            throw new IllegalValueException(Favourite.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"tsulim"},"content":"        final Favourite modelFavourite \u003d new Favourite(favourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"tsulim"},"content":"        Person modelPerson \u003d new Person(modelName, modelPhone, modelEmail, modelModule, modelFaculty,","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"tsulim"},"content":"                modelVenue, modelTags, modelAvailabilities, modelFavourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"Pluiexo"},"content":"        modelPerson.setMeetings(personMeetings);","lastModifiedDate":"2024-03-23"},{"lineNumber":189,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"Pluiexo"},"content":"        return modelPerson;","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsulim":57,"iynixil":9,"Pluiexo":26,"JerryWang0000":13,"-":88}},{"path":"src/main/java/staffconnect/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsulim":3,"-":45}},{"path":"src/main/java/staffconnect/storage/JsonSerializableStaffBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":" * An Immutable StaffBook that is serializable to JSON format.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"@JsonRootName(value \u003d \"staffbook\")","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"class JsonSerializableStaffBook {","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"     * Constructs a {@code JsonSerializableStaffBook} with the given persons.","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    public JsonSerializableStaffBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"     * Converts a given {@code ReadOnlyStaffBook} into this class for Jackson use.","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableStaffBook}.","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"    public JsonSerializableStaffBook(ReadOnlyStaffBook source) {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"     * Converts this staff book into the model\u0027s {@code StaffBook} object.","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"    public StaffBook toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"        StaffBook staffBook \u003d new StaffBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"            if (staffBook.hasPerson(person)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"            staffBook.addPerson(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        return staffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsulim":19,"-":41}},{"path":"src/main/java/staffconnect/storage/JsonStaffBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.FileUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.JsonUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":" * A class to access StaffBook data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"public class JsonStaffBookStorage implements StaffBookStorage {","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonStaffBookStorage.class);","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"    public JsonStaffBookStorage(Path filePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    public Path getStaffBookFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"    public Optional\u003cReadOnlyStaffBook\u003e readStaffBook() throws DataLoadingException {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"        return readStaffBook(filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"     * Similar to {@link #readStaffBook()}.","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"    public Optional\u003cReadOnlyStaffBook\u003e readStaffBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"        Optional\u003cJsonSerializableStaffBook\u003e jsonStaffBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"                filePath, JsonSerializableStaffBook.class);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        if (!jsonStaffBook.isPresent()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"            return Optional.of(jsonStaffBook.get().toModelType());","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"    public void saveStaffBook(ReadOnlyStaffBook staffBook) throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"        saveStaffBook(staffBook, filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"     * Similar to {@link #saveStaffBook(ReadOnlyStaffBook)}.","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"    public void saveStaffBook(ReadOnlyStaffBook staffBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"        requireNonNull(staffBook);","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableStaffBook(staffBook), filePath);","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsulim":26,"-":54}},{"path":"src/main/java/staffconnect/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.JsonUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsulim":5,"-":42}},{"path":"src/main/java/staffconnect/storage/StaffBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":" * Represents a storage for {@link StaffBook}.","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"public interface StaffBookStorage {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"    Path getStaffBookFilePath();","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"     * Returns StaffBook data as a {@link ReadOnlyStaffBook}.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"    Optional\u003cReadOnlyStaffBook\u003e readStaffBook() throws DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"     * @see #getStaffBookFilePath()","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    Optional\u003cReadOnlyStaffBook\u003e readStaffBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"     * Saves the given {@link ReadOnlyStaffBook} to the storage.","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"     * @param staffBook cannot be null.","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"    void saveStaffBook(ReadOnlyStaffBook staffBook) throws IOException;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"     * @see #saveStaffBook(ReadOnlyStaffBook)","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"    void saveStaffBook(ReadOnlyStaffBook staffBook, Path filePath) throws IOException;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsulim":16,"-":30}},{"path":"src/main/java/staffconnect/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"public interface Storage extends StaffBookStorage, UserPrefsStorage {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    Path getStaffBookFilePath();","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"    Optional\u003cReadOnlyStaffBook\u003e readStaffBook() throws DataLoadingException;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    void saveStaffBook(ReadOnlyStaffBook staffBook) throws IOException;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsulim":9,"-":23}},{"path":"src/main/java/staffconnect/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":" * Manages storage of StaffBook data in local storage.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"    private StaffBookStorage staffBookStorage;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"     * Creates a {@code StorageManager} with the given {@code StaffBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"    public StorageManager(StaffBookStorage staffBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        this.staffBookStorage \u003d staffBookStorage;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StaffBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"    public Path getStaffBookFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        return staffBookStorage.getStaffBookFilePath();","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"    public Optional\u003cReadOnlyStaffBook\u003e readStaffBook() throws DataLoadingException {","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"        return readStaffBook(staffBookStorage.getStaffBookFilePath());","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"    public Optional\u003cReadOnlyStaffBook\u003e readStaffBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"        return staffBookStorage.readStaffBook(filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"    public void saveStaffBook(ReadOnlyStaffBook staffBook) throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"        saveStaffBook(staffBook, staffBookStorage.getStaffBookFilePath());","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"    public void saveStaffBook(ReadOnlyStaffBook staffBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"        staffBookStorage.saveStaffBook(staffBook, filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":22,"-":56}},{"path":"src/main/java/staffconnect/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":" * Represents a storage for {@link staffconnect.model.UserPrefs}.","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsulim":6,"-":30}},{"path":"src/main/java/staffconnect/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"         * @see staffconnect.logic.Logic#execute(String)","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"tsulim":5,"-":80}},{"path":"src/main/java/staffconnect/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103-f08-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsulim":3,"-":99}},{"path":"src/main/java/staffconnect/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    private PersonCard personOnDisplay;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"    private StackPane personCardPanelPlaceholder;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        personOnDisplay \u003d logic.getFirstPersonIfExist()","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"                .map(PersonCard::new).orElse(new PersonCard());","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this::changePersonCard);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"        personListPanel.setListSelectedIndex(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":"        StatusBarFooter statusBarFooter \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"                new StatusBarFooter(logic.getStaffConnectFilePath(), this::handleExit, this::handleHelp);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"        personCardPanelPlaceholder.getChildren().add(personOnDisplay.getRoot());","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"    private void changePersonCard(PersonCard personToUpdate) {","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"Pluiexo"},"content":"        personOnDisplay \u003d personToUpdate;","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"        personCardPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"        personCardPanelPlaceholder.getChildren().add(personOnDisplay.getRoot());","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"tsulim"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2024-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"Pluiexo"},"content":"            reloadPersonCardWithRoot();","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"Pluiexo"},"content":"     * Closes the application.","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"Pluiexo"},"content":"    public void handleExit() {","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"Pluiexo"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"Pluiexo"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"Pluiexo"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"Pluiexo"},"content":"        helpWindow.hide();","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"Pluiexo"},"content":"        primaryStage.hide();","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"Pluiexo"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"Pluiexo"},"content":"    public void handleHelp() {","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"Pluiexo"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"Pluiexo"},"content":"            helpWindow.show();","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"Pluiexo"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"Pluiexo"},"content":"            helpWindow.focus();","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"Pluiexo"},"content":"    private void reloadPersonCardWithRoot() {","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"Pluiexo"},"content":"        personOnDisplay \u003d logic.getFirstPersonIfExist().map(PersonCard::new).orElse(new PersonCard());","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"Pluiexo"},"content":"        personCardPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"Pluiexo"},"content":"        personCardPanelPlaceholder.getChildren().add(personOnDisplay.getRoot());","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"Pluiexo"},"content":"        personListPanel.setListSelectedIndex(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"Pluiexo"},"content":"    void show() {","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"Pluiexo"},"content":"        primaryStage.show();","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsulim":8,"Pluiexo":67,"-":109}},{"path":"src/main/java/staffconnect/ui/MeetingsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":" * A UI component that displays information of a {@code Meetings} withing a person.","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"public class MeetingsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    private static final String FXML \u003d \"MeetingsListCard.fxml\";","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    private Label id;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    private Label description;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    private Label date;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"     * Creates a {@code MeetingCode} with the given {@code Meeting} and index to display.","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    public MeetingsCard(Meeting meeting, int index) {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        super(FXML);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        id.setText(index + \".  \");","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        description.setText(meeting.getDescription().toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        date.setText(meeting.getStartDate().toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Pluiexo":33}},{"path":"src/main/java/staffconnect/ui/NameCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":" * A UI component that displays the name only of a {@code Person}.","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"public class NameCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    private static final String FXML \u003d \"NameCard.fxml\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    private Label id;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    private Label name;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    private Label favourite;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"     * Creates a {@code NameCard} with the given {@code Person} and index to display.","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    public NameCard(Person person, int index) {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"        super(FXML);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        id.setText(index + \".  \");","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        favourite.setStyle(\"-fx-text-fill: accent-orange\");","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        favourite.setText(person.getFavourite().toDisplayString() + \" \");","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Pluiexo":33}},{"path":"src/main/java/staffconnect/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import javafx.geometry.Orientation;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.ScrollBar;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.SplitPane;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"    private static final int ROW_HEIGHT \u003d 60; //row height of each meeting","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"    private static final int LABEL_MEETING_WIDTH \u003d 10; //the width of the meeting label","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    private Text name;","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"    private Label venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"    private Label faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"    private Label module;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"    private FlowPane availabilities;","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"    private VBox displayMeetings;","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"    private SplitPane splitDisplay;","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"    private VBox displayPane;","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"    private VBox detailsCard;","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"     * Creates a {@code PersonCard} with an empty card that displays nothing.","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"    public PersonCard() {","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"        super(FXML);","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"        this.person \u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"        name.setText(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"        phone.setText(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"        faculty.setText(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"        venue.setText(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"        module.setText(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"        email.setText(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingsListViewCell());","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"    public PersonCard(Person person) {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"        name.setTextAlignment(TextAlignment.JUSTIFY);","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"        name.setWrappingWidth(1000);","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"        faculty.setText(\"Faculty:  \" + person.getFaculty().toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"        venue.setText(\"Venue:  \" + person.getVenue().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"        module.setText(\"Module:  \" + person.getModule().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"        email.setText(\"Email:  \" + person.getEmail().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"        person.getAvailabilities().stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"                .sorted(Comparator.comparing(availability -\u003e availability.value))","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"tsulim"},"content":"                .forEach(availability -\u003e availabilities.getChildren().add(new Label(availability.value)));","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"Pluiexo"},"content":"        ObservableList\u003cMeeting\u003e meetingsList \u003d person.getFilteredMeetings();","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"Pluiexo"},"content":"        setUpMeetingListView(meetingsList);","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"Pluiexo"},"content":"        setUpScrollPane(displayPane, detailsCard, false, false, new Region());","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"Pluiexo"},"content":"        setUpScrollPane(displayMeetings, meetingListView, true, true, displayMeetings);","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"Pluiexo"},"content":"    private void setUpMeetingListView(ObservableList\u003cMeeting\u003e meetingsList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"Pluiexo"},"content":"        meetingListView.setFocusTraversable(false);","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"Pluiexo"},"content":"        meetingListView.setItems(meetingsList);","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"Pluiexo"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingsListViewCell());","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"Pluiexo"},"content":"        //Work around to set the correct height and width of the nested list view.","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"Pluiexo"},"content":"        meetingListView.setPrefHeight((meetingsList.size() * ROW_HEIGHT) + 100);","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"Pluiexo"},"content":"        meetingListView.setPrefWidth(getLongestWidth(meetingsList));","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"Pluiexo"},"content":"        meetingListView.setFocusTraversable(false);","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"Pluiexo"},"content":"        meetingListView.setMouseTransparent(true);","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"Pluiexo"},"content":"    private double getLongestWidth(List\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"Pluiexo"},"content":"        double maxWidth \u003d 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"Pluiexo"},"content":"        for (Meeting meet : meetingList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"Pluiexo"},"content":"            //200 is to account for the default spacing within the items","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"Pluiexo"},"content":"            double currentWidth \u003d (meet.getDescription().description.length() + meet.getStartDate().toString().length())","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"Pluiexo"},"content":"                    * LABEL_MEETING_WIDTH + 200;","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"Pluiexo"},"content":"            if (currentWidth \u003e maxWidth) {","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"Pluiexo"},"content":"                maxWidth \u003d currentWidth;","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"Pluiexo"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"Pluiexo"},"content":"        return maxWidth;","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"Pluiexo"},"content":"    private void setUpScrollPane(VBox display, Region content, boolean enableHbar, boolean swap, Region swapRegion) {","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"Pluiexo"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"Pluiexo"},"content":"        scrollPane.setContent(content);","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"Pluiexo"},"content":"        //Custom vertical scroll bar on the left","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"Pluiexo"},"content":"        // Inspired from:","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"Pluiexo"},"content":"        // https://stackoverflow.com/questions/35134155/move-the-vertical-scroll-bar-of-a-scroll-panel-to-the-left-side","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"Pluiexo"},"content":"        ScrollBar vScrollBar \u003d new ScrollBar();","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"Pluiexo"},"content":"        vScrollBar.setPrefWidth(1);","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"Pluiexo"},"content":"        vScrollBar.setOrientation(Orientation.VERTICAL);","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"Pluiexo"},"content":"        vScrollBar.minProperty().bind(scrollPane.vminProperty());","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"Pluiexo"},"content":"        vScrollBar.maxProperty().bind(scrollPane.vmaxProperty());","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"Pluiexo"},"content":"        if (swap) {","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"Pluiexo"},"content":"            vScrollBar.visibleAmountProperty().bind(scrollPane.heightProperty().divide(swapRegion.heightProperty()));","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"Pluiexo"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"Pluiexo"},"content":"            vScrollBar.visibleAmountProperty().bind(scrollPane.heightProperty().divide(content.heightProperty()));","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"Pluiexo"},"content":"        scrollPane.vvalueProperty().bindBidirectional(vScrollBar.valueProperty());","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"Pluiexo"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"Pluiexo"},"content":"        HBox hBox \u003d new HBox();","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"Pluiexo"},"content":"        HBox.setHgrow(scrollPane, Priority.ALWAYS);","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"Pluiexo"},"content":"        hBox.getChildren().addAll(vScrollBar, scrollPane);","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"Pluiexo"},"content":"        VBox.setVgrow(hBox, Priority.ALWAYS);","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"Pluiexo"},"content":"        if (enableHbar) {","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"Pluiexo"},"content":"            ScrollBar hScrollBar \u003d new ScrollBar();","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"Pluiexo"},"content":"            hScrollBar.setOrientation(Orientation.HORIZONTAL);","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"Pluiexo"},"content":"            hScrollBar.minProperty().bind(scrollPane.hminProperty());","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"Pluiexo"},"content":"            hScrollBar.maxProperty().bind(scrollPane.hmaxProperty());","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"Pluiexo"},"content":"            if (swap) {","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"Pluiexo"},"content":"                hScrollBar.visibleAmountProperty().bind(scrollPane.widthProperty().divide(swapRegion.widthProperty()));","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"Pluiexo"},"content":"            } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"Pluiexo"},"content":"                hScrollBar.visibleAmountProperty().bind(scrollPane.widthProperty().divide(content.widthProperty()));","lastModifiedDate":"2024-04-01"},{"lineNumber":191,"author":{"gitId":"Pluiexo"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":192,"author":{"gitId":"Pluiexo"},"content":"            scrollPane.hvalueProperty().bindBidirectional(hScrollBar.valueProperty());","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"Pluiexo"},"content":"            scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-04-01"},{"lineNumber":195,"author":{"gitId":"Pluiexo"},"content":"            display.getChildren().addAll(hScrollBar, hBox);","lastModifiedDate":"2024-04-01"},{"lineNumber":196,"author":{"gitId":"Pluiexo"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"Pluiexo"},"content":"            display.getChildren().add(hBox);","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":200,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"Pluiexo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meetings} using a {@code MeetingsCard}.","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"Pluiexo"},"content":"    private static class MeetingsListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"Pluiexo"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"Pluiexo"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"Pluiexo"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"Pluiexo"},"content":"            //Set the ID here to overwrite the default styling in the main personListViewCell","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"Pluiexo"},"content":"            setId(\"meetingListCell\");","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"Pluiexo"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"Pluiexo"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"Pluiexo"},"content":"                setText(null);","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"Pluiexo"},"content":"            } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"Pluiexo"},"content":"                setGraphic(new MeetingsCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"Pluiexo"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tsulim":9,"iynixil":1,"Pluiexo":162,"JerryWang0000":2,"-":46}},{"path":"src/main/java/staffconnect/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, PersonDisplay personDisplay) {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        personListView.setCellFactory(listView -\u003e new NameListViewCell());","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        personListView.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"                personDisplay.changePersonCard(new PersonCard(personListView.getSelectionModel().getSelectedItem()));","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        });","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"        personListView.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"            personDisplay.changePersonCard(new PersonCard(personListView.getSelectionModel().getSelectedItem()));","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        });","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"     * Changes the current highlighted selection item in the personListPanel.","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"     * Only for internal use by the UI.","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"     * @param index to change the selection to.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"    public void setListSelectedIndex(int index) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        // guard clause to prevent invalid index","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c personListView.getItems().size()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"            personListView.getSelectionModel().clearAndSelect(index);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"     * Represents a function that can change PersonCard.","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"    @FunctionalInterface","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    public interface PersonDisplay {","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"        /**","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"         * Executes the changes to the person","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"         */","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        void changePersonCard(PersonCard toChange);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code NameCard}.","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"    class NameListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"                setGraphic(new NameCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsulim":3,"Pluiexo":40,"-":41}},{"path":"src/main/java/staffconnect/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"     * Creates a result display for displaying text.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsulim":1,"Pluiexo":5,"-":26}},{"path":"src/main/java/staffconnect/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    private ExitExecutor exitExecutor;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    private HelpExecutor helpExecutor;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    public StatusBarFooter(Path saveLocation, ExitExecutor exitExecutor, HelpExecutor helpExecutor) {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        this.exitExecutor \u003d exitExecutor;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"        this.helpExecutor \u003d helpExecutor;","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"        setAccelerators();","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"    private void setAccelerators() {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"        /*","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"         *","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"         *","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"                event.consume();","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"        });","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"    private void handleExit() {","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"        exitExecutor.handleExit();","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"    private void handleHelp() {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"        helpExecutor.handleHelp();","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"     * Represents a function that closes the application.","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"    @FunctionalInterface","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"    public interface ExitExecutor {","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Pluiexo"},"content":"        /**","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":"         * Exits the application.","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"         */","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"Pluiexo"},"content":"        void handleExit();","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"     * Represents a function that shows the help window.","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"    @FunctionalInterface","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"    public interface HelpExecutor {","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"Pluiexo"},"content":"        /**","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"Pluiexo"},"content":"         * Shows the help window.","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"         */","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"        void handleHelp();","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":1,"Pluiexo":90,"-":26}},{"path":"src/main/java/staffconnect/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsulim":1,"-":12}},{"path":"src/main/java/staffconnect/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.MainApp;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.LogsCenter;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.StringUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsulim":5,"-":83}},{"path":"src/main/java/staffconnect/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.MainApp;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsulim":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":".root {","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"    background-blue: #8489B6;","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"    accent-blue: #404A72;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"    dark-accent-blue: derive(#404A72, -10%);","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"    very-dark-accent-black: derive(#404A72, -85%);","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"    accent-yellow: #F8E9D1;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"    accent-orange: #F18D1D;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"    accent-light-blue:#CCDFEF;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"    panel-background-blue: derive(#8489B6,-5%);","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"    blue-dropshadow: rgba(64,75,115,0.8);","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"    yellow-dropshadow: rgba(249,234,210,0.4);","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"    lightblue-dropshadow: rgba(205,223,239,0.4);","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    orange-dropshadow: rgba(241,142,29,0.4);","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: dark-accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    background-color: dark-accent-blue; /* Used in the default.html file */","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    -fx-base: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"    -fx-control-inner-background: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":".split-pane:vertical .split-pane-divider {","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: background-blue;","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-color: background-blue;","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"    fx-border-radius: 10;","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: panel-background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: panel-background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-radius: 10 0 0 10;","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-radius: 20 20 20 20;","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"Pluiexo"},"content":"    -fx-effect: dropshadow(gaussian, blue-dropshadow, 13, 0, 0, 0);","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-color: dark-accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":155,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"Pluiexo"},"content":".pane-without-border {","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"Pluiexo"},"content":".pane-result {","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"Pluiexo"},"content":"     -fx-padding: 0 15 0 15;","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"Pluiexo"},"content":".pane-command {","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"Pluiexo"},"content":"     -fx-padding: 0 15 10 15;","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: very-dark-accent-black;","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: background-blue !important;","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":209,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: derive(background-blue,-20%);","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"Pluiexo"},"content":"    -fx-padding: 0 1 0 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"Pluiexo"},"content":"   -fx-background-color: very-dark-accent-black;","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"Pluiexo"},"content":"   -fx-spacing: 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"Pluiexo"},"content":".menu {","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"Pluiexo"},"content":"    -fx-padding: 0 5 0 5;","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"Pluiexo"},"content":".menu:showing {","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"Pluiexo"},"content":"    -fx-focus-color:accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"Pluiexo"},"content":".menu:focused {","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"Pluiexo"},"content":"    -fx-focus-color:accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":239,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":240,"author":{"gitId":"Pluiexo"},"content":".menu:hover {","lastModifiedDate":"2024-03-31"},{"lineNumber":241,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"Pluiexo"},"content":"    -fx-focus-color:accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: very-dark-accent-black;","lastModifiedDate":"2024-03-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"Pluiexo"},"content":".menu-item{","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"Pluiexo"},"content":"    -fx-padding: 0 5 0 5;","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"Pluiexo"},"content":".menu-item:focused {","lastModifiedDate":"2024-03-31"},{"lineNumber":260,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-color: accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":261,"author":{"gitId":"Pluiexo"},"content":"     -fx-text-fill:accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":276,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2024-04-01"},{"lineNumber":277,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: dark-accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: very-dark-accent-black;","lastModifiedDate":"2024-03-31"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: very-dark-accent-black;","lastModifiedDate":"2024-03-31"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":340,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-padding: 0 0 0 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":345,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-insets: 3 0 3 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"Pluiexo"},"content":"#displayPane .scroll-bar:vertical \u003e .thumb {","lastModifiedDate":"2024-04-01"},{"lineNumber":349,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-yellow;","lastModifiedDate":"2024-04-01"},{"lineNumber":350,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-insets: 3 7 3 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":351,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":352,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":353,"author":{"gitId":"Pluiexo"},"content":"#displayMeetings .scroll-bar:vertical \u003e .thumb {","lastModifiedDate":"2024-04-01"},{"lineNumber":354,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-yellow;","lastModifiedDate":"2024-04-01"},{"lineNumber":355,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-insets: 0 7 0 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":356,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":357,"author":{"gitId":"Pluiexo"},"content":"#displayMeetings .scroll-bar:vertical \u003e .track {","lastModifiedDate":"2024-04-01"},{"lineNumber":358,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-color : transparent;","lastModifiedDate":"2024-04-01"},{"lineNumber":359,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-insets: 0 10 0 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":360,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":361,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":362,"author":{"gitId":"Pluiexo"},"content":"#displayPane .scroll-bar:horizontal \u003e .thumb {","lastModifiedDate":"2024-04-01"},{"lineNumber":363,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-yellow;","lastModifiedDate":"2024-04-01"},{"lineNumber":364,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-insets: 10 3 0 3;","lastModifiedDate":"2024-04-01"},{"lineNumber":365,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":366,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":367,"author":{"gitId":"Pluiexo"},"content":"#displayMeetings .scroll-bar:horizontal \u003e .thumb {","lastModifiedDate":"2024-04-01"},{"lineNumber":368,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-yellow;","lastModifiedDate":"2024-04-01"},{"lineNumber":369,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-insets: 0 3 10 3;","lastModifiedDate":"2024-04-01"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-01"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":372,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":385,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":388,"author":{"gitId":"Pluiexo"},"content":".scroll-bar:horizontal .thumb {","lastModifiedDate":"2024-03-31"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":390,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-insets: 7 3 0 3;","lastModifiedDate":"2024-04-01"},{"lineNumber":391,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":393,"author":{"gitId":"Pluiexo"},"content":".scroll-pane \u003e .corner {","lastModifiedDate":"2024-03-31"},{"lineNumber":394,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":395,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":396,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":397,"author":{"gitId":"Pluiexo"},"content":".virtual-flow \u003e .corner {","lastModifiedDate":"2024-03-31"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":399,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":400,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":401,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":402,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: panel-background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":404,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-radius: 0 10 10 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":407,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":410,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":412,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":413,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent background-blue transparent background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":415,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-color: transparent transparent accent-yellow transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":417,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":419,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-size: 17pt;","lastModifiedDate":"2024-03-31"},{"lineNumber":420,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":421,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":423,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":424,"author":{"gitId":"Pluiexo"},"content":"    -fx-effect: innershadow(gaussian, background-blue, 10, 0, 0, 0);","lastModifiedDate":"2024-03-31"},{"lineNumber":425,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":427,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":428,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent, background-blue, transparent, background-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":430,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":432,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":435,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":437,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":438,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":439,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-orange;","lastModifiedDate":"2024-03-31"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":443,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-size: 20;","lastModifiedDate":"2024-03-31"},{"lineNumber":444,"author":{"gitId":"Pluiexo"},"content":"    -fx-effect: dropshadow(gaussian, orange-dropshadow, 13, 0, 0, 0);","lastModifiedDate":"2024-04-01"},{"lineNumber":445,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":446,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":447,"author":{"gitId":"Pluiexo"},"content":"#availabilities {","lastModifiedDate":"2024-03-18"},{"lineNumber":448,"author":{"gitId":"Pluiexo"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-18"},{"lineNumber":449,"author":{"gitId":"Pluiexo"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-18"},{"lineNumber":450,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":451,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":452,"author":{"gitId":"Pluiexo"},"content":"#availabilities .label {","lastModifiedDate":"2024-03-18"},{"lineNumber":453,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":454,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-light-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":455,"author":{"gitId":"Pluiexo"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-18"},{"lineNumber":456,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-18"},{"lineNumber":457,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-18"},{"lineNumber":458,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-size: 15;","lastModifiedDate":"2024-03-31"},{"lineNumber":459,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-weight: 300;","lastModifiedDate":"2024-03-31"},{"lineNumber":460,"author":{"gitId":"Pluiexo"},"content":"    -fx-effect: dropshadow(gaussian, lightblue-dropshadow, 13, 0, 0, 0);","lastModifiedDate":"2024-04-01"},{"lineNumber":461,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":462,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":463,"author":{"gitId":"Pluiexo"},"content":"#meetingPane{","lastModifiedDate":"2024-03-17"},{"lineNumber":464,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-radius: 20 20 20 20;","lastModifiedDate":"2024-03-17"},{"lineNumber":465,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-radius: 20 20 20 20;","lastModifiedDate":"2024-03-17"},{"lineNumber":466,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":467,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":468,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-insets: 0 0 0 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":469,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-padding: 50 100 0 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":470,"author":{"gitId":"Pluiexo"},"content":"    -fx-effect: dropshadow(gaussian, yellow-dropshadow, 13, 0, 0, 0);","lastModifiedDate":"2024-04-01"},{"lineNumber":471,"author":{"gitId":"Pluiexo"},"content":" }","lastModifiedDate":"2024-03-17"},{"lineNumber":472,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":473,"author":{"gitId":"Pluiexo"},"content":" #nameCard{","lastModifiedDate":"2024-03-30"},{"lineNumber":474,"author":{"gitId":"Pluiexo"},"content":"     -fx-border-radius: 20 20 20 20;","lastModifiedDate":"2024-03-30"},{"lineNumber":475,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-radius: 20 20 20 20;","lastModifiedDate":"2024-03-30"},{"lineNumber":476,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-color: transparent;","lastModifiedDate":"2024-03-30"},{"lineNumber":477,"author":{"gitId":"Pluiexo"},"content":"     -fx-border-width: 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":478,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-insets: 0 0 0 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":479,"author":{"gitId":"Pluiexo"},"content":"     -fx-background-padding: 50 100 0 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":480,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":481,"author":{"gitId":"Pluiexo"},"content":"  }","lastModifiedDate":"2024-03-30"},{"lineNumber":482,"author":{"gitId":"Pluiexo"},"content":"  #nameCard .label {","lastModifiedDate":"2024-03-30"},{"lineNumber":483,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":484,"author":{"gitId":"Pluiexo"},"content":"      -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-31"},{"lineNumber":485,"author":{"gitId":"Pluiexo"},"content":"      -fx-font-size: 23px;","lastModifiedDate":"2024-03-31"},{"lineNumber":486,"author":{"gitId":"Pluiexo"},"content":"      -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":487,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":488,"author":{"gitId":"Pluiexo"},"content":"  }","lastModifiedDate":"2024-03-30"},{"lineNumber":489,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":490,"author":{"gitId":"Pluiexo"},"content":" #meetingListView {","lastModifiedDate":"2024-03-18"},{"lineNumber":491,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-18"},{"lineNumber":492,"author":{"gitId":"Pluiexo"},"content":"    -fx-padding: 5 0 0 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":493,"author":{"gitId":"tsulim"},"content":" }","lastModifiedDate":"2024-03-15"},{"lineNumber":494,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":495,"author":{"gitId":"Pluiexo"},"content":" #meetingListCell {","lastModifiedDate":"2024-03-18"},{"lineNumber":496,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-18"},{"lineNumber":497,"author":{"gitId":"Pluiexo"},"content":"    -fx-padding: 20 15 0 15;","lastModifiedDate":"2024-04-01"},{"lineNumber":498,"author":{"gitId":"tsulim"},"content":" }","lastModifiedDate":"2024-03-15"},{"lineNumber":499,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":500,"author":{"gitId":"Pluiexo"},"content":" .cell_meeting_label {","lastModifiedDate":"2024-03-31"},{"lineNumber":501,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-03-31"},{"lineNumber":502,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2024-03-31"},{"lineNumber":503,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-blue;","lastModifiedDate":"2024-03-31"},{"lineNumber":504,"author":{"gitId":"Pluiexo"},"content":" }","lastModifiedDate":"2024-03-31"},{"lineNumber":505,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":506,"author":{"gitId":"Pluiexo"},"content":" .cell_title_label {","lastModifiedDate":"2024-03-31"},{"lineNumber":507,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-31"},{"lineNumber":508,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-size: 70px;","lastModifiedDate":"2024-03-31"},{"lineNumber":509,"author":{"gitId":"Pluiexo"},"content":"    -fx-font-weight: 200;","lastModifiedDate":"2024-03-31"},{"lineNumber":510,"author":{"gitId":"Pluiexo"},"content":"    -fx-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":511,"author":{"gitId":"Pluiexo"},"content":" }","lastModifiedDate":"2024-03-31"},{"lineNumber":512,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":513,"author":{"gitId":"Pluiexo"},"content":" .cell_details_label {","lastModifiedDate":"2024-03-31"},{"lineNumber":514,"author":{"gitId":"Pluiexo"},"content":"     -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-03-31"},{"lineNumber":515,"author":{"gitId":"Pluiexo"},"content":"     -fx-font-size: 18px;","lastModifiedDate":"2024-03-31"},{"lineNumber":516,"author":{"gitId":"Pluiexo"},"content":"     -fx-font-weight: 100;","lastModifiedDate":"2024-03-31"},{"lineNumber":517,"author":{"gitId":"Pluiexo"},"content":"     -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":518,"author":{"gitId":"Pluiexo"},"content":"  }","lastModifiedDate":"2024-03-31"},{"lineNumber":519,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":520,"author":{"gitId":"Pluiexo"},"content":" #personListView {","lastModifiedDate":"2024-03-31"},{"lineNumber":521,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-color: transparent accent-yellow transparent transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":522,"author":{"gitId":"Pluiexo"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-03-31"},{"lineNumber":523,"author":{"gitId":"Pluiexo"},"content":" }","lastModifiedDate":"2024-03-31"},{"lineNumber":524,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":525,"author":{"gitId":"Pluiexo"},"content":".text-area {","lastModifiedDate":"2024-03-31"},{"lineNumber":526,"author":{"gitId":"Pluiexo"},"content":"     -fx-accent: accent-blue ;","lastModifiedDate":"2024-03-31"},{"lineNumber":527,"author":{"gitId":"Pluiexo"},"content":"     -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-03-31"},{"lineNumber":528,"author":{"gitId":"Pluiexo"},"content":" }","lastModifiedDate":"2024-03-31"},{"lineNumber":529,"author":{"gitId":"Pluiexo"},"content":" .text-field {","lastModifiedDate":"2024-03-31"},{"lineNumber":530,"author":{"gitId":"Pluiexo"},"content":"     -fx-accent: accent-blue ;","lastModifiedDate":"2024-03-31"},{"lineNumber":531,"author":{"gitId":"Pluiexo"},"content":" }","lastModifiedDate":"2024-03-31"},{"lineNumber":532,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":533,"author":{"gitId":"Pluiexo"},"content":" .scroll-pane \u003e .viewport {","lastModifiedDate":"2024-03-31"},{"lineNumber":534,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":535,"author":{"gitId":"Pluiexo"},"content":" }","lastModifiedDate":"2024-03-31"},{"lineNumber":536,"author":{"gitId":"Pluiexo"},"content":" .scroll-pane {","lastModifiedDate":"2024-03-31"},{"lineNumber":537,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":538,"author":{"gitId":"Pluiexo"},"content":" }","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"tsulim":3,"Pluiexo":231,"-":304}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: #EB6137 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"    -fx-background: transparent;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Pluiexo":2,"-":18}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":".root {","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"    background-blue: #8489B6;","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"    accent-blue: #404A72;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"    dark-accent-blue: derive(#404A72, -10%);","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"    accent-yellow: #F8E9D1;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"    accent-light-blue:#CCDFEF;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-light-blue;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-blue;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: accent-blue;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    -fx-text-fill: accent-yellow;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: dark-accent-blue;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"    -fx-background-color: background-blue;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Pluiexo":15,"-":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"         title\u003d\"StaffConnect App\" minWidth\u003d\"800\" minHeight\u003d\"650\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"                \u003cHBox VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-without-border\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"                    \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-without-border\" minWidth\u003d\"250\" prefWidth\u003d\"300\" maxWidth\u003d\"450\"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"                          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"                            \u003cInsets top\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"                    \u003cStackPane fx:id\u003d\"personCardPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" minWidth\u003d\"300\" prefWidth\u003d\"700\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-result\"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"                           minHeight\u003d\"65\" prefHeight\u003d\"65\" maxHeight\u003d\"65\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-command\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Pluiexo":17,"-":36}},{"path":"src/main/resources/view/MeetingsListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"\u003cHBox id\u003d\"meetingPane\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"35\" \u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_meeting_label\" text\u003d\"\\$id\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_meeting_label\" text\u003d\"\\$date\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    \u003cLabel styleClass\u003d\"cell_meeting_label\" text\u003d\" : \"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_meeting_label\" text\u003d\"\\$description\"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Pluiexo":20}},{"path":"src/main/resources/view/NameCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"\u003cGridPane id\u003d\"nameCard\" fx:id\u003d\"nameCard\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"          HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"-Infinity\" GridPane.columnIndex\u003d\"0\" \u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"        \u003cLabel fx:id\u003d\"favourite\" styleClass\u003d\"favourite_label\" text\u003d\"\\$favourite\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_meeting_label\" text\u003d\"\\$id\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_name_label\" text\u003d\"\\$name\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Pluiexo":23}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"\u003cSplitPane orientation\u003d\"VERTICAL\" dividerPositions\u003d\"0.43\" fx:id\u003d\"splitDisplay\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"    \u003cVBox fx:id\u003d\"displayPane\"  prefHeight\u003d\"350\" minHeight\u003d\"100\" id\u003d\"displayPane\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"        \u003cVBox fx:id\u003d\"detailsCard\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"            \u003cText fx:id\u003d\"name\" styleClass\u003d\"cell_title_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"            \u003cFlowPane fx:id\u003d\"availabilities\"/\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_details_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"            \u003cLabel fx:id\u003d\"faculty\" styleClass\u003d\"cell_details_label\" text\u003d\"\\$faculty\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"            \u003cLabel fx:id\u003d\"venue\" styleClass\u003d\"cell_details_label\" text\u003d\"\\$venue\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"            \u003cLabel fx:id\u003d\"module\" styleClass\u003d\"cell_details_label\" text\u003d\"\\$module\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_details_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    \u003cVBox fx:id\u003d\"displayMeetings\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"        \u003cListView id\u003d\"meetingListView\" fx:id\u003d\"meetingListView\"/\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"\u003c/SplitPane\u003e","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"tsulim":1,"Pluiexo":19,"-":8}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"  \u003cListView id\u003d\"personListView\" fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Pluiexo":1,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-without-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Pluiexo":1,"-":8}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"  \u003cMenuBar fx:id\u003d\"menuBar\" GridPane.halignment\u003d\"RIGHT\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"      \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    \u003c/Menu\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"      \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"    \u003c/Menu\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"  \u003c/MenuBar\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"Pluiexo":11,"-":12}},{"path":"src/test/java/staffconnect/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"tsulim":1,"-":88}},{"path":"src/test/java/staffconnect/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"tsulim":1,"-":26}},{"path":"src/test/java/staffconnect/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"tsulim":1,"-":15}},{"path":"src/test/java/staffconnect/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":2,"-":133}},{"path":"src/test/java/staffconnect/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.core.index;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tsulim":2,"-":65}},{"path":"src/test/java/staffconnect/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"tsulim":2,"-":34}},{"path":"src/test/java/staffconnect/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"tsulim":3,"-":105}},{"path":"src/test/java/staffconnect/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.Config;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsulim":4,"-":112}},{"path":"src/test/java/staffconnect/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":2,"-":21}},{"path":"src/test/java/staffconnect/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.SerializableTestClass;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.TestUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":3,"-":42}},{"path":"src/test/java/staffconnect/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.commons.util;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tsulim":2,"-":141}},{"path":"src/test/java/staffconnect/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.FACULTY_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.MODULE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VENUE_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.CommandResult;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.ListCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.JsonStaffBookStorage;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"import staffconnect.storage.StorageManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        JsonStaffBookStorage staffBookStorage \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"                new JsonStaffBookStorage(temporaryFolder.resolve(\"staffConnect.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        StorageManager storage \u003d new StorageManager(staffBookStorage, userPrefsStorage);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(model.getStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"tsulim"},"content":"        // Inject LogicManager with a StaffBookStorage that throws the IOException e when saving","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"tsulim"},"content":"        JsonStaffBookStorage staffBookStorage \u003d new JsonStaffBookStorage(prefPath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"tsulim"},"content":"            public void saveStaffBook(ReadOnlyStaffBook staffBook, Path filePath)","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"tsulim"},"content":"        StorageManager storage \u003d new StorageManager(staffBookStorage, userPrefsStorage);","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"tsulim"},"content":"        // Triggers the saveStaffBook method by executing an add command","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"tsulim"},"content":"                + EMAIL_DESC_AMY + MODULE_DESC_AMY + FACULTY_DESC_AMY + VENUE_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"tsulim"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withAvailabilities().build();","lastModifiedDate":"2024-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tsulim":34,"iynixil":1,"JerryWang0000":1,"-":141}},{"path":"src/test/java/staffconnect/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"        model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(model.getStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"        Person personInList \u003d model.getStaffBook().getPersonList().get(0);","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tsulim":13,"-":35}},{"path":"src/test/java/staffconnect/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"tsulim"},"content":"        public Path getStaffConnectFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"        public void setStaffConnectFilePath(Path staffConnectFilePath) {","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"tsulim"},"content":"        public void setStaffBook(ReadOnlyStaffBook newData) {","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"tsulim"},"content":"        public ReadOnlyStaffBook getStaffBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"tsulim"},"content":"        public int indexOf(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"tsulim"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"tsulim"},"content":"        public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"whitesnowx"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"whitesnowx"},"content":"        public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"whitesnowx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"whitesnowx"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"tsulim"},"content":"        public ReadOnlyStaffBook getStaffBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":215,"author":{"gitId":"tsulim"},"content":"            return new StaffBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tsulim":21,"whitesnowx":10,"-":188}},{"path":"src/test/java/staffconnect/logic/commands/AddMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_DATE_MARCH;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERMS;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_APRIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_FINALS;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDateTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddMeetingCommand.","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"public class AddMeetingCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    private static final Model TEST_MODEL \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"    private Person buildValidPerson() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"        Person pickPerson \u003d TEST_MODEL.getSortedFilteredPersonList().get(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        return new Person(pickPerson.getName(), pickPerson.getPhone(), pickPerson.getEmail(),","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"                pickPerson.getModule(), pickPerson.getFaculty(), pickPerson.getVenue(),","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"                pickPerson.getTags(), pickPerson.getAvailabilities(), pickPerson.getFavourite());","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"    public void execute_allFieldsValid_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        Person validPerson \u003d buildValidPerson();","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        String expectedMessage \u003d String.format(AddMeetingCommand.MESSAGE_SUCCESS, Messages.format(VALID_MEETING));","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"        Model expectedModel \u003d new ModelManager(new StaffBook(TEST_MODEL.getStaffBook()), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"        expectedModel.setPerson(TEST_MODEL.getSortedFilteredPersonList().get(0), validPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"        assertCommandSuccess(addMeetingCommand, TEST_MODEL, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    public void execute_duplicateMeeting_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"        Person firstPerson \u003d buildValidPerson();","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        firstPerson.addMeetings(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"        Model stubModel \u003d new ModelManager(new StaffBook(TEST_MODEL.getStaffBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"        stubModel.setPerson(TEST_MODEL.getSortedFilteredPersonList().get(0), firstPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"        assertCommandFailure(addMeetingCommand, stubModel, AddMeetingCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(TEST_MODEL.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(outOfBoundIndex, VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"        assertCommandFailure(addMeetingCommand, TEST_MODEL, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"        showPersonAtIndex(TEST_MODEL, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"        // ensures that outOfBoundIndex is still in bounds of staff book list","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c TEST_MODEL.getStaffBook().getPersonList().size());","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(outOfBoundIndex, VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"        assertCommandFailure(addMeetingCommand, TEST_MODEL, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"        final AddMeetingCommand standardCommand \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"        final Meeting copyMeeting \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"            new Meeting(new MeetingDescription(VALID_DESCRIPTION_MIDTERMS), new MeetingDateTime(VALID_DATE_MARCH));","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Pluiexo"},"content":"        AddMeetingCommand commandWithSameValues \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, copyMeeting);","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Pluiexo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Pluiexo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Pluiexo"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(standardCommand, new AddMeetingCommand(INDEX_SECOND_PERSON, VALID_MEETING));","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(standardCommand, new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING_FINALS));","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"Pluiexo"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(standardCommand, new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING_APRIL));","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Pluiexo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"Pluiexo"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"Pluiexo"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(index, VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"Pluiexo"},"content":"        String expected \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Pluiexo"},"content":"            AddMeetingCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", toAdd\u003d\" + VALID_MEETING + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(expected, addMeetingCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"tsulim":5,"Pluiexo":126}},{"path":"src/test/java/staffconnect/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"    public void execute_emptyStaffBook_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    public void execute_nonEmptyStaffBook_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"        Model model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        expectedModel.setStaffBook(new StaffBook());","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tsulim":12,"-":20}},{"path":"src/test/java/staffconnect/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"tsulim":1,"-":62}},{"path":"src/test/java/staffconnect/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_DESCRIPTION;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_STARTDATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDateTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDescriptionContainsKeywordPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"    public static final String VALID_MODULE_AMY \u003d \"CS2103\";","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"    public static final String VALID_MODULE_BOB \u003d \"CS2103T\";","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"    public static final String VALID_FACULTY_AMY \u003d \"Computing\";","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"    public static final String VALID_FACULTY_BOB \u003d \"Science\";","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    public static final String VALID_VENUE_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"    public static final String VALID_VENUE_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"    public static final String VALID_AVAILABILITY_MON \u003d \"mon 12:00 14:00\";","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"    public static final String VALID_AVAILABILITY_THUR \u003d \"thurs 12:00 14:00\";","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"    public static final String VALID_DESCRIPTION_MIDTERMS \u003d \"Meet for midterms\";","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"    public static final String VALID_DESCRIPTION_FINALS \u003d \"Meet for finals\";","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    public static final String VALID_DESCRIPTION_STUDY \u003d \"Study super hard\";","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"    public static final String VALID_DATE_MARCH \u003d \"12/03/2023 18:00\";","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    public static final String VALID_DATE_APRIL \u003d \"15/04/2024 15:00\";","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"    public static final String VALID_KEYWORD_FINALS \u003d \"finals\";","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"    public static final String MODULE_DESC_AMY \u003d \" \" + PREFIX_MODULE + VALID_MODULE_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"    public static final String MODULE_DESC_BOB \u003d \" \" + PREFIX_MODULE + VALID_MODULE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"JerryWang0000"},"content":"    public static final String FACULTY_DESC_AMY \u003d \" \" + PREFIX_FACULTY + VALID_FACULTY_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"JerryWang0000"},"content":"    public static final String FACULTY_DESC_BOB \u003d \" \" + PREFIX_FACULTY + VALID_FACULTY_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"    public static final String VENUE_DESC_AMY \u003d \" \" + PREFIX_VENUE + VALID_VENUE_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"    public static final String VENUE_DESC_BOB \u003d \" \" + PREFIX_VENUE + VALID_VENUE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"    public static final String AVAILABILITY_DESC_MON \u003d \" \" + PREFIX_AVAILABILITY + VALID_AVAILABILITY_MON;","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"    public static final String AVAILABILITY_DESC_THUR \u003d \" \" + PREFIX_AVAILABILITY + VALID_AVAILABILITY_THUR;","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"    public static final String DESCRIPTION_MIDTERM \u003d \" \" + PREFIX_MEETING_DESCRIPTION + VALID_DESCRIPTION_MIDTERMS;","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"    public static final String DATE_STARTDATE \u003d \" \" + PREFIX_MEETING_STARTDATE + VALID_DATE_MARCH;","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"    public static final String INVALID_MODULE_DESC \u003d \" \" + PREFIX_MODULE; // empty string not allowed for modules","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"JerryWang0000"},"content":"    public static final String INVALID_FACULTY_DESC \u003d \" \" + PREFIX_FACULTY + \"faculty\"; // must match a NUS faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"    public static final String INVALID_VENUE_DESC \u003d \" \" + PREFIX_VENUE; // empty string not allowed for venues","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"    public static final String INVALID_AVAILABILITY_DESC \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"            \" \" + PREFIX_AVAILABILITY + \"mon*\"; // \u0027*\u0027 not allowed in availabilities","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"    public static final String INVALID_DESCRIPTION \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"            \" \" + PREFIX_MEETING_DESCRIPTION + \"\u0026@#\u0026*@*\u0026@*\"; //special characters","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"    public static final String INVALID_STARTDATE \u003d \" \" + PREFIX_MEETING_STARTDATE + \"12-04-2023 1800\";","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"    public static final Meeting VALID_MEETING \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"        new Meeting(new MeetingDescription(VALID_DESCRIPTION_MIDTERMS), new MeetingDateTime(VALID_DATE_MARCH));","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Pluiexo"},"content":"    public static final Meeting VALID_MEETING_FINALS \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"        new Meeting(new MeetingDescription(VALID_DESCRIPTION_FINALS), new MeetingDateTime(VALID_DATE_MARCH));","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"    public static final Meeting VALID_MEETING_APRIL \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"        new Meeting(new MeetingDescription(VALID_DESCRIPTION_MIDTERMS), new MeetingDateTime(VALID_DATE_APRIL));","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"    public static final Meeting VALID_MEETING_STUDY \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"            new Meeting(new MeetingDescription(VALID_DESCRIPTION_STUDY), new MeetingDateTime(VALID_DATE_MARCH));","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"tsulim"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withModule(VALID_MODULE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"                .withFaculty(VALID_FACULTY_AMY).withVenue(VALID_VENUE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"                .withTags(VALID_TAG_FRIEND).withAvailabilities(VALID_AVAILABILITY_MON).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withModule(VALID_MODULE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"tsulim"},"content":"                .withFaculty(VALID_FACULTY_BOB).withVenue(VALID_VENUE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"tsulim"},"content":"                .withAvailabilities(VALID_AVAILABILITY_MON, VALID_AVAILABILITY_THUR).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"tsulim"},"content":"     * - the staff book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"tsulim"},"content":"        StaffBook expectedStaffBook \u003d new StaffBook(actualModel.getStaffBook());","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"tsulim"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":163,"author":{"gitId":"tsulim"},"content":"        assertEquals(expectedStaffBook, actualModel.getStaffBook());","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"tsulim"},"content":"        assertEquals(expectedFilteredList, actualModel.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"tsulim"},"content":"     * {@code model}\u0027s staff book.","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"tsulim"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getSortedFilteredPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"tsulim"},"content":"        Person person \u003d model.getSortedFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"tsulim"},"content":"        assertEquals(1, model.getSortedFilteredPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"Pluiexo"},"content":"     * Updates {@code person}\u0027s filtered list to show only the meeting at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"Pluiexo"},"content":"     * {@code person}\u0027s meeting list.","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"Pluiexo"},"content":"    public static void showMeetingAtIndex(Person person, Index targetIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c person.getFilteredMeetings().size());","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"Pluiexo"},"content":"        Meeting meeting \u003d person.getFilteredMeetings().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"Pluiexo"},"content":"        final String[] splitDescription \u003d meeting.getDescription().description.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"Pluiexo"},"content":"        person.updateFilteredMeetingList(new MeetingDescriptionContainsKeywordPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"Pluiexo"},"content":"                Arrays.asList(splitDescription[0])));","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(1, person.getFilteredMeetings().size());","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tsulim":39,"iynixil":7,"JerryWang0000":6,"Pluiexo":49,"whitesnowx":2,"-":93}},{"path":"src/test/java/staffconnect/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"        Person personToDelete \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"        Person personToDelete \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(model.getStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        // ensures that outOfBoundIndex is still in bounds of staff book list","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStaffBook().getPersonList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"        assertTrue(model.getSortedFilteredPersonList().isEmpty());","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tsulim":22,"-":98}},{"path":"src/test/java/staffconnect/logic/commands/DeleteMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_STUDY;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":" * {@code DeleteMeetingCommand}.","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"public class DeleteMeetingCommandTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    private static final Model TEST_MODEL \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        //Set a dummy meeting first","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"        Person selectPerson \u003d copyPersonWithNewMeetingManager(TEST_MODEL.getSortedFilteredPersonList()","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"        selectPerson.addMeetings(VALID_MEETING);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        TEST_MODEL.setPerson(selectPerson, selectPerson);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        String expectedMessage \u003d String.format(DeleteMeetingCommand.MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"                Messages.format(VALID_MEETING));","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"        assertCommandSuccess(deleteMeetingCommand, TEST_MODEL, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"    private Person copyPersonWithNewMeetingManager(Person pickPerson) {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"        return new Person(pickPerson.getName(), pickPerson.getPhone(), pickPerson.getEmail(),","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"                pickPerson.getModule(), pickPerson.getFaculty(), pickPerson.getVenue(),","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"                pickPerson.getTags(), pickPerson.getAvailabilities(), pickPerson.getFavourite());","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"    public void execute_invalidPersonIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(TEST_MODEL.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(outOfBoundIndex, INDEX_FIRST_MEETING);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"        assertCommandFailure(deleteMeetingCommand, TEST_MODEL, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"    public void execute_invalidMeetingIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(TEST_MODEL","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"                .getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased())","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"                .getFilteredMeetings().size() + 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_PERSON, outOfBoundIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"        assertCommandFailure(deleteMeetingCommand, TEST_MODEL, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        Person personToSelect \u003d copyPersonWithNewMeetingManager(TEST_MODEL.getSortedFilteredPersonList()","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"        personToSelect.addMeetings(VALID_MEETING); //First valid meeting","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"        personToSelect.addMeetings(VALID_MEETING_STUDY); //Second valid meeting","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"        showMeetingAtIndex(personToSelect, INDEX_SECOND_MEETING); //Update visibility","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"        //update the model","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"        TEST_MODEL.setPerson(personToSelect, personToSelect);","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"        Meeting meetingToDelete \u003d personToSelect.getFilteredMeetings().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"        //deletes the second meeting in the model","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING);","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"        String expectedMessage \u003d String.format(DeleteMeetingCommand.MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"                Messages.format(meetingToDelete));","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"        Person expectedPersonSelect \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"                copyPersonWithNewMeetingManager(expectedModel.getSortedFilteredPersonList()","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":"                        .get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"Pluiexo"},"content":"        expectedPersonSelect.addMeetings(VALID_MEETING); //This should be the only meeting left in the model","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"        showNoMeeting(expectedPersonSelect); //But it is not visible","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"        expectedModel.setPerson(expectedPersonSelect, expectedPersonSelect);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"        assertCommandSuccess(deleteMeetingCommand, TEST_MODEL, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"     * Updates {@code person}\u0027s filtered list to show no meeting.","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"    private void showNoMeeting(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"        person.updateFilteredMeetingList(p -\u003e false);","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(person.getFilteredMeetings().isEmpty());","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Pluiexo"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"        Person personToSelect \u003d copyPersonWithNewMeetingManager(TEST_MODEL.getSortedFilteredPersonList()","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"Pluiexo"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Pluiexo"},"content":"        personToSelect.addMeetings(VALID_MEETING);","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Pluiexo"},"content":"        personToSelect.addMeetings(VALID_MEETING_STUDY);","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Pluiexo"},"content":"        showMeetingAtIndex(personToSelect, INDEX_FIRST_MEETING);","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Pluiexo"},"content":"        TEST_MODEL.setPerson(personToSelect, personToSelect);","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Pluiexo"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEETING;","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Pluiexo"},"content":"        // ensures that outOfBoundIndex is still in bounds of person\u0027s meeting list","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c personToSelect.getMeetings().size());","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_PERSON, outOfBoundIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"Pluiexo"},"content":"        assertCommandFailure(deleteMeetingCommand, TEST_MODEL, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"Pluiexo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteFirstCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING);","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteSecondCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_PERSON, INDEX_SECOND_MEETING);","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"Pluiexo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"Pluiexo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteFirstCommandCopy \u003d new DeleteMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING);","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"Pluiexo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"Pluiexo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"Pluiexo"},"content":"        // different meeting index -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"Pluiexo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"Pluiexo"},"content":"        Index targetPersonIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"Pluiexo"},"content":"        Index targetMeetingIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"Pluiexo"},"content":"        DeleteMeetingCommand deleteCommand \u003d new DeleteMeetingCommand(targetPersonIndex, targetMeetingIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"Pluiexo"},"content":"        String expected \u003d DeleteMeetingCommand.class.getCanonicalName() + \"{targetPersonIndex\u003d\" + targetPersonIndex","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"Pluiexo"},"content":"                + \", \" + \"targetMeetingIndex\u003d\" + targetMeetingIndex + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"tsulim":6,"Pluiexo":161}},{"path":"src/test/java/staffconnect/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_MON;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FOURTH_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FOURTH_PERSON, descriptor);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(new StaffBook(model.getStaffBook()), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(3), editedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"        Person lastPerson \u003d model.getSortedFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"                .withTags(VALID_TAG_HUSBAND).withAvailabilities(VALID_AVAILABILITY_MON).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"                .withAvailabilities(VALID_AVAILABILITY_MON).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(new StaffBook(model.getStaffBook()), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"        Person editedPerson \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(new StaffBook(model.getStaffBook()), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"        Person personInFilteredList \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(new StaffBook(model.getStaffBook()), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"tsulim"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"        Person firstPerson \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"tsulim"},"content":"        // edit person in filtered list into a duplicate in staff book","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"        Person personInList \u003d model.getStaffBook().getPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"tsulim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"tsulim"},"content":"     * but smaller than size of staff book","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"tsulim"},"content":"        // ensures that outOfBoundIndex is still in bounds of staff book list","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"tsulim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStaffBook().getPersonList().size());","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"tsulim":47,"-":141}},{"path":"src/test/java/staffconnect/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_VENUE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"        // different faculty -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withFaculty(VALID_FACULTY_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"        // different venue -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withVenue(VALID_VENUE_BOB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withModule(VALID_MODULE_BOB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"                + editPersonDescriptor.getVenue().orElse(null) + \", module\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"JerryWang0000"},"content":"                + editPersonDescriptor.getFaculty().orElse(null) + \", faculty\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", venue\u003d\"","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"                + editPersonDescriptor.getModule().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", availabilities\u003d\"","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"                + editPersonDescriptor.getAvailabilities().orElse(null) + \"}\";","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tsulim":16,"iynixil":4,"JerryWang0000":6,"-":58}},{"path":"src/test/java/staffconnect/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tsulim":5,"-":15}},{"path":"src/test/java/staffconnect/logic/commands/FavCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FOURTH_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code FavCommand}.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"public class FavCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"        Person personToFav \u003d model.getSortedFilteredPersonList().get(INDEX_FOURTH_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"        Person favPerson \u003d new PersonBuilder(personToFav).withFavourite(true).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"        FavCommand favCommand \u003d new FavCommand(INDEX_FOURTH_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d String.format(FavCommand.MESSAGE_SET_PERSON_FAVOURITE_SUCCESS,","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"                Messages.format(favPerson));","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(3), favPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"        assertCommandSuccess(favCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        FavCommand favCommand \u003d new FavCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"        assertCommandFailure(favCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        showPersonAtIndex(model, INDEX_FOURTH_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"        Person personToFav \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"        Person favPerson \u003d new PersonBuilder(personToFav).withFavourite(true).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        FavCommand favCommand \u003d new FavCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d String.format(FavCommand.MESSAGE_SET_PERSON_FAVOURITE_SUCCESS,","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"                Messages.format(favPerson));","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(new StaffBook(model.getStaffBook()), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(0), favPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"        assertCommandSuccess(favCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"        // ensures that outOfBoundIndex is still in bounds of staff book list","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStaffBook().getPersonList().size());","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"        FavCommand favCommand \u003d new FavCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"        assertCommandFailure(favCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"    public void execute_favFavouritePerson_throwsCommandException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"tsulim"},"content":"        FavCommand favCommand \u003d new FavCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"        assertCommandFailure(favCommand, model, FavCommand.MESSAGE_DUPLICATE_FAV);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"        FavCommand favFirstCommand \u003d new FavCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"        FavCommand favSecondCommand \u003d new FavCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"tsulim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"tsulim"},"content":"        assertTrue(favFirstCommand.equals(favFirstCommand));","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"tsulim"},"content":"        FavCommand favFirstCommandCopy \u003d new FavCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"tsulim"},"content":"        assertTrue(favFirstCommand.equals(favFirstCommandCopy));","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"tsulim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"tsulim"},"content":"        assertFalse(favFirstCommand.equals(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"tsulim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"        assertFalse(favFirstCommand.equals(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"tsulim"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"tsulim"},"content":"        assertFalse(favFirstCommand.equals(favSecondCommand));","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"tsulim"},"content":"        FavCommand favCommand \u003d new FavCommand(targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"        String expected \u003d FavCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"tsulim"},"content":"        assertEquals(expected, favCommand.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":121}},{"path":"src/test/java/staffconnect/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.CLARA;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.KAFKA;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.NATASHA;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasAvailabilitiesPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasFacultyPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasModulePredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasTagsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"public class FilterCommandTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"    private PersonHasModulePredicate emptyModulePredicate \u003d new PersonHasModulePredicate(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    private PersonHasFacultyPredicate emptyFacultyPredicate \u003d new PersonHasFacultyPredicate(null);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    private PersonHasTagsPredicate emptyTagsPredicate \u003d new PersonHasTagsPredicate(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    private PersonHasAvailabilitiesPredicate emptyAvailabilitiesPredicate \u003d new PersonHasAvailabilitiesPredicate(null);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModule_noPersonFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"GESS1025\");","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(emptyFacultyPredicate.and(emptyTagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModule_multiplePersonsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(emptyFacultyPredicate.and(emptyTagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, GEORGE, KAFKA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasFaculty_noPersonFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Dentistry\");","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(facultyPredicate.and(emptyTagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasFaculty_multiplePersonsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 9);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(facultyPredicate.and(emptyTagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, CLARA, ALICE, DANIEL, ELLE, FIONA, GEORGE, NATASHA),","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"                model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasTag_noPersonFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"hello\");","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(emptyFacultyPredicate.and(tagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasTag_multiplePersonsFound() {","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"friends\");","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(emptyFacultyPredicate.and(tagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(BENSON, ALICE, DANIEL), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasAvailability_noPersonFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"wed 10:00 11:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(emptyFacultyPredicate.and(emptyTagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasAvailability_multiplePersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(emptyFacultyPredicate.and(emptyTagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, DANIEL, KAFKA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndTag_noPersonFound() {","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"GESS1025\");","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"hello\");","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(emptyFacultyPredicate.and(tagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndTag_multiplePersonsFound() {","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"classmate\");","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(emptyFacultyPredicate.and(tagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, KAFKA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndFaculty_noPersonsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2109\");","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(facultyPredicate.and(emptyTagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndFaculty_multiplePersonsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(facultyPredicate.and(emptyTagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, GEORGE, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndAvailability_noPersonFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"GESS1025\");","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"mon 12:00 13:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(emptyFacultyPredicate.and(emptyTagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":210,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndAvailability_multiplePersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(emptyFacultyPredicate.and(emptyTagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, KAFKA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasFacultyAndTag_noPersonsFound() {","lastModifiedDate":"2024-03-16"},{"lineNumber":227,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-16"},{"lineNumber":228,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Science\");","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"friends\");","lastModifiedDate":"2024-03-16"},{"lineNumber":230,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, facultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":233,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(facultyPredicate.and(tagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":237,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":238,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":239,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasFacultyAndTag_multiplePersonsFound() {","lastModifiedDate":"2024-03-16"},{"lineNumber":240,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-16"},{"lineNumber":241,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"friends\");","lastModifiedDate":"2024-03-16"},{"lineNumber":243,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, facultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(facultyPredicate.and(tagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(BENSON, ALICE, DANIEL), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":251,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasFacultyAndAvailability_noPersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":253,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":254,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Science\");","lastModifiedDate":"2024-03-25"},{"lineNumber":255,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"wed 13:00 16:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":256,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":257,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":258,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":259,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(facultyPredicate.and(emptyTagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":260,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":261,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":262,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":263,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":264,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":265,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasFacultyAndAvailability_multiplePersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":266,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-25"},{"lineNumber":267,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-25"},{"lineNumber":268,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":269,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":270,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":271,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":272,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(facultyPredicate.and(emptyTagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":273,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":274,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, DANIEL, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":275,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":276,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":277,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":278,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasTagAndAvailability_noPersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":279,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":280,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"professor\");","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 13:00 15:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":283,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":285,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(emptyFacultyPredicate.and(tagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":286,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":287,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":288,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":289,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":290,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":291,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasTagAndAvailability_multiplePersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":292,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-25"},{"lineNumber":293,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"classmate\");","lastModifiedDate":"2024-03-25"},{"lineNumber":294,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":296,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":297,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(emptyFacultyPredicate.and(tagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":299,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":300,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, KAFKA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":301,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":304,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndFacultyAndTag_noPersonsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":305,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-16"},{"lineNumber":306,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2100\");","lastModifiedDate":"2024-03-16"},{"lineNumber":307,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Science\");","lastModifiedDate":"2024-03-17"},{"lineNumber":308,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"classmate\");","lastModifiedDate":"2024-03-16"},{"lineNumber":309,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, facultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":310,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":311,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":312,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(facultyPredicate.and(tagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":313,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":314,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":315,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":316,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":317,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":318,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndFacultyAndTag_multiplePersonsFound() {","lastModifiedDate":"2024-03-17"},{"lineNumber":319,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":320,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-16"},{"lineNumber":321,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-17"},{"lineNumber":322,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"classmate\");","lastModifiedDate":"2024-03-16"},{"lineNumber":323,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, facultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":324,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":325,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":326,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(facultyPredicate.and(tagsPredicate.and(emptyAvailabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":327,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":328,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":329,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":330,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":331,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":332,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndFacultyAndAvailability_noPersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":333,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":334,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2100\");","lastModifiedDate":"2024-03-25"},{"lineNumber":335,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Science\");","lastModifiedDate":"2024-03-25"},{"lineNumber":336,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":337,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":338,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":339,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":340,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(facultyPredicate.and(emptyTagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":341,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":342,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":343,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":344,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":345,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":346,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndFacultyAndAvailability_multiplePersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":347,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-25"},{"lineNumber":348,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-25"},{"lineNumber":349,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-25"},{"lineNumber":350,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":351,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":352,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":353,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":354,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(facultyPredicate.and(emptyTagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":355,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":356,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":357,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":358,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":359,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":360,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndTagAndAvailability_noPersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":361,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":362,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2100\");","lastModifiedDate":"2024-03-25"},{"lineNumber":363,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"classmate\");","lastModifiedDate":"2024-03-25"},{"lineNumber":364,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":365,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":366,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":367,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":368,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(emptyFacultyPredicate.and(tagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":369,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":370,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":371,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":372,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":373,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":374,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasModuleAndTagAndAvailability_multiplePersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":375,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-25"},{"lineNumber":376,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-25"},{"lineNumber":377,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"classmate\");","lastModifiedDate":"2024-03-25"},{"lineNumber":378,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":379,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":380,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":381,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":382,"author":{"gitId":"iynixil"},"content":"                modulePredicate.and(emptyFacultyPredicate.and(tagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":383,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":384,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, KAFKA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":385,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":386,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":387,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":388,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasFacultyAndTagAndAvailability_noPersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":389,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":390,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Science\");","lastModifiedDate":"2024-03-25"},{"lineNumber":391,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"classmate\");","lastModifiedDate":"2024-03-25"},{"lineNumber":392,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":393,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, facultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":394,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":395,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":396,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(facultyPredicate.and(tagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":397,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":398,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":399,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":400,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":401,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":402,"author":{"gitId":"iynixil"},"content":"    public void execute_personHasFacultyAndTagAndAvailability_multiplePersonsFound() {","lastModifiedDate":"2024-03-25"},{"lineNumber":403,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-25"},{"lineNumber":404,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-25"},{"lineNumber":405,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"classmate\");","lastModifiedDate":"2024-03-25"},{"lineNumber":406,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"fri 12:00 14:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":407,"author":{"gitId":"iynixil"},"content":"        FilterCommand command \u003d new FilterCommand(emptyModulePredicate, facultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":408,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":409,"author":{"gitId":"iynixil"},"content":"        expectedModel.updateFilteredPersonList(","lastModifiedDate":"2024-03-25"},{"lineNumber":410,"author":{"gitId":"iynixil"},"content":"                emptyModulePredicate.and(facultyPredicate.and(tagsPredicate.and(availabilitiesPredicate))));","lastModifiedDate":"2024-03-25"},{"lineNumber":411,"author":{"gitId":"iynixil"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":412,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CLARA, NATASHA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":413,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":414,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":415,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":416,"author":{"gitId":"iynixil"},"content":"    public void equals_onlyFacultyPredicateExists() {","lastModifiedDate":"2024-03-16"},{"lineNumber":417,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate firstFacultyPredicate \u003d prepareFacultyPredicate(\"Business\");","lastModifiedDate":"2024-03-16"},{"lineNumber":418,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate secondFacultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-16"},{"lineNumber":419,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":420,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterFacultyFirstCommand \u003d new FilterCommand(emptyModulePredicate, firstFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":421,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":422,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterFacultySecondCommand \u003d new FilterCommand(emptyModulePredicate, secondFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":423,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":424,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":425,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":426,"author":{"gitId":"iynixil"},"content":"        assertTrue(filterFacultyFirstCommand.equals(filterFacultyFirstCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":427,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":428,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":429,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterFacultyFirstCommandCopy \u003d new FilterCommand(emptyModulePredicate, firstFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":430,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":431,"author":{"gitId":"iynixil"},"content":"        assertTrue(filterFacultyFirstCommand.equals(filterFacultyFirstCommandCopy));","lastModifiedDate":"2024-03-16"},{"lineNumber":432,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":433,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":434,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterFacultyFirstCommand.equals(1));","lastModifiedDate":"2024-03-16"},{"lineNumber":435,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":436,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":437,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterFacultyFirstCommand.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":438,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":439,"author":{"gitId":"iynixil"},"content":"        // different faculty -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":440,"author":{"gitId":"iynixil"},"content":"        System.err.println(filterFacultyFirstCommand.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":441,"author":{"gitId":"iynixil"},"content":"        System.err.println(filterFacultySecondCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":442,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterFacultyFirstCommand.equals(filterFacultySecondCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":443,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":444,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":445,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":446,"author":{"gitId":"iynixil"},"content":"    public void equals_onlyModulePredicateExists() {","lastModifiedDate":"2024-03-16"},{"lineNumber":447,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate firstModulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-16"},{"lineNumber":448,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate secondModulePredicate \u003d prepareModulePredicate(\"CS2100\");","lastModifiedDate":"2024-03-16"},{"lineNumber":449,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":450,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterModuleFirstCommand \u003d new FilterCommand(firstModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":451,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":452,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterModuleSecondCommand \u003d new FilterCommand(secondModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":453,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":454,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":455,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":456,"author":{"gitId":"iynixil"},"content":"        assertTrue(filterModuleFirstCommand.equals(filterModuleFirstCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":457,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":458,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":459,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterModuleFirstCommandCopy \u003d new FilterCommand(firstModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":460,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":461,"author":{"gitId":"iynixil"},"content":"        assertTrue(filterModuleFirstCommand.equals(filterModuleFirstCommandCopy));","lastModifiedDate":"2024-03-16"},{"lineNumber":462,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":463,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":464,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterModuleFirstCommand.equals(1));","lastModifiedDate":"2024-03-16"},{"lineNumber":465,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":466,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":467,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterModuleFirstCommand.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":468,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":469,"author":{"gitId":"iynixil"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":470,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterModuleFirstCommand.equals(filterModuleSecondCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":471,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":472,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":473,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":474,"author":{"gitId":"iynixil"},"content":"    public void equals_onlyTagPredicateExists() {","lastModifiedDate":"2024-03-16"},{"lineNumber":475,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate firstTagPredicate \u003d prepareTagsPredicate(\"friend\");","lastModifiedDate":"2024-03-16"},{"lineNumber":476,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate secondTagPredicate \u003d prepareTagsPredicate(\"colleagues\");","lastModifiedDate":"2024-03-16"},{"lineNumber":477,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":478,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterTagFirstCommand \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":479,"author":{"gitId":"iynixil"},"content":"                firstTagPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":480,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterTagSecondCommand \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":481,"author":{"gitId":"iynixil"},"content":"                secondTagPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":482,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":483,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":484,"author":{"gitId":"iynixil"},"content":"        assertTrue(filterTagFirstCommand.equals(filterTagFirstCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":485,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":486,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":487,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterTagFirstCommandCopy \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":488,"author":{"gitId":"iynixil"},"content":"                firstTagPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":489,"author":{"gitId":"iynixil"},"content":"        assertTrue(filterTagFirstCommand.equals(filterTagFirstCommandCopy));","lastModifiedDate":"2024-03-13"},{"lineNumber":490,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":491,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":492,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterTagFirstCommand.equals(1));","lastModifiedDate":"2024-03-13"},{"lineNumber":493,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":494,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":495,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterTagFirstCommand.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":496,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":497,"author":{"gitId":"iynixil"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":498,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterTagFirstCommand.equals(filterTagSecondCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":499,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":500,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":501,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":502,"author":{"gitId":"iynixil"},"content":"    public void equals_onlyAvailabilityPredicateExists() {","lastModifiedDate":"2024-03-25"},{"lineNumber":503,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate firstAvailabilityPredicate \u003d prepareAvailabilitiesPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":504,"author":{"gitId":"iynixil"},"content":"                \"monday 12:00 13:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":505,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate secondAvailabilityPredicate \u003d prepareAvailabilitiesPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":506,"author":{"gitId":"iynixil"},"content":"                \"thursday 14:00 18:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":507,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":508,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterAvailabilityFirstCommand \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":509,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, firstAvailabilityPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":510,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterTagSecondCommand \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":511,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, secondAvailabilityPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":512,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":513,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":514,"author":{"gitId":"iynixil"},"content":"        assertTrue(filterAvailabilityFirstCommand.equals(filterAvailabilityFirstCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":515,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":516,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":517,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterAvailabilityFirstCommandCopy \u003d new FilterCommand(emptyModulePredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":518,"author":{"gitId":"iynixil"},"content":"                emptyFacultyPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":519,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, firstAvailabilityPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":520,"author":{"gitId":"iynixil"},"content":"        assertTrue(filterAvailabilityFirstCommand.equals(filterAvailabilityFirstCommandCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":521,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":522,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":523,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterAvailabilityFirstCommand.equals(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":524,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":525,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":526,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterAvailabilityFirstCommand.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":527,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":528,"author":{"gitId":"iynixil"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":529,"author":{"gitId":"iynixil"},"content":"        assertFalse(filterAvailabilityFirstCommand.equals(filterTagSecondCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":530,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":531,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":532,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":533,"author":{"gitId":"iynixil"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-13"},{"lineNumber":534,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d prepareModulePredicate(\"CS2102\");","lastModifiedDate":"2024-03-16"},{"lineNumber":535,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d prepareFacultyPredicate(\"Computing\");","lastModifiedDate":"2024-03-17"},{"lineNumber":536,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d prepareTagsPredicate(\"hello\");","lastModifiedDate":"2024-03-16"},{"lineNumber":537,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d prepareAvailabilitiesPredicate(\"monday 12:00 13:00\");","lastModifiedDate":"2024-03-25"},{"lineNumber":538,"author":{"gitId":"iynixil"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(modulePredicate, facultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":539,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":540,"author":{"gitId":"iynixil"},"content":"        String expected \u003d FilterCommand.class.getCanonicalName() + \"{modulePredicate\u003d\" + modulePredicate","lastModifiedDate":"2024-03-17"},{"lineNumber":541,"author":{"gitId":"iynixil"},"content":"                + \", facultyPredicate\u003d\" + facultyPredicate","lastModifiedDate":"2024-03-17"},{"lineNumber":542,"author":{"gitId":"iynixil"},"content":"                + \", tagsPredicate\u003d\" + tagsPredicate","lastModifiedDate":"2024-03-25"},{"lineNumber":543,"author":{"gitId":"iynixil"},"content":"                + \", availabilitiesPredicate\u003d\" + availabilitiesPredicate + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":544,"author":{"gitId":"iynixil"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":545,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":546,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":547,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":548,"author":{"gitId":"iynixil"},"content":"     * Parses {@code userInput} into a {@code PersonHasModulePredicate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":549,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":550,"author":{"gitId":"iynixil"},"content":"    private PersonHasModulePredicate prepareModulePredicate(String userInput) {","lastModifiedDate":"2024-03-17"},{"lineNumber":551,"author":{"gitId":"iynixil"},"content":"        if (userInput \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":552,"author":{"gitId":"iynixil"},"content":"            return new PersonHasModulePredicate(null);","lastModifiedDate":"2024-03-17"},{"lineNumber":553,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":554,"author":{"gitId":"iynixil"},"content":"        Module module \u003d new Module(userInput);","lastModifiedDate":"2024-03-17"},{"lineNumber":555,"author":{"gitId":"iynixil"},"content":"        return new PersonHasModulePredicate(module);","lastModifiedDate":"2024-03-17"},{"lineNumber":556,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":557,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":558,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":559,"author":{"gitId":"iynixil"},"content":"     * Parses {@code userInput} into a {@code PersonHasFacultyPredicate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":560,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":561,"author":{"gitId":"iynixil"},"content":"    private PersonHasFacultyPredicate prepareFacultyPredicate(String userInput) {","lastModifiedDate":"2024-03-17"},{"lineNumber":562,"author":{"gitId":"iynixil"},"content":"        if (userInput \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":563,"author":{"gitId":"iynixil"},"content":"            return new PersonHasFacultyPredicate(null);","lastModifiedDate":"2024-03-17"},{"lineNumber":564,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":565,"author":{"gitId":"iynixil"},"content":"        Faculty faculty \u003d new Faculty(userInput);","lastModifiedDate":"2024-03-17"},{"lineNumber":566,"author":{"gitId":"iynixil"},"content":"        return new PersonHasFacultyPredicate(faculty);","lastModifiedDate":"2024-03-17"},{"lineNumber":567,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":568,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":569,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":570,"author":{"gitId":"iynixil"},"content":"     * Parses {@code userInput} into a {@code PersonHasTagsPredicate}.","lastModifiedDate":"2024-03-16"},{"lineNumber":571,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":572,"author":{"gitId":"iynixil"},"content":"    private PersonHasTagsPredicate prepareTagsPredicate(String userInput) {","lastModifiedDate":"2024-03-16"},{"lineNumber":573,"author":{"gitId":"iynixil"},"content":"        List\u003cTag\u003e tagList \u003d Stream.of(userInput.split(\" \")).map(str -\u003e new Tag(str)).collect(Collectors.toList());","lastModifiedDate":"2024-03-13"},{"lineNumber":574,"author":{"gitId":"iynixil"},"content":"        for (String separatedTag : userInput.split(\" \")) {","lastModifiedDate":"2024-03-13"},{"lineNumber":575,"author":{"gitId":"iynixil"},"content":"            tagList.add(new Tag(separatedTag));","lastModifiedDate":"2024-03-13"},{"lineNumber":576,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":577,"author":{"gitId":"iynixil"},"content":"        return new PersonHasTagsPredicate(new HashSet\u003cTag\u003e(tagList));","lastModifiedDate":"2024-03-13"},{"lineNumber":578,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":579,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":580,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":581,"author":{"gitId":"iynixil"},"content":"     * Parses {@code userInput} into a {@code PersonHasAvailabilitiesPredicate}.","lastModifiedDate":"2024-03-25"},{"lineNumber":582,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":583,"author":{"gitId":"iynixil"},"content":"    private PersonHasAvailabilitiesPredicate prepareAvailabilitiesPredicate(String userInput) {","lastModifiedDate":"2024-03-25"},{"lineNumber":584,"author":{"gitId":"iynixil"},"content":"        List\u003cAvailability\u003e availabilityList \u003d Stream.of(userInput.split(\"a/\")).map(str -\u003e new Availability(str))","lastModifiedDate":"2024-03-25"},{"lineNumber":585,"author":{"gitId":"iynixil"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-25"},{"lineNumber":586,"author":{"gitId":"iynixil"},"content":"        for (String separatedAvailability : userInput.split(\"a/\")) {","lastModifiedDate":"2024-03-25"},{"lineNumber":587,"author":{"gitId":"iynixil"},"content":"            availabilityList.add(new Availability(separatedAvailability));","lastModifiedDate":"2024-03-25"},{"lineNumber":588,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":589,"author":{"gitId":"iynixil"},"content":"        return new PersonHasAvailabilitiesPredicate(new HashSet\u003cAvailability\u003e(availabilityList));","lastModifiedDate":"2024-03-25"},{"lineNumber":590,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":591,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":592,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"tsulim":29,"iynixil":563}},{"path":"src/test/java/staffconnect/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tsulim":14,"iynixil":1,"-":76}},{"path":"src/test/java/staffconnect/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tsulim":5,"-":15}},{"path":"src/test/java/staffconnect/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"        model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"        expectedModel \u003d new ModelManager(model.getStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tsulim":10,"-":29}},{"path":"src/test/java/staffconnect/logic/commands/RefreshCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.meeting.MeetingDateTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.meeting.MeetingDescription;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"public class RefreshCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"    private Model model;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"    private Meeting outdatedMeeting1;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"    private Meeting outdatedMeeting2;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"    private Meeting upcomingMeeting;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"    private CommandResult expectedResultWithNoDeletion;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"    private CommandResult expectedResultWithDeletion;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"    private Person validPerson1;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"    private Person validPerson2;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"    private RefreshCommand command;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"        model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"        expectedModel \u003d new ModelManager(model.getStaffBook(), new UserPrefs());","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"        outdatedMeeting1 \u003d new Meeting(new MeetingDescription(\"French Revolution\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"                new MeetingDateTime(\"14/07/1789 12:00\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"        outdatedMeeting2 \u003d new Meeting(new MeetingDescription(\"Century End\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"                new MeetingDateTime(\"31/12/1999 23:59\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"        upcomingMeeting \u003d new Meeting(new MeetingDescription(\"Future\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"                new MeetingDateTime(\"01/01/2999 18:00\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"        validPerson1 \u003d buildValidPerson(0);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"        validPerson2 \u003d buildValidPerson(1);","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"        expectedResultWithNoDeletion \u003d new CommandResult(RefreshCommand.REFRESH_NO_MODIFICATION);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"        expectedResultWithDeletion \u003d new CommandResult(String.format(\"%s\\n%s\\n%s%s\", RefreshCommand.REFRESH_SUCCESS,","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"                \"The following meeting(s) is(are) deleted\",","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"                validPerson1.getName() + String.format(\" (Index: %d) %s\\n\", 1, outdatedMeeting1),","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"                validPerson2.getName() + String.format(\" (Index: %d) %s\\n\", 2, outdatedMeeting2)));","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"        command \u003d new RefreshCommand();","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"    public void noMeeting_refresh_success() throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"        assertCommandSuccess(command, model, expectedResultWithNoDeletion, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"JerryWang0000"},"content":"    public void noMeetingDeleted_refresh_success() throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, upcomingMeeting);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"        addMeetingCommand.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"JerryWang0000"},"content":"        addMeetingCommand.execute(expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"JerryWang0000"},"content":"        assertCommandSuccess(command, model, expectedResultWithNoDeletion, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"JerryWang0000"},"content":"    void meetingDeleted_refresh_success() throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"JerryWang0000"},"content":"        AddMeetingCommand addMeetingCommand1 \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, outdatedMeeting1);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"JerryWang0000"},"content":"        AddMeetingCommand addMeetingCommand2 \u003d new AddMeetingCommand(INDEX_SECOND_PERSON, outdatedMeeting2);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"        addMeetingCommand1.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"JerryWang0000"},"content":"        addMeetingCommand2.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"JerryWang0000"},"content":"        assertCommandSuccess(command, model, expectedResultWithDeletion, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"JerryWang0000"},"content":"    void someMeetingsDeleted_refresh_success() throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"JerryWang0000"},"content":"        AddMeetingCommand addMeetingCommand1 \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, outdatedMeeting1);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"JerryWang0000"},"content":"        AddMeetingCommand addMeetingCommand2 \u003d new AddMeetingCommand(INDEX_SECOND_PERSON, outdatedMeeting2);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"JerryWang0000"},"content":"        AddMeetingCommand addMeetingCommand3 \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, upcomingMeeting);","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"JerryWang0000"},"content":"        addMeetingCommand1.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"JerryWang0000"},"content":"        addMeetingCommand2.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"JerryWang0000"},"content":"        addMeetingCommand3.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"JerryWang0000"},"content":"        addMeetingCommand3.execute(expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"JerryWang0000"},"content":"        assertCommandSuccess(command, model, expectedResultWithDeletion, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"JerryWang0000"},"content":"    private Person buildValidPerson(int i) {","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"JerryWang0000"},"content":"        Person pickPerson \u003d model.getSortedFilteredPersonList().get(i);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"JerryWang0000"},"content":"        return new Person(pickPerson.getName(), pickPerson.getPhone(), pickPerson.getEmail(),","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"JerryWang0000"},"content":"                pickPerson.getModule(), pickPerson.getFaculty(), pickPerson.getVenue(),","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"JerryWang0000"},"content":"                pickPerson.getTags(), pickPerson.getAvailabilities(), pickPerson.getFavourite());","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"JerryWang0000":99}},{"path":"src/test/java/staffconnect/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.FacultyComparator.FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.ModuleComparator.MODULE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.PhoneComparator.PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.VenueComparator.VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"public class SortCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    public void execute_listIsNotFilteredNameComparator_showsSameList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"        expectedModel.updateSortedPersonList(NAME_COMPARATOR);","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"        SortCommand sortCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_LIST_SUCCESS, NAME_COMPARATOR);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"    public void execute_listIsFilteredNameComparator_showsSameList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        assertTrue(model.getStaffBook().equals(expectedModel.getStaffBook()));","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"        expectedModel.updateSortedPersonList(NAME_COMPARATOR);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"        SortCommand sortCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_LIST_SUCCESS, NAME_COMPARATOR);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"        SortCommand nameSortCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(nameSortCommand.equals(nameSortCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(nameSortCommand.equals(new SortCommand(NAME_COMPARATOR)));","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(nameSortCommand.equals(1));","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"whitesnowx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(nameSortCommand.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"whitesnowx"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(nameSortCommand.equals(new SortCommand(PHONE_COMPARATOR)));","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(nameSortCommand.equals(new SortCommand(MODULE_COMPARATOR)));","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(nameSortCommand.equals(new SortCommand(FACULTY_COMPARATOR)));","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(nameSortCommand.equals(new SortCommand(VENUE_COMPARATOR)));","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"whitesnowx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"whitesnowx"},"content":"        SortCommand sortCommand \u003d new SortCommand(NAME_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"whitesnowx"},"content":"        String expected \u003d SortCommand.class.getCanonicalName() + \"{comparator\u003d\" + NAME_COMPARATOR + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(expected, sortCommand.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"tsulim":26,"whitesnowx":58}},{"path":"src/test/java/staffconnect/logic/commands/UnfavCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FOURTH_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code UnfavCommand}.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"public class UnfavCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    private Model model \u003d new ModelManager(getTypicalStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"        Person personToUnfav \u003d model.getSortedFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"        Person unfavPerson \u003d new PersonBuilder(personToUnfav).withFavourite(false).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavCommand \u003d new UnfavCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d String.format(UnfavCommand.MESSAGE_REMOVE_PERSON_FAVOURITE_SUCCESS,","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"                Messages.format(unfavPerson));","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStaffBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(1), unfavPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"        assertCommandSuccess(unfavCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavCommand \u003d new UnfavCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"        assertCommandFailure(unfavCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"        Person personToUnfav \u003d model.getSortedFilteredPersonList().get(0);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"        Person unfavPerson \u003d new PersonBuilder(personToUnfav).withFavourite(false).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavCommand \u003d new UnfavCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d String.format(UnfavCommand.MESSAGE_REMOVE_PERSON_FAVOURITE_SUCCESS,","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"                Messages.format(unfavPerson));","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"        Model expectedModel \u003d new ModelManager(new StaffBook(model.getStaffBook()), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(0), unfavPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"        assertCommandSuccess(unfavCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"        // ensures that outOfBoundIndex is still in bounds of staff book list","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStaffBook().getPersonList().size());","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavCommand \u003d new UnfavCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"        assertCommandFailure(unfavCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"    public void execute_unfavNotFavouritePerson_throwsCommandException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavCommand \u003d new UnfavCommand(INDEX_FOURTH_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"        assertCommandFailure(unfavCommand, model, UnfavCommand.MESSAGE_DUPLICATE_UNFAV);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavFirstCommand \u003d new UnfavCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavSecondCommand \u003d new UnfavCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"tsulim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"tsulim"},"content":"        assertTrue(unfavFirstCommand.equals(unfavFirstCommand));","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavFirstCommandCopy \u003d new UnfavCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"tsulim"},"content":"        assertTrue(unfavFirstCommand.equals(unfavFirstCommandCopy));","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"tsulim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"tsulim"},"content":"        assertFalse(unfavFirstCommand.equals(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"tsulim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"        assertFalse(unfavFirstCommand.equals(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"tsulim"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"tsulim"},"content":"        assertFalse(unfavFirstCommand.equals(unfavSecondCommand));","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"tsulim"},"content":"        UnfavCommand unfavCommand \u003d new UnfavCommand(targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"        String expected \u003d UnfavCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"tsulim"},"content":"        assertEquals(expected, unfavCommand.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":121}},{"path":"src/test/java/staffconnect/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.AVAILABILITY_DESC_MON;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.AVAILABILITY_DESC_THUR;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.FACULTY_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.FACULTY_DESC_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_AVAILABILITY_DESC;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_FACULTY_DESC;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_MODULE_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_VENUE_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.MODULE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.MODULE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_MON;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_THUR;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_VENUE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VENUE_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VENUE_DESC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"                + EMAIL_DESC_BOB + MODULE_DESC_BOB + FACULTY_DESC_BOB + VENUE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"                + TAG_DESC_FRIEND + AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR,","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"                        + FACULTY_DESC_BOB + VENUE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"                        + AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR,","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"        // multiple availabilities - all accepted","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"        Person expectedPersonMultipleAvailabilities \u003d new PersonBuilder(BOB)","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"                .withAvailabilities(VALID_AVAILABILITY_MON, VALID_AVAILABILITY_THUR).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"                    + FACULTY_DESC_BOB + VENUE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"                    + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"tsulim"},"content":"                    + AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR,","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"tsulim"},"content":"                new AddCommand(expectedPersonMultipleAvailabilities));","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"tsulim"},"content":"    public void parse_repeatedNonTagAvailabilityValue_failure() {","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"        // multiple modules","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, MODULE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MODULE));","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"JerryWang0000"},"content":"        // multiple faculties","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"JerryWang0000"},"content":"        assertParseFailure(parser, FACULTY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"JerryWang0000"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FACULTY));","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"        // multiple venues","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, VENUE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"iynixil"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_VENUE));","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"JerryWang0000"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + FACULTY_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"JerryWang0000"},"content":"                        + NAME_DESC_AMY + VENUE_DESC_AMY + MODULE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"JerryWang0000"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_MODULE, PREFIX_FACULTY,","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"JerryWang0000"},"content":"                        PREFIX_VENUE, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"tsulim"},"content":"        // invalid module","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, INVALID_MODULE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"tsulim"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MODULE));","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"JerryWang0000"},"content":"        // invalid faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"JerryWang0000"},"content":"        assertParseFailure(parser, INVALID_FACULTY_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"JerryWang0000"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FACULTY));","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"iynixil"},"content":"        // invalid venue","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, INVALID_VENUE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"iynixil"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_VENUE));","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"tsulim"},"content":"        // invalid module","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_MODULE_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"tsulim"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MODULE));","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"JerryWang0000"},"content":"        // invalid faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":182,"author":{"gitId":"JerryWang0000"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_FACULTY_DESC,","lastModifiedDate":"2024-03-15"},{"lineNumber":183,"author":{"gitId":"JerryWang0000"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_FACULTY));","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":185,"author":{"gitId":"iynixil"},"content":"        // invalid venue","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_VENUE_DESC,","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"iynixil"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_VENUE));","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":192,"author":{"gitId":"tsulim"},"content":"        // zero tags and availabilities","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"tsulim"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withAvailabilities().build();","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"tsulim"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + MODULE_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"tsulim"},"content":"                        + FACULTY_DESC_AMY + VENUE_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"tsulim"},"content":"        // missing module prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_MODULE_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VALID_VENUE_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"tsulim"},"content":"            expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":222,"author":{"gitId":"tsulim"},"content":"        // missing faculty prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":223,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"tsulim"},"content":"                + VALID_FACULTY_BOB + VENUE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"tsulim"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":226,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":227,"author":{"gitId":"tsulim"},"content":"        // missing venue prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":228,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VALID_VENUE_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":233,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_MODULE_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"tsulim"},"content":"                + VALID_FACULTY_BOB + VALID_VENUE_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":241,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_MON,","lastModifiedDate":"2024-03-16"},{"lineNumber":243,"author":{"gitId":"tsulim"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":247,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_MON,","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"tsulim"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":251,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":252,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_MON,","lastModifiedDate":"2024-03-16"},{"lineNumber":253,"author":{"gitId":"tsulim"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"tsulim"},"content":"        // invalid module","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_MODULE_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":257,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_MON,","lastModifiedDate":"2024-03-16"},{"lineNumber":258,"author":{"gitId":"tsulim"},"content":"            Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":260,"author":{"gitId":"JerryWang0000"},"content":"        // invalid faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":261,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":262,"author":{"gitId":"tsulim"},"content":"                + INVALID_FACULTY_DESC + VENUE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-16"},{"lineNumber":263,"author":{"gitId":"JerryWang0000"},"content":"                Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":265,"author":{"gitId":"iynixil"},"content":"        // invalid venue","lastModifiedDate":"2024-03-13"},{"lineNumber":266,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":267,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + INVALID_VENUE_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_MON,","lastModifiedDate":"2024-03-16"},{"lineNumber":268,"author":{"gitId":"tsulim"},"content":"            Venue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":271,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":272,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND + AVAILABILITY_DESC_MON,","lastModifiedDate":"2024-03-16"},{"lineNumber":273,"author":{"gitId":"tsulim"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":275,"author":{"gitId":"tsulim"},"content":"        // invalid availability","lastModifiedDate":"2024-03-15"},{"lineNumber":276,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":277,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + VENUE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_AVAILABILITY_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":278,"author":{"gitId":"tsulim"},"content":"                Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":279,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":281,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":282,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_BOB + INVALID_VENUE_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":287,"author":{"gitId":"tsulim"},"content":"                + MODULE_DESC_BOB + FACULTY_DESC_BOB + VENUE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-16"},{"lineNumber":288,"author":{"gitId":"tsulim"},"content":"                + AVAILABILITY_DESC_MON,","lastModifiedDate":"2024-03-16"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tsulim":140,"iynixil":15,"JerryWang0000":24,"-":112}},{"path":"src/test/java/staffconnect/logic/parser/AddMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.DATE_STARTDATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.DESCRIPTION_MIDTERM;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_STARTDATE;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_DATE_APRIL;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_DESCRIPTION_FINALS;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERMS;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_DESCRIPTION;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_STARTDATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.commands.AddMeetingCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDateTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"public class AddMeetingCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"    private final AddMeetingCommandParser parser \u003d new AddMeetingCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        // no index specified","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, DESCRIPTION_MIDTERM + DATE_STARTDATE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"        //missing description","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1\" + DATE_STARTDATE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"        //missing date","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1\" + DESCRIPTION_MIDTERM, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"    public void parse_missingPrefix_failure() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"        //Missing description prefix, valid date and preamble","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1\" + VALID_DESCRIPTION_MIDTERMS + DATE_STARTDATE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        //Missing date prefix, valid description and preamble","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1\" + DESCRIPTION_MIDTERM + VALID_DATE_APRIL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"        //Missing prefix on both description and date","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1\" + VALID_DESCRIPTION_FINALS + VALID_DATE_APRIL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"        // non-empty rubbish preamble","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + DESCRIPTION_MIDTERM + DATE_STARTDATE,","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        // negative index","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"-5\" + DESCRIPTION_MIDTERM + DATE_STARTDATE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"        // zero index","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"0\" + DESCRIPTION_MIDTERM + DATE_STARTDATE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"        //both invalid values for description and date, first value reported","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESCRIPTION + INVALID_STARTDATE,","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"                MeetingDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"        // invalid description followed by valid date","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESCRIPTION + DATE_STARTDATE,","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"                MeetingDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"        // valid description followed by invalid date","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, \"1\" + DESCRIPTION_MIDTERM + INVALID_STARTDATE, MeetingDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Pluiexo"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Pluiexo"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Pluiexo"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_MIDTERM + DATE_STARTDATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Pluiexo"},"content":"        AddMeetingCommand expectedCommand \u003d new AddMeetingCommand(targetIndex, VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Pluiexo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Pluiexo"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Pluiexo"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Pluiexo"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Pluiexo"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_MIDTERM + INVALID_DESCRIPTION + DATE_STARTDATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEETING_DESCRIPTION));","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Pluiexo"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"Pluiexo"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_DESCRIPTION + DESCRIPTION_MIDTERM + DATE_STARTDATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEETING_DESCRIPTION));","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"Pluiexo"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"Pluiexo"},"content":"        userInput \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"Pluiexo"},"content":"                targetIndex.getOneBased() + DESCRIPTION_MIDTERM + DATE_STARTDATE + DESCRIPTION_MIDTERM + DATE_STARTDATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEETING_DESCRIPTION,","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"Pluiexo"},"content":"                PREFIX_MEETING_STARTDATE));","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"Pluiexo"},"content":"        // multiple invalid values","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"Pluiexo"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_DESCRIPTION + INVALID_STARTDATE + INVALID_DESCRIPTION","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"Pluiexo"},"content":"                + INVALID_STARTDATE;","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEETING_DESCRIPTION,","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"Pluiexo"},"content":"                PREFIX_MEETING_STARTDATE));","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Pluiexo":137}},{"path":"src/test/java/staffconnect/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"tsulim":1,"-":149}},{"path":"src/test/java/staffconnect/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.Command;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"tsulim":3,"-":36}},{"path":"src/test/java/staffconnect/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"tsulim":6,"-":26}},{"path":"src/test/java/staffconnect/logic/parser/DeleteMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MEETING_INDEX;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"class DeleteMeetingCommandParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    private static final DeleteMeetingCommandParser PARSER \u003d new DeleteMeetingCommandParser();","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    public void parse_validArgs_returnsDeleteMeetingCommand() {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"        assertParseSuccess(PARSER, \"1 \" + PREFIX_MEETING_INDEX + \"1\",","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"                new DeleteMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING));","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    public void parse_invalidMissingArgs_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        //Both args missing","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, PREFIX_MEETING_INDEX.toString(),","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        //Missing person index","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, PREFIX_MEETING_INDEX + \"1\",","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        //Missing meeting index","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, \"1 \" + PREFIX_MEETING_INDEX,","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"        //non empty preamble","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, PREAMBLE_NON_EMPTY + PREFIX_MEETING_INDEX + \"1\",","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"        //Invalid person index","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, \"a \" + PREFIX_MEETING_INDEX + \"1\",","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        //invalid meeting index","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, \"1 \" + PREFIX_MEETING_INDEX + \"a\",","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    public void parse_invalidDuplicateArgs_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        //repeated valid meeting index","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        String userInput \u003d \"1 \" + PREFIX_MEETING_INDEX + \"1 \" + PREFIX_MEETING_INDEX + \"1\";","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEETING_INDEX));","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"        //repeated valid meeting index, one invalid meeting index","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        userInput \u003d \"1 \" + PREFIX_MEETING_INDEX + \"1 \" + PREFIX_MEETING_INDEX + \"asd\";","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEETING_INDEX));","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        //repeated valid person index","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"        userInput \u003d \"1 \" + \"  1 \" + PREFIX_MEETING_INDEX + \"1\";","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, userInput,","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        //repeated valid person index, one invalid person index","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"        userInput \u003d \"1 \" + \"asda \" + PREFIX_MEETING_INDEX + \"1\";","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        assertParseFailure(PARSER, userInput,","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Pluiexo":76}},{"path":"src/test/java/staffconnect/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.AVAILABILITY_DESC_MON;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.AVAILABILITY_DESC_THUR;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.FACULTY_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.FACULTY_DESC_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_AVAILABILITY_DESC;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_FACULTY_DESC;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_MODULE_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_VENUE_DESC;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.MODULE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.MODULE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_MON;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_THUR;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_FACULTY_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MODULE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_VENUE_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VENUE_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VENUE_DESC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.Messages;","lastModifiedDate":"2024-03-10"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"    private static final String AVAILABILITY_EMPTY \u003d \" \" + PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODULE_DESC, Module.MESSAGE_CONSTRAINTS); // invalid module","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"JerryWang0000"},"content":"        assertParseFailure(parser, \"1\" + INVALID_FACULTY_DESC,","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"JerryWang0000"},"content":"            Faculty.MESSAGE_CONSTRAINTS); // invalid faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, \"1\" + INVALID_VENUE_DESC, Venue.MESSAGE_CONSTRAINTS); // invalid venue","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, \"1\" + INVALID_AVAILABILITY_DESC,","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"                Availability.MESSAGE_CONSTRAINTS); // invalid availability","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"tsulim"},"content":"        // while parsing {@code PREFIX_AVAILABILITY} alone will reset the availabilities of the","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"tsulim"},"content":"        // {@code Person} being edited, parsing it together with a valid availability results in error","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"tsulim"},"content":"            \"1\" + AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR + AVAILABILITY_EMPTY,","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"tsulim"},"content":"                Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"tsulim"},"content":"            \"1\" + AVAILABILITY_DESC_MON + AVAILABILITY_EMPTY + AVAILABILITY_DESC_THUR,","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"tsulim"},"content":"                Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"tsulim"},"content":"            \"1\" + AVAILABILITY_EMPTY + AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR,","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"tsulim"},"content":"            Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_MODULE_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"tsulim"},"content":"                + VALID_FACULTY_AMY + VALID_VENUE_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"JerryWang0000"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"tsulim"},"content":"                + NAME_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"tsulim"},"content":"                + EMAIL_DESC_AMY + MODULE_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"tsulim"},"content":"                + FACULTY_DESC_AMY + VENUE_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"tsulim"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"tsulim"},"content":"                + AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR;","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"tsulim"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withModule(VALID_MODULE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"tsulim"},"content":"                .withFaculty(VALID_FACULTY_AMY).withVenue(VALID_VENUE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"tsulim"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"tsulim"},"content":"                .withAvailabilities(VALID_AVAILABILITY_MON, VALID_AVAILABILITY_THUR).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"tsulim"},"content":"        // module","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"tsulim"},"content":"        userInput \u003d targetIndex.getOneBased() + MODULE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"tsulim"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withModule(VALID_MODULE_AMY).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"tsulim"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"tsulim"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"JerryWang0000"},"content":"        // faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":204,"author":{"gitId":"JerryWang0000"},"content":"        userInput \u003d targetIndex.getOneBased() + FACULTY_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"JerryWang0000"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withFaculty(VALID_FACULTY_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"JerryWang0000"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":207,"author":{"gitId":"JerryWang0000"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"iynixil"},"content":"        // venue","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"iynixil"},"content":"        userInput \u003d targetIndex.getOneBased() + VENUE_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":211,"author":{"gitId":"iynixil"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withVenue(VALID_VENUE_AMY).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"tsulim"},"content":"        // availabilities","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"tsulim"},"content":"        userInput \u003d targetIndex.getOneBased() + AVAILABILITY_DESC_MON;","lastModifiedDate":"2024-03-15"},{"lineNumber":223,"author":{"gitId":"tsulim"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAvailabilities(VALID_AVAILABILITY_MON).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"tsulim"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"tsulim"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":245,"author":{"gitId":"JerryWang0000"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + VENUE_DESC_AMY + EMAIL_DESC_AMY + FACULTY_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":246,"author":{"gitId":"tsulim"},"content":"                + MODULE_DESC_AMY + TAG_DESC_FRIEND + AVAILABILITY_DESC_MON + PHONE_DESC_AMY","lastModifiedDate":"2024-03-15"},{"lineNumber":247,"author":{"gitId":"tsulim"},"content":"                + VENUE_DESC_AMY + EMAIL_DESC_AMY + FACULTY_DESC_AMY + MODULE_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"tsulim"},"content":"                + AVAILABILITY_DESC_MON + PHONE_DESC_BOB + VENUE_DESC_BOB + EMAIL_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"tsulim"},"content":"                + MODULE_DESC_BOB + TAG_DESC_HUSBAND + AVAILABILITY_DESC_THUR;","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":252,"author":{"gitId":"tsulim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"tsulim"},"content":"                    PREFIX_MODULE, PREFIX_FACULTY, PREFIX_VENUE));","lastModifiedDate":"2024-03-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":256,"author":{"gitId":"tsulim"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_VENUE_DESC","lastModifiedDate":"2024-03-14"},{"lineNumber":257,"author":{"gitId":"JerryWang0000"},"content":"                + INVALID_EMAIL_DESC + INVALID_FACULTY_DESC + INVALID_MODULE_DESC","lastModifiedDate":"2024-03-15"},{"lineNumber":258,"author":{"gitId":"JerryWang0000"},"content":"                + INVALID_PHONE_DESC + INVALID_VENUE_DESC","lastModifiedDate":"2024-03-15"},{"lineNumber":259,"author":{"gitId":"JerryWang0000"},"content":"                + INVALID_EMAIL_DESC + INVALID_FACULTY_DESC + INVALID_MODULE_DESC;","lastModifiedDate":"2024-03-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":262,"author":{"gitId":"tsulim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_MODULE,","lastModifiedDate":"2024-03-16"},{"lineNumber":263,"author":{"gitId":"tsulim"},"content":"                        PREFIX_FACULTY, PREFIX_VENUE));","lastModifiedDate":"2024-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"tsulim":98,"iynixil":10,"JerryWang0000":19,"-":149}},{"path":"src/test/java/staffconnect/logic/parser/FavCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.FavCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":" * outside of the FavCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":" * same path through the FavCommand, and therefore we test only one of them.","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"public class FavCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"    private FavCommandParser parser \u003d new FavCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"        assertParseSuccess(parser, \"1\", new FavCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FavCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":32}},{"path":"src/test/java/staffconnect/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.AVAILABILITY_DESC_MON;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.AVAILABILITY_DESC_THUR;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.FACULTY_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_AVAILABILITY_DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_FACULTY_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_MODULE_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.MODULE_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_MON;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_THUR;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_FACULTY_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MODULE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"import staffconnect.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasAvailabilitiesPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasFacultyPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasModulePredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasTagsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    private PersonHasModulePredicate emptyModulePredicate \u003d new PersonHasModulePredicate(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    private PersonHasFacultyPredicate emptyFacultyPredicate \u003d new PersonHasFacultyPredicate(null);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    private PersonHasTagsPredicate emptyTagsPredicate \u003d new PersonHasTagsPredicate(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"    private PersonHasAvailabilitiesPredicate emptyAvailabilitiesPredicate \u003d new PersonHasAvailabilitiesPredicate(null);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"    public void parse_invalidModule_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"        // module is empty string (contains \u0027\u0027)","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, INVALID_MODULE_DESC,","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"                String.format(Module.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"    public void parse_validModule_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"        Module module \u003d new Module(VALID_MODULE_AMY);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        // single module","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"        // 1 leading and no trailing whitespaces (MODULE_DESC_xxx always has 1 leading)","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d new PersonHasModulePredicate(module);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(modulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, MODULE_DESC_AMY, expectedFilterCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"        // 1 leading and multiple trailing whitespaces","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 3 trailing","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, MODULE_DESC_AMY + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"        // multiple leading and trailing whitespaces","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"        // 2 leading, 1 trailing","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"  \" + MODULE_DESC_AMY + \" \", expectedFilterCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"        // 5 leading, 3 trailing","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"     \" + MODULE_DESC_AMY + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"    public void parse_invalidFaculty_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"        // invalid faculty -\u003e \"faculty\"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, INVALID_FACULTY_DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"                String.format(Faculty.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"    public void parse_validFaculty_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"        Faculty faculty \u003d new Faculty(VALID_FACULTY_AMY);","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"        // single faculty","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"        // 1 leading and no trailing whitespaces (FACULTY_DESC_xxx always has 1 leading)","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d new PersonHasFacultyPredicate(faculty);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(emptyModulePredicate, facultyPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, FACULTY_DESC_AMY, expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"        // 1 leading and multiple trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 3 trailing","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, FACULTY_DESC_AMY + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"        // multiple leading and trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"        // 2 leading, 1 trailing","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"  \" + FACULTY_DESC_AMY + \" \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"iynixil"},"content":"        // 5 leading, 3 trailing","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"     \" + FACULTY_DESC_AMY + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"    public void parse_invalidTagName_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"        // tagname is non-alphanumeric (contains \u0027*\u0027)","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC,","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"                String.format(Tag.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"    public void parse_validTagName_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e singleTag \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_FRIEND)));","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"iynixil"},"content":"        // single tag","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"iynixil"},"content":"        // 1 leading and no trailing whitespaces (TAG_DESC_xxx always has 1 leading)","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate tagsPredicate \u003d new PersonHasTagsPredicate(singleTag);","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"iynixil"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"                tagsPredicate, emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND, expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"iynixil"},"content":"        // 1 leading and multiple trailing whitespaces","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 3 trailing","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"iynixil"},"content":"        // multiple leading and trailing whitespaces","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"iynixil"},"content":"        // 2 leading, 1 trailing","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"  \" + TAG_DESC_FRIEND + \" \", expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"iynixil"},"content":"        // 5 leading, 3 trailing","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"     \" + TAG_DESC_FRIEND + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"iynixil"},"content":"        // multiple tags","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e multipleTags \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_FRIEND),","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"iynixil"},"content":"                new Tag(VALID_TAG_HUSBAND)));","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"iynixil"},"content":"        tagsPredicate \u003d new PersonHasTagsPredicate(multipleTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"iynixil"},"content":"        expectedFilterCommand \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, tagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"iynixil"},"content":"                emptyAvailabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"iynixil"},"content":"        // 1 leading and no trailing whitespaces","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND + TAG_DESC_HUSBAND, expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"iynixil"},"content":"        // 1 leading and multiple trailing whitespaces","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 3 trailing","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND + TAG_DESC_HUSBAND + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"iynixil"},"content":"        // multiple leading and trailing whitespaces","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"iynixil"},"content":"        // 2 leading, 1 trailing","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"  \" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + \" \", expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"iynixil"},"content":"        // 5 leading, 3 trailing","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"     \" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"iynixil"},"content":"        // whitespaces in middle","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 1 middle, 3 trailing","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND + \" \" + TAG_DESC_HUSBAND + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 3 middle, 1 trailing","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND + \"   \" + TAG_DESC_HUSBAND + \" \", expectedFilterCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"iynixil"},"content":"    public void parse_invalidAvailability_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"iynixil"},"content":"        // availability is non-alphanumeric (contains \u0027*\u0027)","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"iynixil"},"content":"        assertParseFailure(parser, INVALID_AVAILABILITY_DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"iynixil"},"content":"                String.format(Availability.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"iynixil"},"content":"    public void parse_validAvailability_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e singleAvailability \u003d new HashSet\u003cAvailability\u003e(","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Availability(VALID_AVAILABILITY_MON)));","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"iynixil"},"content":"        // single availability","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"iynixil"},"content":"        // 1 leading and no trailing whitespaces (AVAILABILITY_DESC_xxx always has 1","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"iynixil"},"content":"        // leading)","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate availabilitiesPredicate \u003d new PersonHasAvailabilitiesPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"iynixil"},"content":"                singleAvailability);","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"iynixil"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"iynixil"},"content":"                emptyTagsPredicate, availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, AVAILABILITY_DESC_MON, expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"iynixil"},"content":"        // 1 leading and multiple trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 3 trailing","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, AVAILABILITY_DESC_MON + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"iynixil"},"content":"        // multiple leading and trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"iynixil"},"content":"        // 2 leading, 1 trailing","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"  \" + AVAILABILITY_DESC_MON + \" \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"iynixil"},"content":"        // 5 leading, 3 trailing","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"     \" + AVAILABILITY_DESC_MON + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"iynixil"},"content":"        // multiple availabilities","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e multipleAvailabilities \u003d new HashSet\u003cAvailability\u003e(","lastModifiedDate":"2024-03-25"},{"lineNumber":199,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Availability(VALID_AVAILABILITY_MON),","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"iynixil"},"content":"                        new Availability(VALID_AVAILABILITY_THUR)));","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"iynixil"},"content":"        availabilitiesPredicate \u003d new PersonHasAvailabilitiesPredicate(multipleAvailabilities);","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"iynixil"},"content":"        expectedFilterCommand \u003d new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"iynixil"},"content":"                availabilitiesPredicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"iynixil"},"content":"        // 1 leading and no trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR, expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"iynixil"},"content":"        // 1 leading and multiple trailing whitespaces","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 3 trailing","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"iynixil"},"content":"        // multiple leading and trailing whitespaces","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"iynixil"},"content":"        // 2 leading, 1 trailing","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"  \" + AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR + \" \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"iynixil"},"content":"        // 5 leading, 3 trailing","lastModifiedDate":"2024-03-16"},{"lineNumber":216,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, \"     \" + AVAILABILITY_DESC_MON + AVAILABILITY_DESC_THUR + \"   \",","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"iynixil"},"content":"                expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"iynixil"},"content":"        // whitespaces in middle","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 1 middle, 3 trailing","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, AVAILABILITY_DESC_MON + \" \" + AVAILABILITY_DESC_THUR + \"   \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"iynixil"},"content":"        // 1 leading, 3 middle, 1 trailing","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"iynixil"},"content":"        assertParseSuccess(parser, AVAILABILITY_DESC_MON + \"   \" + AVAILABILITY_DESC_THUR + \" \", expectedFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"iynixil":226}},{"path":"src/test/java/staffconnect/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.FindCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"tsulim":5,"iynixil":1,"-":28}},{"path":"src/test/java/staffconnect/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"    private static final String INVALID_FACULTY \u003d \"faculty\";","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    private static final String INVALID_VENUE \u003d \" \";","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"    private static final String INVALID_MODULE \u003d \" \";","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"    private static final String VALID_FACULTY \u003d \"Computing\";","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"    private static final String VALID_VENUE \u003d \"123 Main Street #0505\";","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"    private static final String VALID_MODULE \u003d \"CS2103\";","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"tsulim"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"tsulim"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"tsulim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"tsulim"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"tsulim"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"tsulim"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"tsulim"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"tsulim"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"tsulim"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"tsulim"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"JerryWang0000"},"content":"    public void parseFaculty_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"JerryWang0000"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFaculty((String) null));","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"JerryWang0000"},"content":"    public void parseFaculty_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"JerryWang0000"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFaculty(INVALID_FACULTY));","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"JerryWang0000"},"content":"    public void parseFaculty_validValueWithoutWhitespace_returnsFaculty() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"JerryWang0000"},"content":"        Faculty expectedFaculty \u003d new Faculty(VALID_FACULTY);","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"JerryWang0000"},"content":"        assertEquals(expectedFaculty, ParserUtil.parseFaculty(VALID_FACULTY));","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":151,"author":{"gitId":"JerryWang0000"},"content":"    public void parseFaculty_validValueWithWhitespace_returnsTrimmedFaculty() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"JerryWang0000"},"content":"        String facultyWithWhitespace \u003d WHITESPACE + VALID_FACULTY + WHITESPACE;","lastModifiedDate":"2024-03-15"},{"lineNumber":153,"author":{"gitId":"JerryWang0000"},"content":"        Faculty expectedFaculty \u003d new Faculty(VALID_FACULTY);","lastModifiedDate":"2024-03-15"},{"lineNumber":154,"author":{"gitId":"JerryWang0000"},"content":"        assertEquals(expectedFaculty, ParserUtil.parseFaculty(facultyWithWhitespace));","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"iynixil"},"content":"    public void parseVenue_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"iynixil"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVenue((String) null));","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"iynixil"},"content":"    public void parseVenue_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"iynixil"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVenue(INVALID_VENUE));","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"iynixil"},"content":"    public void parseVenue_validValueWithoutWhitespace_returnsVenue() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"iynixil"},"content":"        Venue expectedVenue \u003d new Venue(VALID_VENUE);","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"iynixil"},"content":"        assertEquals(expectedVenue, ParserUtil.parseVenue(VALID_VENUE));","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"iynixil"},"content":"    public void parseVenue_validValueWithWhitespace_returnsTrimmedVenue() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"iynixil"},"content":"        String venueWithWhitespace \u003d WHITESPACE + VALID_VENUE + WHITESPACE;","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"iynixil"},"content":"        Venue expectedVenue \u003d new Venue(VALID_VENUE);","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"iynixil"},"content":"        assertEquals(expectedVenue, ParserUtil.parseVenue(venueWithWhitespace));","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"tsulim"},"content":"    public void parseModule_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModule((String) null));","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"tsulim"},"content":"    public void parseModule_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"tsulim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModule(INVALID_MODULE));","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"tsulim"},"content":"    public void parseModule_validValueWithoutWhitespace_returnsModule() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"tsulim"},"content":"        Module expectedModule \u003d new Module(VALID_MODULE);","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"tsulim"},"content":"        assertEquals(expectedModule, ParserUtil.parseModule(VALID_MODULE));","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"tsulim"},"content":"    public void parseModule_validValueWithWhitespace_returnsTrimmedModule() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"tsulim"},"content":"        String moduleWithWhitespace \u003d WHITESPACE + VALID_MODULE + WHITESPACE;","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"tsulim"},"content":"        Module expectedModule \u003d new Module(VALID_MODULE);","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"tsulim"},"content":"        assertEquals(expectedModule, ParserUtil.parseModule(moduleWithWhitespace));","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tsulim":34,"iynixil":13,"JerryWang0000":17,"-":184}},{"path":"src/test/java/staffconnect/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.FacultyComparator.FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.ModuleComparator.MODULE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.PhoneComparator.PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.VenueComparator.VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.logic.commands.SortCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"        assertParseFailure(parser, \"l/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(VENUE_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        // no leading and no trailing whitespaces","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, \"\" + PREFIX_VENUE, expectedSortCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"        // 1 leading and no trailing whitespaces","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_VENUE, expectedSortCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"        // no leading and 1 trailing whitespaces","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, PREFIX_VENUE + \" \", expectedSortCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"        // multiple whitespaces before and after keywords","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, \"   \" + PREFIX_VENUE + \"    \", expectedSortCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"    public void parse_validArgs_returnsSortCorrectAttribute() {","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, \"\" + PREFIX_NAME, new SortCommand(NAME_COMPARATOR));","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, \"\" + PREFIX_PHONE, new SortCommand(PHONE_COMPARATOR));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, \"\" + PREFIX_MODULE, new SortCommand(MODULE_COMPARATOR));","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, \"\" + PREFIX_FACULTY, new SortCommand(FACULTY_COMPARATOR));","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"whitesnowx"},"content":"        assertParseSuccess(parser, \"\" + PREFIX_VENUE, new SortCommand(VENUE_COMPARATOR));","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"whitesnowx":70}},{"path":"src/test/java/staffconnect/logic/parser/StaffConnectParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.FavCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"import staffconnect.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.FindCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.ListCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.logic.commands.RefreshCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.logic.commands.SortCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.UnfavCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.comparators.ModuleComparator;","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.comparators.NameComparator;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.comparators.PhoneComparator;","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"import staffconnect.model.person.comparators.VenueComparator;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasAvailabilitiesPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasFacultyPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasModulePredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.PersonHasTagsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"public class StaffConnectParserTest {","lastModifiedDate":"2024-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"    private final StaffConnectParser parser \u003d new StaffConnectParser();","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate emptyModulePredicate \u003d new PersonHasModulePredicate(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate emptyFacultyPredicate \u003d new PersonHasFacultyPredicate(null);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate emptyTagsPredicate \u003d new PersonHasTagsPredicate(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate emptyAvailabilitiesPredicate \u003d new PersonHasAvailabilitiesPredicate(null);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"        // module","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"        Module module \u003d new Module(\"CS2102\");","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate modulePredicate \u003d new PersonHasModulePredicate(module);","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"        FilterCommand moduleFilterCommand \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"                + \" m/\" + module);","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"        assertEquals(","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"                new FilterCommand(modulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"                        emptyAvailabilitiesPredicate),","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"                moduleFilterCommand);","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"iynixil"},"content":"        // faculty","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"iynixil"},"content":"        Faculty faculty \u003d new Faculty(\"Business\");","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate facultyPredicate \u003d new PersonHasFacultyPredicate(faculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"        FilterCommand facultyFilterCommand \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"                + \" f/\" + faculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"        assertEquals(","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"                new FilterCommand(emptyModulePredicate, facultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"                        emptyAvailabilitiesPredicate),","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"                facultyFilterCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"        // single tag","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"iynixil"},"content":"        String tag \u003d \"hello\";","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e singleTag \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(tag)));","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate singleTagPredicate \u003d new PersonHasTagsPredicate(singleTag);","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"        FilterCommand singleTagFilterCommand \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"iynixil"},"content":"                + \" t/\" + tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"iynixil"},"content":"        assertEquals(","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"iynixil"},"content":"                new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, singleTagPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"iynixil"},"content":"                        emptyAvailabilitiesPredicate),","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"                singleTagFilterCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"iynixil"},"content":"        // multiple tags","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"iynixil"},"content":"        String secondTag \u003d \"hello2\";","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e multipleTags \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(tag), new Tag(secondTag)));","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate multipleTagsPredicate \u003d new PersonHasTagsPredicate(multipleTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"iynixil"},"content":"        FilterCommand multipleTagsFilterCommand \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"iynixil"},"content":"                + \" t/\" + tag + \" t/\" + secondTag);","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"iynixil"},"content":"        assertEquals(","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"iynixil"},"content":"                new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, multipleTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"iynixil"},"content":"                        emptyAvailabilitiesPredicate),","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"iynixil"},"content":"                multipleTagsFilterCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"iynixil"},"content":"        // single availabilty","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"iynixil"},"content":"        String availability \u003d \"mon 12:00 13:00\";","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e singleAvailability \u003d new HashSet\u003cAvailability\u003e(Arrays.asList(new Availability(availability)));","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate singleAvailabilityPredicate \u003d new PersonHasAvailabilitiesPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"iynixil"},"content":"                singleAvailability);","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"iynixil"},"content":"        FilterCommand singleAvailabilityFilterCommand \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"iynixil"},"content":"                + \" a/\" + availability);","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"iynixil"},"content":"        assertEquals(","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"iynixil"},"content":"                new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"iynixil"},"content":"                        singleAvailabilityPredicate),","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"iynixil"},"content":"                singleAvailabilityFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"iynixil"},"content":"        // multiple availabilities","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"iynixil"},"content":"        String secondAvailability \u003d \"tues 14:00 16:00\";","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e multipleAvailabilities \u003d new HashSet\u003cAvailability\u003e(","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Availability(availability), new Availability(secondAvailability)));","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate multipleAvailabilitiesPredicate \u003d new PersonHasAvailabilitiesPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"iynixil"},"content":"                multipleAvailabilities);","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"iynixil"},"content":"        FilterCommand multipleAvailabilitiesFilterCommand \u003d (FilterCommand) parser","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"iynixil"},"content":"                .parseCommand(FilterCommand.COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"iynixil"},"content":"                        + \" a/\" + availability + \" a/\" + secondAvailability);","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"iynixil"},"content":"        assertEquals(","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"iynixil"},"content":"                new FilterCommand(emptyModulePredicate, emptyFacultyPredicate, emptyTagsPredicate,","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"iynixil"},"content":"                        multipleAvailabilitiesPredicate),","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"iynixil"},"content":"                multipleAvailabilitiesFilterCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"JerryWang0000"},"content":"    public void parseCommand_refresh() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(parser.parseCommand(RefreshCommand.COMMAND_WORD) instanceof RefreshCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(parser.parseCommand(RefreshCommand.COMMAND_WORD + \" 1\") instanceof RefreshCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"whitesnowx"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":175,"author":{"gitId":"whitesnowx"},"content":"        SortCommand nameSortCommand \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \" + \"n/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":176,"author":{"gitId":"whitesnowx"},"content":"        SortCommand phoneSortCommand \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \" + \"p/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":177,"author":{"gitId":"whitesnowx"},"content":"        SortCommand venueSortCommand \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \" + \"v/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"whitesnowx"},"content":"        SortCommand moduleSortCommand \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \" + \"m/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":179,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(new SortCommand(NameComparator.NAME_COMPARATOR), nameSortCommand); // name","lastModifiedDate":"2024-03-15"},{"lineNumber":180,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(new SortCommand(PhoneComparator.PHONE_COMPARATOR), phoneSortCommand); // phone","lastModifiedDate":"2024-03-15"},{"lineNumber":181,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(new SortCommand(VenueComparator.VENUE_COMPARATOR), venueSortCommand); // venue","lastModifiedDate":"2024-03-15"},{"lineNumber":182,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(new SortCommand(ModuleComparator.MODULE_COMPARATOR), moduleSortCommand); // module","lastModifiedDate":"2024-03-15"},{"lineNumber":183,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":202,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD.toUpperCase()) instanceof ListCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":206,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"tsulim"},"content":"    public void parseCommand_fav() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"tsulim"},"content":"        FavCommand command \u003d (FavCommand) parser.parseCommand(","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"tsulim"},"content":"                FavCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"tsulim"},"content":"        assertEquals(new FavCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"tsulim"},"content":"    public void parseCommand_unfav() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"tsulim"},"content":"        UnfavCommand command \u003d (UnfavCommand) parser.parseCommand(","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"tsulim"},"content":"                UnfavCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"tsulim"},"content":"        assertEquals(new UnfavCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":230,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"JerryWang0000"},"content":"    void parseCommand_upperCaseCommands_succuess() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"JerryWang0000"},"content":"        String addCommand \u003d PersonUtil.getAddCommand(new PersonBuilder().build());","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"JerryWang0000"},"content":"        String clearCommand \u003d \"cLear\";","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"JerryWang0000"},"content":"        String deleteCommand \u003d \"Delete 1 \";","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(parser.parseCommand(addCommand) instanceof AddCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(parser.parseCommand(clearCommand) instanceof ClearCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(parser.parseCommand((deleteCommand)) instanceof DeleteCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tsulim":37,"iynixil":89,"JerryWang0000":18,"whitesnowx":17,"-":79}},{"path":"src/test/java/staffconnect/logic/parser/UnfavCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.UnfavCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":" * outside of the UnfavCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":" * same path through the UnfavCommand, and therefore we test only one of them.","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"public class UnfavCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"    private UnfavCommandParser parser \u003d new UnfavCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"    public void parse_validArgs_returnsUnmarkCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"        assertParseSuccess(parser, \"1\", new UnfavCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnfavCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tsulim":32}},{"path":"src/test/java/staffconnect/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.StaffBookBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"        assertEquals(new StaffBook(), new StaffBook(modelManager.getStaffBook()));","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"        userPrefs.setStaffConnectFilePath(Paths.get(\"staff/connect/file/path\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"        userPrefs.setStaffConnectFilePath(Paths.get(\"new/staff/connect/file/path\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"    public void setStaffConnectFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setStaffConnectFilePath(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"    public void setStaffConnectFilePath_validPath_setsStaffConnectFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"        Path path \u003d Paths.get(\"staff/connect/file/path\");","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"        modelManager.setStaffConnectFilePath(path);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"        assertEquals(path, modelManager.getStaffConnectFilePath());","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"    public void hasPerson_personNotInStaffBook_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"    public void hasPerson_personInStaffBook_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"    public void indexOf_personInStaffBook_equalsZero() {","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"        assertEquals(0, modelManager.indexOf(ALICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"tsulim"},"content":"    public void getSortedFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getSortedFilteredPersonList().remove(0));","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"tsulim"},"content":"        StaffBook staffBook \u003d new StaffBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"tsulim"},"content":"        StaffBook differentStaffBook \u003d new StaffBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"        modelManager \u003d new ModelManager(staffBook, userPrefs);","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"tsulim"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(staffBook, userPrefs);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"tsulim"},"content":"        // different staffBook -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"tsulim"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentStaffBook, userPrefs)));","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"tsulim"},"content":"        assertFalse(modelManager.equals(new ModelManager(staffBook, userPrefs)));","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"tsulim"},"content":"        differentUserPrefs.setStaffConnectFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"tsulim"},"content":"        assertFalse(modelManager.equals(new ModelManager(staffBook, differentUserPrefs)));","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tsulim":34,"iynixil":1,"-":103}},{"path":"src/test/java/staffconnect/model/StaffBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_VENUE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"public class StaffBookTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"    private final StaffBook staffBook \u003d new StaffBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"        assertEquals(Collections.emptyList(), staffBook.getPersonList());","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e staffBook.resetData(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"    public void resetData_withValidReadOnlyStaffBook_replacesData() {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"        StaffBook newData \u003d getTypicalStaffBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        staffBook.resetData(newData);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"        assertEquals(newData, staffBook);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withVenue(VALID_VENUE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"        StaffBookStub newData \u003d new StaffBookStub(newPersons);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e staffBook.resetData(newData));","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e staffBook.hasPerson(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"    public void hasPerson_personNotInStaffBook_returnsFalse() {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"        assertFalse(staffBook.hasPerson(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"    public void hasPerson_personInStaffBook_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"        staffBook.addPerson(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"        assertTrue(staffBook.hasPerson(ALICE));","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"    public void hasPerson_personWithSameIdentityFieldsInStaffBook_returnsTrue() {","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"        staffBook.addPerson(ALICE);","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withVenue(VALID_VENUE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"        assertTrue(staffBook.hasPerson(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e staffBook.getPersonList().remove(0));","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"        String expected \u003d StaffBook.class.getCanonicalName() + \"{persons\u003d\" + staffBook.getPersonList() + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"        assertEquals(expected, staffBook.toString());","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"     * A stub ReadOnlyStaffBook whose persons list can violate interface constraints.","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"    private static class StaffBookStub implements ReadOnlyStaffBook {","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"tsulim"},"content":"        StaffBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"tsulim":33,"iynixil":3,"-":72}},{"path":"src/test/java/staffconnect/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"    public void setStaffConnectFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setStaffConnectFilePath(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"tsulim":4,"-":17}},{"path":"src/test/java/staffconnect/model/availability/AvailabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.availability;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"public class AvailabilityTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Availability(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"    public void constructor_invalidAvailability_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"        String invalidAvailability \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Availability(invalidAvailability));","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"    public void isValidAvailability() {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"        // null availability","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"        assertThrows(NullPointerException.class, () -\u003e Availability.isValidAvailability(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"        // invalid availability","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"m\")); // 1 letter only","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"1\")); // 1 number only","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"m o n   1 2 : 0 0   1 4 : 0 0\")); // spaces between letters","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"birthday 12:00 14:00\")); // incorrect type of day","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"moon 12:00 14:00 \")); // 1 letter duplicated","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"mon123 12:00 14:00\")); // trailing number behind day","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"#@$!\")); // special characters","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"mon#@$!\")); // prefix and special characters","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"123#@$!\")); // numbers and special characters","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"day\")); // day without prefix","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"sytaudrh\")); // scrambled spelling","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"chewsday 11:00 13:00\")); // misspelling","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"th\")); // uncompleted syllable","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"sun day 11:00 13:00\")); // space between syllable","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"sat day 11:00 13:00\")); // missing middle syllable","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"satuday 11:00 13:00\")); // missing middle letter","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 1200 1400\")); // missing : divider in HH:mm format","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 1PM 2PM\")); // both time not in HH:mm format","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 1PM 14:00\")); // start time not in HH:mm format","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 13:00 2PM\")); // end time not in HH:mm format","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 8:00 9:00\")); // both time missing leading 0","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 8:00 09:00\")); // start time missing leading 0","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 08:00 9:00\")); // end time missing leading 0","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 08:0 09:0\")); // both time missing trailing 0","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 08: 09:\")); // both time missing trailing 00","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 08:000 09:000\")); // both time extra trailing 0","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 15:00 15:00\")); // start time same as end time","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 16:00 15:00\")); // start time after end time, by hours","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 15:30 15:00\")); // start time after end time, by minutes","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 25:00 26:00\")); // HH more than 23","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"MONDAY 18:80 18:90\")); // mm more than 23","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"whitesnowx"},"content":"        // valid availability","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"mon 14:00 16:00\")); // first syllable tuesday","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"tue 14:00 16:00\")); // first syllable tuesday without s","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"tues 14:00 16:00\")); // first syllable tuesday with s","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"wed 14:00 16:00\")); // first syllable wednesday","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"wednes 14:00 16:00\")); // two syllable wednesday","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"thu 14:00 16:00\")); // first syllable thursday without rs","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"thur 14:00 16:00\")); // first syllable thursday without s","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"thurs 14:00 16:00\")); // first syllable thursday with s","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"sat 14:00 16:00\")); // first syllable saturday","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"satur 14:00 16:00\")); // two syllable saturday","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"sun 14:00 16:00\")); // first syllable sunday","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Sun 14:00 16:00\")); // first syllable with capitalised first letter","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"sAtUr 14:00 16:00\")); // two syllable mixed case","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"monday 14:00 16:00\")); // full word lowercase monday","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"tuesday 14:00 16:00\")); // full word lowercase tuesday","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"wednesday 14:00 16:00\")); // full word lowercase wednesday","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"thursday 14:00 16:00\")); // full word lowercase thursday","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"friday 14:00 16:00\")); // full word lowercase friday","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"saturday 14:00 16:00\")); // full word lowercase saturday","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"sunday 14:00 16:00\")); // full word lowercase sunday","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"MONDAY 14:00 16:00\")); // full word uppercase monday","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Tuesday 14:00 16:00\")); // full word with capitalised first letter","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"wEdNeSdAy 14:00 16:00\")); // full word mixed case","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Tuesday 14:00 16:00\")); // 00:00","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Tuesday 00:00 01:00\")); // 00:00","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Tuesday 00:00 23:59\")); // whole day","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Tuesday 12:34 12:35\")); // 1 min interval","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Tuesday 11:33 22:55\")); // random valid times 1","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Tuesday 10:00 20:00\")); // random valid times 2","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"Tuesday 00:00 00:01\")); // random valid times 3","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"whitesnowx"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"whitesnowx"},"content":"        Availability monAvailability \u003d new Availability(\"monday 12:00 13:00\");","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"whitesnowx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(monAvailability.equals(new Availability(\"monday 12:00 13:00\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"whitesnowx"},"content":"        // same day and time -\u003e return true","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(monAvailability.equals(new Availability(\"mon 12:00 13:00\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"whitesnowx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(monAvailability.equals(monAvailability));","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"whitesnowx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(monAvailability.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"whitesnowx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(monAvailability.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"whitesnowx"},"content":"        // different values, different day -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(monAvailability.equals(new Availability(\"tuesday 12:00 13:00\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"whitesnowx"},"content":"        // different values, different time -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(monAvailability.equals(new Availability(\"monday 11:00 12:00\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"whitesnowx"},"content":"    public void parseToDayOfWeekTest() {","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(DayOfWeek.TUESDAY, Availability.parseToDayOfWeek(\"tues\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":132,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(DayOfWeek.WEDNESDAY, Availability.parseToDayOfWeek(\"wednes\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":133,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(DayOfWeek.THURSDAY, Availability.parseToDayOfWeek(\"thursday\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":134,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(DayOfWeek.FRIDAY, Availability.parseToDayOfWeek(\"FRIDAY\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":135,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(DayOfWeek.SATURDAY, Availability.parseToDayOfWeek(\"SATurday\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":136,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(DayOfWeek.SUNDAY, Availability.parseToDayOfWeek(\"sunDAY\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":137,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(DayOfWeek.SUNDAY, Availability.parseToDayOfWeek(\"mon\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":138,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(DayOfWeek.SATURDAY, Availability.parseToDayOfWeek(\"friday\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":139,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"whitesnowx"},"content":"    public void parseToLocalTimeTest() {","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(LocalTime.NOON, Availability.parseToLocalTime(\"12:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":144,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(LocalTime.MIDNIGHT, Availability.parseToLocalTime(\"00:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":145,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(LocalTime.MIN, Availability.parseToLocalTime(\"00:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":146,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(LocalTime.MIN, Availability.parseToLocalTime(\"00:01\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":147,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":150,"author":{"gitId":"whitesnowx"},"content":"    public void isValidAvailabilityTest() {","lastModifiedDate":"2024-03-22"},{"lineNumber":151,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"mon 12:00 14:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":152,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"monday 12:00 14:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":153,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"tues 02:00 04:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":154,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"tuesday 11:00 11:30\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":155,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"wed 11:00 11:30\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":156,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"wednesday 11:00 11:30\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":157,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"thurs 21:00 21:30\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":158,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"thursday 21:00 21:30\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":159,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"fri 23:00 23:59\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":160,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidAvailability(\"friday 23:00 23:59\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":161,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":162,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":163,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"\")); //nothing","lastModifiedDate":"2024-03-22"},{"lineNumber":164,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\" \")); //spaces","lastModifiedDate":"2024-03-22"},{"lineNumber":165,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"!@#$%^\u0026*IO 3:00 24:59\")); //day contain special characters","lastModifiedDate":"2024-03-22"},{"lineNumber":166,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday -3:00 23:59\")); //negative values","lastModifiedDate":"2024-03-22"},{"lineNumber":167,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 3:00 24:59\")); //hour exceed 23","lastModifiedDate":"2024-03-22"},{"lineNumber":168,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 3:00 23:60\")); //minutes exceed 59","lastModifiedDate":"2024-03-22"},{"lineNumber":169,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 3:00 23:59\")); //missing start time leading 0","lastModifiedDate":"2024-03-22"},{"lineNumber":170,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 01:00 3:00\")); //missing end time leading 0","lastModifiedDate":"2024-03-22"},{"lineNumber":171,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 02:0 01:00\")); //missing start time trailing 0","lastModifiedDate":"2024-03-22"},{"lineNumber":172,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 02:00 01:0\")); //missing end time trailing 0","lastModifiedDate":"2024-03-22"},{"lineNumber":173,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 02: 02:00\")); //missing start time trailing 00","lastModifiedDate":"2024-03-22"},{"lineNumber":174,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 02:00 02:\")); //missing end time trailing 00","lastModifiedDate":"2024-03-22"},{"lineNumber":175,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 02: 02:\")); //missing both time trailing 00","lastModifiedDate":"2024-03-22"},{"lineNumber":176,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday 0230 0200\")); //missing \u0027:\u0027","lastModifiedDate":"2024-03-22"},{"lineNumber":177,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"friday02:3002:00\")); // no space between day and times","lastModifiedDate":"2024-03-22"},{"lineNumber":178,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidAvailability(\"july 02:30 02:00\")); //invalid day","lastModifiedDate":"2024-03-22"},{"lineNumber":179,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":180,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":181,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":182,"author":{"gitId":"whitesnowx"},"content":"    public void isValidLocalTimeTest() {","lastModifiedDate":"2024-03-22"},{"lineNumber":183,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidLocalTime(\"00:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":184,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidLocalTime(\"00:01\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidLocalTime(\"00:10\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":186,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidLocalTime(\"01:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":187,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidLocalTime(\"10:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":188,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidLocalTime(\"23:59\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":189,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Availability.isValidLocalTime(\"13:00\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":190,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":191,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidLocalTime(\"\")); //nothing","lastModifiedDate":"2024-03-22"},{"lineNumber":192,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidLocalTime(\" \")); //spaces","lastModifiedDate":"2024-03-22"},{"lineNumber":193,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidLocalTime(\"!@#$%^\u0026*IO\")); //day contain special characters","lastModifiedDate":"2024-03-22"},{"lineNumber":194,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidLocalTime(\"3:00\")); //missing leading 0","lastModifiedDate":"2024-03-22"},{"lineNumber":195,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidLocalTime(\"02:0\")); //missing time trailing 0","lastModifiedDate":"2024-03-22"},{"lineNumber":196,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidLocalTime(\"02:\")); //missing end time trailing 00","lastModifiedDate":"2024-03-22"},{"lineNumber":197,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidLocalTime(\"02\")); // missing leading or trailing time","lastModifiedDate":"2024-03-22"},{"lineNumber":198,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Availability.isValidLocalTime(\"0230 0200\")); //missing \u0027:\u0027","lastModifiedDate":"2024-03-22"},{"lineNumber":199,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":200,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":201,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"whitesnowx":201}},{"path":"src/test/java/staffconnect/model/meeting/MeetingBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_APRIL;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.exception.DuplicateMeetingException;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.testutil.MeetingBookBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"class MeetingBookTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    private final MeetingBook meetingBook \u003d new MeetingBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    public void constructor() {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(Collections.emptyList(), meetingBook.getMeetingList());","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingBook.resetData(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    public void resetData_withValidReadOnlyMeetingBook_replacesData() {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        MeetingBook newData \u003d new MeetingBookBuilder().withMeeting(VALID_MEETING).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        meetingBook.resetData(newData);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(newData, meetingBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    public void resetData_withDuplicateMeetings_throwsDuplicateMeetingException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"        List\u003cMeeting\u003e newMeetings \u003d Arrays.asList(VALID_MEETING, VALID_MEETING);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        MeetingBookStub newData \u003d new MeetingBookStub(newMeetings);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e meetingBook.resetData(newData));","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"    public void hasMeeting_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingBook.hasMeeting(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    public void hasMeeting_meetingNotInMeetingBook_returnsFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(meetingBook.hasMeeting(VALID_MEETING_APRIL));","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"    public void hasMeeting_meetingInMeetingBook_returnsTrue() {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        meetingBook.addMeeting(VALID_MEETING);","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(meetingBook.hasMeeting(VALID_MEETING));","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"    public void getMeetingList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e meetingBook.getMeetingList().remove(0));","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"        String expected \u003d MeetingBook.class.getCanonicalName() + \"{meetings\u003d\" + meetingBook.getMeetingList() + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(expected, meetingBook.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"     * A stub ReadOnlyMeetingBook whose meeting list can violate interface constraints.","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"    private static class MeetingBookStub implements ReadOnlyMeetingBook {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"        MeetingBookStub(Collection\u003cMeeting\u003e meetings) {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"            this.meetings.setAll(meetings);","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"            return meetings;","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Pluiexo":95}},{"path":"src/test/java/staffconnect/model/meeting/MeetingDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"class MeetingDateTimeTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingDateTime(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    public void constructor_invalidModule_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MeetingDateTime(invalidDate));","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    public void isValidMeetDateTime() {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        // null Date","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e MeetingDateTime.isValidMeetDateTime(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        // invalid Meeting Date","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"\")); // empty string","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\" \")); // spaces only","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"ABCD\")); // letters only","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"1234\")); // numbers only","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"120420231200\")); // missing separator no space","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"12/0420231200\")); // only 1 separator no space","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"1204/2023 1200\")); // only 1 separator","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"12-04-2023 12:00\")); // wrong separator","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"12/04/23 12:00\")); // wrong digits for year","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"12/4/2023 12:00\")); // wrong number digits for month","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"1/04/2023 12:00\")); // wrong number digits for day","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"99/04/2023 12:00\")); // wrong date values","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"01/04/2023 99:00\")); // wrong time values","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"        // date does not exist, but error not caught by a normal parse operation. Only strict would catch this.","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"30/02/2024 12:00\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDateTime.isValidMeetDateTime(\"29/02/2023 12:00\")); //2023 is not a leap year","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        // valid meeting Date","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MeetingDateTime.isValidMeetDateTime(\"12/04/2023 12:00\")); // dd/MM/yyyy HH:mm","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MeetingDateTime.isValidMeetDateTime(\"15/02/2024 12:00\")); // dd/MM/yyyy HH:mm","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MeetingDateTime.isValidMeetDateTime(\"29/02/2024 12:00\")); //valid date on a leap year","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        MeetingDateTime date \u003d new MeetingDateTime(\"20/01/2023 12:00\");","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescription testDescription \u003d new MeetingDescription(\"Valid MeetingDescription\");","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(date, new MeetingDateTime(\"20/01/2023 12:00\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(date, date);","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(null, date);","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(1234, date);","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        // different object type -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(date.equals(testDescription));","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(date, new MeetingDateTime(\"15/02/2024 12:00\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"    public void asSymmetricHashcode() {","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"        MeetingDateTime first \u003d new MeetingDateTime(\"12/04/2023 12:00\");","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"        MeetingDateTime second \u003d new MeetingDateTime(\"12/04/2023 12:00\");","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(first.hashCode(), second.hashCode());","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Pluiexo":87}},{"path":"src/test/java/staffconnect/model/meeting/MeetingDescriptionContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"class MeetingDescriptionContainsKeywordPredicateTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescriptionContainsKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"                new MeetingDescriptionContainsKeywordPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescriptionContainsKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"                new MeetingDescriptionContainsKeywordPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescriptionContainsKeywordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"                new MeetingDescriptionContainsKeywordPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"        // different meeting description -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    public void test_descriptionContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        // One keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescriptionContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"                new MeetingDescriptionContainsKeywordPredicate(Collections.singletonList(\"Meet\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(predicate.test(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"        // Multiple keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"        predicate \u003d new MeetingDescriptionContainsKeywordPredicate(Arrays.asList(\"Meet\", \"for\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(predicate.test(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        predicate \u003d new MeetingDescriptionContainsKeywordPredicate(Arrays.asList(\"Study\", \"for\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(predicate.test(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        predicate \u003d new MeetingDescriptionContainsKeywordPredicate(Arrays.asList(\"mEeT\", \"fOR\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(predicate.test(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescriptionContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"                new MeetingDescriptionContainsKeywordPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(predicate.test(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"        predicate \u003d new MeetingDescriptionContainsKeywordPredicate(List.of(\"Carol\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(predicate.test(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"        // Keywords match date but does not match description","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"        predicate \u003d new MeetingDescriptionContainsKeywordPredicate(Arrays.asList(\"12/03/2023\", \"18:00\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(predicate.test(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescriptionContainsKeywordPredicate predicate \u003d new MeetingDescriptionContainsKeywordPredicate(keywords);","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"        String expected \u003d MeetingDescriptionContainsKeywordPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Pluiexo":92}},{"path":"src/test/java/staffconnect/model/meeting/MeetingDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"class MeetingDescriptionTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingDescription(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MeetingDescription(invalidDescription));","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    public void isValidDescription() {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        // null MeetingDescription","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e MeetingDescription.isValidDescription(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        // invalid MeetingDescription","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDescription.isValidDescription(\"\")); // empty string","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDescription.isValidDescription(\"   \")); // spaces only","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDescription.isValidDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(MeetingDescription.isValidDescription(\"peter meeting*\")); // contains non-alphanumeric characters","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"        // valid MeetingDescription","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MeetingDescription.isValidDescription(\"meeting\")); // alphabets only","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MeetingDescription.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MeetingDescription.isValidDescription(\"meeting at for 2nd finals\")); // alphanumeric characters","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MeetingDescription.isValidDescription(\"Crush the exam\")); // with capital letters","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MeetingDescription.isValidDescription(\"Super hard midterm with finals and project combined 2nd\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescription description \u003d new MeetingDescription(\"Valid MeetingDescription\");","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"        MeetingDateTime testDate \u003d new MeetingDateTime(\"12/04/2023 12:00\");","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(description, new MeetingDescription(\"Valid MeetingDescription\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(description, description);","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(null, description);","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(5.0f, description);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        //Different object type -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(description.equals(testDate));","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(description, new MeetingDescription(\"Other valid description\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"    public void asSymmetricHashcode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescription first \u003d new MeetingDescription(\"Valid MeetingDescription\");","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"        MeetingDescription second \u003d new MeetingDescription(\"Valid MeetingDescription\");","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(first.hashCode(), second.hashCode());","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Pluiexo":74}},{"path":"src/test/java/staffconnect/model/meeting/MeetingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.exception.DuplicateMeetingException;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.exception.MeetingNotFoundException;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"class MeetingListTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"    private final UniqueMeetingList meetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    public void contains_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingList.contains(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"    public void contains_meetingNotInList_returnsFalse() {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(meetingList.contains(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"    public void contains_meetingInList_returnsTrue() {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        meetingList.add(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(meetingList.contains(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"    public void add_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingList.add(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"    public void add_duplicateMeeting_throwsDuplicateMeetingException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"        meetingList.add(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e meetingList.add(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"    public void remove_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingList.remove(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"    public void remove_meetingDoesNotExist_throwsMeetingNotFoundException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e meetingList.remove(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"    public void remove_existingMeeting_removesMeeting() {","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        meetingList.add(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        meetingList.remove(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"        UniqueMeetingList expectedMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(expectedMeetingList, meetingList);","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"    public void setMeetings_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingList.setMeetings((List\u003cMeeting\u003e) null));","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"    public void setMeetings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"        meetingList.add(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"        List\u003cMeeting\u003e anotherMeetingList \u003d Collections.singletonList(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"        meetingList.setMeetings(anotherMeetingList);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"        UniqueMeetingList expectedMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"        expectedMeetingList.add(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(expectedMeetingList, meetingList);","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"Pluiexo"},"content":"    public void setMeetings_listWithDuplicateMeetings_throwsDuplicateMeetingsException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Pluiexo"},"content":"        List\u003cMeeting\u003e listWithDuplicateMeetings \u003d Arrays.asList(VALID_MEETING, VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e meetingList.setMeetings(listWithDuplicateMeetings));","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Pluiexo"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Pluiexo"},"content":"                -\u003e meetingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Pluiexo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(meetingList.asUnmodifiableObservableList().toString(), meetingList.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Pluiexo":99}},{"path":"src/test/java/staffconnect/model/meeting/MeetingManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_KEYWORD_FINALS;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_FINALS;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.testutil.MeetingBookBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"class MeetingManagerTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    private MeetingManager meetingManager \u003d new MeetingManager();","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"    public void constructor() {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(new MeetingBook(), meetingManager.getMeetingBook());","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    public void hasMeeting_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingManager.hasMeeting(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"    public void hasMeeting_meetingNotInMeetingList_returnsFalse() {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(meetingManager.hasMeeting(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"    public void hasMeeting_meetingInMeetingList_returnsTrue() {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        meetingManager.addMeeting(VALID_MEETING);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(meetingManager.hasMeeting(VALID_MEETING));","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e meetingManager.getFilteredMeetingList().remove(0));","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        MeetingBook meetingBook \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"                new MeetingBookBuilder().withMeeting(VALID_MEETING).withMeeting(VALID_MEETING_FINALS).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        MeetingBook differentMeetingBook \u003d new MeetingBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"        meetingManager \u003d new MeetingManager(meetingBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"        MeetingManager meetingManagerCopy \u003d new MeetingManager(meetingBook);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(meetingManager, meetingManagerCopy);","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(meetingManager, meetingManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(null, meetingManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Pluiexo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(5, meetingManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Pluiexo"},"content":"        // different UniqueMeetingList in MeetingManager -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(meetingManager, new MeetingManager(differentMeetingBook));","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Pluiexo"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Pluiexo"},"content":"        String[] keywords \u003d new String[]{VALID_KEYWORD_FINALS};","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Pluiexo"},"content":"        meetingManager.updateFilteredMeetingList(","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Pluiexo"},"content":"                new MeetingDescriptionContainsKeywordPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(meetingManager, new MeetingManager(meetingBook));","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Pluiexo":78}},{"path":"src/test/java/staffconnect/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"class MeetingTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"    private static final MeetingDescription TEST_DESCRIPTION \u003d new MeetingDescription(\"Valid description\");","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"    private static final MeetingDateTime TEST_DATE \u003d new MeetingDateTime(\"12/04/2023 12:00\");","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"    private static final MeetingDescription TEST_OTHERDESCRIPTION \u003d new MeetingDescription(\"Another valid description\");","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    private static final MeetingDateTime TEST_OTHERDATE \u003d new MeetingDateTime(\"13/04/2023 13:00\");","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    public void equals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"        Meeting testMeeting \u003d new Meeting(TEST_DESCRIPTION, TEST_DATE);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"        Meeting diffMeetingDescription \u003d new Meeting(TEST_OTHERDESCRIPTION, TEST_DATE);","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"        Meeting diffMeetingTime \u003d new Meeting(TEST_DESCRIPTION, TEST_OTHERDATE);","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"        MeetingDateTime testDate \u003d new MeetingDateTime(\"12/04/2023 12:00\");","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(testMeeting, new Meeting(new MeetingDescription(\"Valid description\"),","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"                                              new MeetingDateTime(\"12/04/2023 12:00\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(testMeeting, testMeeting);","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(null, testMeeting);","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(5, testMeeting);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"        //Different object type -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"        assertFalse(testMeeting.equals(testDate));","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(testMeeting, diffMeetingDescription);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(testMeeting, diffMeetingTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"Pluiexo"},"content":"    public void asSymmetricHashcode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Pluiexo"},"content":"        Meeting first \u003d new Meeting(new MeetingDescription(\"test\"), new MeetingDateTime(\"12/04/2023 12:00\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Pluiexo"},"content":"        Meeting second \u003d new Meeting(new MeetingDescription(\"test\"), new MeetingDateTime(\"12/04/2023 12:00\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(first.hashCode(), second.hashCode());","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Pluiexo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Pluiexo"},"content":"        Meeting testMeeting \u003d new Meeting(TEST_DESCRIPTION, TEST_DATE);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Pluiexo"},"content":"        String expected \u003d TEST_DATE + \":\" + TEST_DESCRIPTION;","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Pluiexo"},"content":"        assertEquals(expected, testMeeting.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Pluiexo":62}},{"path":"src/test/java/staffconnect/model/meeting/comparator/MeetingDateComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting.comparator;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_APRIL;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateComparator.MEETING_DATE_COMPARATOR;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDescriptionComparator.MEETING_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"public class MeetingDateComparatorTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    public void doesNotEquals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(MEETING_DATE_COMPARATOR, MEETING_DESCRIPTION_COMPARATOR);","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    public void checkComparator() {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"        // Different time","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MEETING_DATE_COMPARATOR.compare(VALID_MEETING, VALID_MEETING_APRIL) \u003c\u003d -1); // march \u003c april","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MEETING_DATE_COMPARATOR.compare(VALID_MEETING_APRIL, VALID_MEETING) \u003e -1); // march","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Pluiexo":27}},{"path":"src/test/java/staffconnect/model/meeting/comparator/MeetingDateThenDescriptionComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting.comparator;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_APRIL;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_FINALS;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateComparator.MEETING_DATE_COMPARATOR;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateThenDescriptionComparator.MEETING_DATE_THEN_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDescriptionComparator.MEETING_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"class MeetingDateThenDescriptionComparatorTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    public void doesNotEquals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR, MEETING_DESCRIPTION_COMPARATOR);","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR, MEETING_DATE_COMPARATOR);","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"    public void checkComparator() {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"        // Different DateTime, Same Description","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"        // march \u003c april","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR.compare(VALID_MEETING, VALID_MEETING_APRIL) \u003c\u003d -1);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        // april \u003e march","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR.compare(VALID_MEETING_APRIL, VALID_MEETING) \u003e -1);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Pluiexo"},"content":"        // Same DateTime, but different Description","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Pluiexo"},"content":"        // VALID_MEETING has a longer description than VALID_MEETING_FINALS","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR.compare(VALID_MEETING, VALID_MEETING_FINALS) \u003e -1);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MEETING_DATE_THEN_DESCRIPTION_COMPARATOR.compare(VALID_MEETING_FINALS, VALID_MEETING) \u003c\u003d -1);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Pluiexo":38}},{"path":"src/test/java/staffconnect/model/meeting/comparator/MeetingDescriptionComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.model.meeting.comparator;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MEETING_FINALS;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDateComparator.MEETING_DATE_COMPARATOR;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":"import static staffconnect.model.meeting.comparator.MeetingDescriptionComparator.MEETING_DESCRIPTION_COMPARATOR;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"public class MeetingDescriptionComparatorTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    public void doesNotEquals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"        assertNotEquals(MEETING_DESCRIPTION_COMPARATOR, MEETING_DATE_COMPARATOR);","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    public void checkComparator() {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"        //Different description","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"        //valid meeting has a longer description than valid meeting finals","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MEETING_DESCRIPTION_COMPARATOR.compare(VALID_MEETING, VALID_MEETING_FINALS) \u003e -1);","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"        assertTrue(MEETING_DESCRIPTION_COMPARATOR.compare(VALID_MEETING_FINALS, VALID_MEETING) \u003c\u003d -1);","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Pluiexo":27}},{"path":"src/test/java/staffconnect/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tsulim":2,"-":86}},{"path":"src/test/java/staffconnect/model/person/FacultyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"public class FacultyTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Faculty(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"    public void constructor_invalidFaculty_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"        String invalidFaculty \u003d \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Faculty(invalidFaculty));","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"    public void isValidFaculty() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"        // null Faculty","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"        assertThrows(NullPointerException.class, () -\u003e Faculty.isValidFaculty(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"        // invalid faculties","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"        assertFalse(Faculty.isValidFaculty(\"\")); // empty string","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"        assertFalse(Faculty.isValidFaculty(\" \")); // spaces only","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"        // valid Faculties","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(Faculty.isValidFaculty(\"science\")); // ignore capitals","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(Faculty.isValidFaculty(\"Computing\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(Faculty.isValidFaculty(\"SoC\")); // another name for the same enum member","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(Faculty.isValidFaculty(\"soc\")); // ignore capitals","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"        assertTrue(Faculty.isValidFaculty(\"Arts and Social Sciences\")); // long faculty","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"        Faculty faculty \u003d new Faculty(\"Computing\");","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"        assertEquals(faculty, new Faculty(\"Computing\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"        // same values with different constructing values -\u003e true","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"        assertEquals(faculty, new Faculty(\"School of Computing\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"        assertEquals(faculty, new Faculty(\"SoC\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"JerryWang0000"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"        assertEquals(faculty, faculty);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"        assertNotEquals(null, faculty);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"JerryWang0000"},"content":"        assertFalse(faculty.equals(5.0f));","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"        assertNotEquals(faculty, new Faculty(\"Science\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"JerryWang0000":63}},{"path":"src/test/java/staffconnect/model/person/FavouriteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"class FavouriteTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Favourite(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"    public void constructor_invalidFavourite_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"        String invalidFavourite \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Favourite(invalidFavourite));","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"    public void isValidFavourite() {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"        // null favourite","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Favourite.isValidFavourite(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        // invalid favourite","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"        assertFalse(Favourite.isValidFavourite(\"\")); // empty string","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"        assertFalse(Favourite.isValidFavourite(\" \")); // spaces only","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"        assertFalse(Favourite.isValidFavourite(\"a\")); // invalid string","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"        // valid favourite","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"        assertTrue(Favourite.isValidFavourite(\"Favourite\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"        assertTrue(Favourite.isValidFavourite(\"Not favourite\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"    void hasFavourite() {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"        assertFalse(new Favourite(\"Not favourite\").hasFavourite());","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"        assertTrue(new Favourite(\"Favourite\").hasFavourite());","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"        assertFalse(new Favourite(false).hasFavourite());","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        assertTrue(new Favourite(true).hasFavourite());","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"    void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"        Favourite favourite \u003d new Favourite(false);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"        // same values -\u003e return true","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        assertTrue(favourite.equals(new Favourite(false)));","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        assertTrue(favourite.equals(favourite));","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"        assertFalse(favourite.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"        assertFalse(favourite.equals(5.0f));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"        // different values -\u003e return false","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"        assertFalse(favourite.equals(new Favourite(true)));","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"tsulim":64}},{"path":"src/test/java/staffconnect/model/person/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"public class ModuleTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"    public void constructor_invalidModule_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"        String invalidModule \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModule));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"    public void isValidModule() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"        // null module code","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidModule(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"        // invalid module code","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"ABCD\")); // letters only","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"1234\")); // numbers only","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"2103T\")); // missing prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"C2103T\")); // only 1 prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"CS2103TT\")); // too many suffix","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"CSCSC2103T\")); // too many prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"CS210310101010T\")); // too many numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(Module.isValidModule(\"CS21T\")); // too little numbers","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"        // valid module code","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"CS2103\")); // 2 prefix, 4 letters without 1 optional suffix","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"CS2103T\")); // 2 prefix, 4 letters with 1 optional suffix","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"GEN2050\")); // 3 prefix, 4 letters without  1 optional suffix","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"GEN2050Y\")); // 3 prefix, 4 letters with  1 optional suffix","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"GESS1035\")); // 4 prefix, 4 letters without 1 optional suffix","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"GESS1035X\")); // 4 prefix, 4 letters with  1 optional suffix","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"cs2103t\")); // suffix not capitalised","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"cs2103T\")); // prefix not capitalised","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"cS2103t\")); // prefix partial not capitalised","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"cs2103t\")); // both prefix and suffix not capitalised","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(Module.isValidModule(\"cs2103t\")); // prefix partial not capitalised","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"whitesnowx"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"whitesnowx"},"content":"        Module module \u003d new Module(\"CS2103\");","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"whitesnowx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(module.equals(new Module(\"CS2103\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"whitesnowx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(module.equals(module));","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"whitesnowx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(module.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"whitesnowx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(module.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"whitesnowx"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"whitesnowx"},"content":"        assertFalse(module.equals(new Module(\"MS2345\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"whitesnowx":72}},{"path":"src/test/java/staffconnect/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tsulim":2,"-":58}},{"path":"src/test/java/staffconnect/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_THUR;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_VENUE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"            .withModule(VALID_MODULE_BOB).withFaculty(VALID_FACULTY_BOB).withVenue(VALID_VENUE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"            .withTags(VALID_TAG_HUSBAND).withFavourite(true).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withModule(VALID_MODULE_BOB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"JerryWang0000"},"content":"        // different faculty -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"JerryWang0000"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withFaculty(VALID_FACULTY_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"JerryWang0000"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"        // different venue -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withVenue(VALID_VENUE_BOB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"tsulim"},"content":"        // different availabilities -\u003e returns false","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"tsulim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAvailabilities(VALID_AVAILABILITY_THUR).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"tsulim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"        // different favourite -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withFavourite(true).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"tsulim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"            + \", email\u003d\" + ALICE.getEmail() + \", module\u003d\" + ALICE.getModule()","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"tsulim"},"content":"            + \", faculty\u003d\" + ALICE.getFaculty() + \", venue\u003d\" + ALICE.getVenue()","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"Pluiexo"},"content":"            + \", tags\u003d\" + ALICE.getTags() + \", availabilities\u003d\" + ALICE.getAvailabilities() + \", meetings\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"tsulim"},"content":"            + ALICE.getMeetings() + \", favourite\u003d\" + ALICE.getFavourite() + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tsulim":28,"iynixil":3,"JerryWang0000":5,"Pluiexo":2,"-":85}},{"path":"src/test/java/staffconnect/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tsulim":2,"-":58}},{"path":"src/test/java/staffconnect/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_VENUE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withVenue(VALID_VENUE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withVenue(VALID_VENUE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tsulim":8,"iynixil":3,"-":164}},{"path":"src/test/java/staffconnect/model/person/VenueTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"public class VenueTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Venue(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    public void constructor_invalidVenue_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"        String invalidVenue \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Venue(invalidVenue));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    public void isValidVenue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        // null venue","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"        assertThrows(NullPointerException.class, () -\u003e Venue.isValidVenue(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        // invalid venues","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"        assertFalse(Venue.isValidVenue(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        assertFalse(Venue.isValidVenue(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        // valid venues","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"        assertTrue(Venue.isValidVenue(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        assertTrue(Venue.isValidVenue(\"-\")); // one character","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        assertTrue(Venue.isValidVenue(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long venue","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        Venue venue \u003d new Venue(\"Valid Venue\");","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"        assertTrue(venue.equals(new Venue(\"Valid Venue\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        assertTrue(venue.equals(venue));","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"        assertFalse(venue.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        assertFalse(venue.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"        assertFalse(venue.equals(new Venue(\"Other Valid Venue\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"iynixil":56}},{"path":"src/test/java/staffconnect/model/person/comparators/FacultyComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.FacultyComparator.FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.ModuleComparator.MODULE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.PhoneComparator.PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.VenueComparator.VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.LEONARDO;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.MICHAEL;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"public class FacultyComparatorTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    public void doesNotEquals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR, NAME_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR, PHONE_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR, MODULE_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR, VENUE_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"    public void checkComparator() {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(FACULTY_COMPARATOR.compare(ALICE, MICHAEL) \u003c\u003d -1); // Computing \u003c Music","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(FACULTY_COMPARATOR.compare(MICHAEL, ALICE) \u003e\u003d 1); // Music \u003e Computing","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(FACULTY_COMPARATOR.compare(LEONARDO, MICHAEL) \u003c\u003d -1); // Arts and Social Sciences \u003c Music","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(FACULTY_COMPARATOR.compare(MICHAEL, LEONARDO) \u003e\u003d 1); //  Music \u003e Arts and Social Sciences","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(FACULTY_COMPARATOR.compare(LEONARDO, LEONARDO), 0);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"        // Arts and Social Sciences \u003d Arts and Social Sciences","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(FACULTY_COMPARATOR.compare(MICHAEL, MICHAEL), 0); // Music \u003d Music","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(FACULTY_COMPARATOR.toString(), \"Faculty by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR.toString(), \"Name by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR.toString(), \"Phone by ascending order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR.toString(), \"Module by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR.toString(), \"Venue by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(FACULTY_COMPARATOR.toString(), \"random string\");","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"whitesnowx":50}},{"path":"src/test/java/staffconnect/model/person/comparators/ModuleComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.FacultyComparator.FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.ModuleComparator.MODULE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.PhoneComparator.PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.VenueComparator.VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"public class ModuleComparatorTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"    public void doesNotEquals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR, NAME_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR, PHONE_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR, FACULTY_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR, VENUE_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"    public void checkComparator() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(MODULE_COMPARATOR.compare(ALICE, BENSON), -1); // CS1101S \u003c CS1231S","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(MODULE_COMPARATOR.compare(BENSON, ALICE), 1); //  CS1231S \u003e CS1101S","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(MODULE_COMPARATOR.compare(ALICE, CARL), -1); // CS1101S \u003c CS2030S","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(MODULE_COMPARATOR.compare(CARL, ALICE), 1); // CS2030S \u003e CS1101S","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(MODULE_COMPARATOR.compare(BENSON, BENSON), 0); // CS1231S \u003d CS1231S","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(MODULE_COMPARATOR.compare(ALICE, ALICE), 0); // CS1101S \u003d CS1101S","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(MODULE_COMPARATOR.toString(), \"Module by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR.toString(), \"Name by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR.toString(), \"Phone by ascending order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR.toString(), \"Faculty by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR.toString(), \"Venue by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(MODULE_COMPARATOR.toString(), \"random string\");","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"whitesnowx":48}},{"path":"src/test/java/staffconnect/model/person/comparators/NameComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.FacultyComparator.FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.ModuleComparator.MODULE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.PhoneComparator.PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.VenueComparator.VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"public class NameComparatorTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"    public void doesNotEquals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR, PHONE_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR, MODULE_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR, FACULTY_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR, VENUE_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"    public void checkComparator() {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(NAME_COMPARATOR.compare(ALICE, BENSON) \u003c\u003d -1); // ALICE \u003c BENSON","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(NAME_COMPARATOR.compare(BENSON, ALICE) \u003e\u003d 1); //  BENSON \u003e ALICE","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(NAME_COMPARATOR.compare(ALICE, CARL) \u003c\u003d -1); // ALICE \u003c CARL","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(NAME_COMPARATOR.compare(CARL, ALICE) \u003e\u003d 1); // CARL \u003e ALICE","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(NAME_COMPARATOR.compare(BENSON, BENSON), 0); // BENSON \u003d BENSON","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(NAME_COMPARATOR.compare(ALICE, ALICE), 0); // ALICE \u003d ALICE","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(NAME_COMPARATOR.toString(), \"Name by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR.toString(), \"Phone by ascending order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR.toString(), \"Module by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR.toString(), \"Faculty by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR.toString(), \"Venue by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(NAME_COMPARATOR.toString(), \"random string\");","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"whitesnowx":50}},{"path":"src/test/java/staffconnect/model/person/comparators/PhoneComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.FacultyComparator.FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.ModuleComparator.MODULE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.PhoneComparator.PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.VenueComparator.VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"public class PhoneComparatorTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    public void doesNotEquals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR, NAME_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR, MODULE_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR, FACULTY_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR, VENUE_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"    public void checkComparator() {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(PHONE_COMPARATOR.compare(ELLE, BENSON) \u003c\u003d -1); // 9482224 \u003c 98765432","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(PHONE_COMPARATOR.compare(BENSON, ELLE) \u003e\u003d 1); //  98765432 \u003e 9482224","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(PHONE_COMPARATOR.compare(ELLE, CARL) \u003c\u003d -1); // 9482224 \u003c 95352563","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(PHONE_COMPARATOR.compare(CARL, ELLE) \u003e\u003d 1); // 95352563 \u003e 9482224","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(PHONE_COMPARATOR.compare(BENSON, BENSON), 0); // 98765432 \u003d 98765432","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(PHONE_COMPARATOR.compare(ELLE, ELLE), 0); // 9482224 \u003d 9482224","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(PHONE_COMPARATOR.toString(), \"Phone by ascending order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR.toString(), \"Name by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR.toString(), \"Module by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR.toString(), \"Faculty by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR.toString(), \"Venue by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(PHONE_COMPARATOR.toString(), \"random string\");","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"whitesnowx":49}},{"path":"src/test/java/staffconnect/model/person/comparators/VenueComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"whitesnowx"},"content":"package staffconnect.model.person.comparators;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"whitesnowx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.FacultyComparator.FACULTY_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.ModuleComparator.MODULE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.NameComparator.NAME_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.PhoneComparator.PHONE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.model.person.comparators.VenueComparator.VENUE_COMPARATOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"whitesnowx"},"content":"import static staffconnect.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"whitesnowx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"whitesnowx"},"content":"public class VenueComparatorTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"whitesnowx"},"content":"    public void doesNotEquals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR, NAME_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR, PHONE_COMPARATOR);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR, MODULE_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR, FACULTY_COMPARATOR);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"whitesnowx"},"content":"    public void checkComparator() {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(VENUE_COMPARATOR.compare(ELLE, CARL) \u003c\u003d -1); // michegan ave \u003c wall street","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(VENUE_COMPARATOR.compare(CARL, ELLE) \u003e\u003d 1); // wall street \u003e michegan ave","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(VENUE_COMPARATOR.compare(GEORGE, ELLE) \u003c\u003d 1); //  4th street \u003e michegan ave","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"whitesnowx"},"content":"        assertTrue(VENUE_COMPARATOR.compare(ELLE, GEORGE) \u003e\u003d -1); // michegan ave \u003c 4th street","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(VENUE_COMPARATOR.compare(ELLE, ELLE), 0); // michegan ave \u003d michegan ave","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(VENUE_COMPARATOR.compare(GEORGE, GEORGE), 0); // 4th street \u003d 4th street","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"whitesnowx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"whitesnowx"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"whitesnowx"},"content":"        assertEquals(VENUE_COMPARATOR.toString(), \"Venue by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR.toString(), \"Name by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR.toString(), \"Phone by ascending order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR.toString(), \"Module by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR.toString(), \"Faculty by alphanumerical order\");","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"whitesnowx"},"content":"        assertNotEquals(VENUE_COMPARATOR.toString(), \"random string\");","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"whitesnowx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"whitesnowx"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"whitesnowx":49}},{"path":"src/test/java/staffconnect/model/person/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"        // Keywords match phone, email and venue, but does not match name","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"                .withEmail(\"alice@email.com\").withVenue(\"Main Street\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tsulim":1,"iynixil":3,"-":81}},{"path":"src/test/java/staffconnect/model/person/predicates/PersonHasAvailabilitiesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"public class PersonHasAvailabilitiesPredicateTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e firstPredicateAvailability \u003d new HashSet\u003cAvailability\u003e(","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Availability(\"mon 12:00 13:00\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e secondPredicateAvailability \u003d new HashSet\u003cAvailability\u003e(","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Availability(\"wed 10:00 14:00\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate firstPredicate \u003d new PersonHasAvailabilitiesPredicate(","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"                firstPredicateAvailability);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate secondPredicate \u003d new PersonHasAvailabilitiesPredicate(","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"                secondPredicateAvailability);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate firstPredicateCopy \u003d new PersonHasAvailabilitiesPredicate(","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"                firstPredicateAvailability);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        // different availabilities -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"    public void test_personHasAvailability_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"mon 12:00 13:00\" availability","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e availability \u003d new HashSet\u003cAvailability\u003e(Arrays.asList(new Availability(\"mon 12:00 13:00\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate predicate \u003d new PersonHasAvailabilitiesPredicate(availability);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"        // person only has availability \"mon 12:00 13:00\"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAvailabilities(\"mon 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"        // person has multiple availabilities and has \"mon 12:00 13:00\"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"        assertTrue(","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"                predicate.test(new PersonBuilder().withAvailabilities(\"mon 12:00 13:00\", \"tues 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"        // case-insensitivity checks","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAvailabilities(\"MOn 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAvailabilities(\"mON 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAvailabilities(\"MON 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"    public void test_personHasMultipleAvailabilities_returnsTrue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"mon 12:00 13:00\", \"wed 12:00 13:00\" availabilities","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e multipleAvailabilities \u003d new HashSet\u003cAvailability\u003e(","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Availability(\"mon 12:00 13:00\"), new Availability(\"wed 12:00 13:00\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate predicate \u003d new PersonHasAvailabilitiesPredicate(multipleAvailabilities);","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"        // person has multiple availabilities and has \"mon 12:00 13:00\", \"wed 12:00","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"        // 13:00\"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"        assertTrue(","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"                predicate.test(new PersonBuilder().withAvailabilities(\"mon 12:00 13:00\", \"wed 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"        // case-insensitivity checks","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"        assertTrue(","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"                predicate.test(new PersonBuilder().withAvailabilities(\"mON 12:00 13:00\", \"WEd 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"        assertTrue(","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"                predicate.test(new PersonBuilder().withAvailabilities(\"MOn 12:00 13:00\", \"wED 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"        assertTrue(","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"                predicate.test(new PersonBuilder().withAvailabilities(\"MON 12:00 13:00\", \"wEd 12:00 13:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"    public void test_personDoesNotHaveAvailability_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"wed 12:00 13:00\" availability","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e availability \u003d new HashSet\u003cAvailability\u003e(Arrays.asList(new Availability(\"wed 12:00 13:00\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate predicate \u003d new PersonHasAvailabilitiesPredicate(availability);","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"        // person does not have availability \"wed 12:00 13:00\"","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAvailabilities(\"tues 14:00 16:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"    public void test_personDoesNotHaveMultipleAvailabilities_returnsFalse() {","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"tues 12:00 14:00\", \"wed 14:00 16:00\", \"thurs 16:00","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"        // 18:00\" availabilities","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e multipleAvailabilities \u003d new HashSet\u003cAvailability\u003e(","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Availability(\"tues 12:00 14:00\"), new Availability(\"wed 14:00 16:00\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"                        new Availability(\"thurs 16:00 18:00\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate predicate \u003d new PersonHasAvailabilitiesPredicate(multipleAvailabilities);","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"iynixil"},"content":"        // person only has 1 availability","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAvailabilities(\"tues 12:00 14:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"        // case-insensitivity checks","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"        assertFalse(","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"                predicate.test(new PersonBuilder().withAvailabilities(\"tUES 12:00 14:00\", \"wED 14:00 16:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"        assertFalse(","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"                predicate.test(new PersonBuilder().withAvailabilities(\"TUEs 12:00 14:00\", \"WEd 14:00 16:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"        assertFalse(","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"                predicate.test(new PersonBuilder().withAvailabilities(\"tUeS 12:00 14:00\", \"wEd 14:00 16:00\").build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"iynixil"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"        Set\u003cAvailability\u003e availability \u003d new HashSet\u003cAvailability\u003e(","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Availability(\"monday 12:00 13:00\")));","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"iynixil"},"content":"        PersonHasAvailabilitiesPredicate predicate \u003d new PersonHasAvailabilitiesPredicate(availability);","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"iynixil"},"content":"        String expected \u003d PersonHasAvailabilitiesPredicate.class.getCanonicalName() + \"{availabilities\u003d\" + availability","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"                + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"iynixil":129}},{"path":"src/test/java/staffconnect/model/person/predicates/PersonHasFacultyPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"public class PersonHasFacultyPredicateTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"        Faculty firstPredicateFaculty \u003d new Faculty(\"Business\");","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"        Faculty secondPredicateFaculty \u003d new Faculty(\"Computing\");","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate firstPredicate \u003d new PersonHasFacultyPredicate(firstPredicateFaculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate secondPredicate \u003d new PersonHasFacultyPredicate(secondPredicateFaculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate firstPredicateCopy \u003d new PersonHasFacultyPredicate(firstPredicateFaculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        // different faculty -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    public void test_personHasFaculty_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"Business\" faculty","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"        Faculty faculty \u003d new Faculty(\"Business\");","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate predicate \u003d new PersonHasFacultyPredicate(faculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        // person has \"Business\" faculty","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFaculty(\"Business\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"    public void test_personDoesNotHaveFaculty_returnsFalse() {","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"Business\" faculty","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"        Faculty faculty \u003d new Faculty(\"Business\");","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate predicate \u003d new PersonHasFacultyPredicate(faculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"        // person does not have \"Business\" faculty","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFaculty(\"Computing\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"        Faculty faculty \u003d new Faculty(\"Engineering\");","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"        PersonHasFacultyPredicate predicate \u003d new PersonHasFacultyPredicate(faculty);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        String expected \u003d PersonHasFacultyPredicate.class.getCanonicalName() + \"{faculty\u003d\" + faculty + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"iynixil":67}},{"path":"src/test/java/staffconnect/model/person/predicates/PersonHasModulePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"public class PersonHasModulePredicateTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"        Module firstPredicateModule \u003d new Module(\"MOD1000\");","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"        Module secondPredicateModule \u003d new Module(\"MOD2000\");","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate firstPredicate \u003d new PersonHasModulePredicate(firstPredicateModule);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate secondPredicate \u003d new PersonHasModulePredicate(secondPredicateModule);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate firstPredicateCopy \u003d new PersonHasModulePredicate(firstPredicateModule);","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    public void test_personHasModule_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"MOD1000\" module","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"        Module module \u003d new Module(\"MOD1000\");","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate predicate \u003d new PersonHasModulePredicate(module);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        // person has \"MOD1000\" module","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withModule(\"MOD1000\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"    public void test_personDoesNotHaveModule_returnsFalse() {","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"MOD1000\" module","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"        Module module \u003d new Module(\"MOD1000\");","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate predicate \u003d new PersonHasModulePredicate(module);","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"        // person does not have module \"MOD1000\"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withModule(\"MOD2000\").build()));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"        Module module \u003d new Module(\"MOD2000\");","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"        PersonHasModulePredicate predicate \u003d new PersonHasModulePredicate(module);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        String expected \u003d PersonHasModulePredicate.class.getCanonicalName() + \"{module\u003d\" + module + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"iynixil":67}},{"path":"src/test/java/staffconnect/model/person/predicates/PersonHasTagsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package staffconnect.model.person.predicates;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import staffconnect.testutil.PersonBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"public class PersonHasTagsPredicateTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e firstPredicateTag \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(\"first\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e secondPredicateTag \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(\"second\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate firstPredicate \u003d new PersonHasTagsPredicate(firstPredicateTag);","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate secondPredicate \u003d new PersonHasTagsPredicate(secondPredicateTag);","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate firstPredicateCopy \u003d new PersonHasTagsPredicate(firstPredicateTag);","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    public void test_personHasTag_returnsTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"tester\" tag","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e tag \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(\"tester\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        // person only has tag \"tester\"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"tester\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"        // person has multiple tags and has \"tester\"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"tester\", \"tester2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"        // case-insensitivity checks","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"tesTER\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"TESTER\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"tEsTeR\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"    public void test_personHasMultipleTags_returnsTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"tester\", \"tester2\" tags","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e multipleTags \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(\"tester\"), new Tag(\"tester2\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(multipleTags);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"        // person has multiple tags and has \"tester\", \"tester2\"","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"tester\", \"tester2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"        // case-insensitivity checks","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"tesTER\", \"tesTER2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"TESTER\", \"tester2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"tEsTeR\", \"TeStEr2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"    public void test_personDoesNotHaveTag_returnsFalse() {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"tester\" tag","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e tag \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(\"tester\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"        // person does not have tag \"tester\"","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"tester2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"    public void test_personDoesNotHaveMultipleTags_returnsFalse() {","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"        // predicate set to track \"tester\", \"tester2\", \"tester3\" tags","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e multipleTags \u003d new HashSet\u003cTag\u003e(","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"                Arrays.asList(new Tag(\"tester\"), new Tag(\"tester2\"), new Tag(\"tester3\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(multipleTags);","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"        // person only has 1 tag","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"tester\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"        // case-insensitivity checks","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"tesTER\", \"tesTER2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"TESTER\", \"tester2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"tEsTeR\", \"TeStEr2\").build()));","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"        Set\u003cTag\u003e tag \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(\"hello\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"iynixil"},"content":"        String expected \u003d PersonHasTagsPredicate.class.getCanonicalName() + \"{tag names\u003d\" + tag + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"iynixil"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"iynixil":110}},{"path":"src/test/java/staffconnect/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.model.tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"tsulim":2,"-":24}},{"path":"src/test/java/staffconnect/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    private static final String INVALID_MODULE \u003d \" \";","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"    private static final String INVALID_FACULTY \u003d \"faculty\";","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"    private static final String INVALID_VENUE \u003d \" \";","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"    private static final String INVALID_AVAILABILITY \u003d \"m0n\";","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Pluiexo"},"content":"    private static final String INVALID_MEETING_DESCRIPTION \u003d \"*!\u0026@#\u0026*@*\u0026@*\";","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Pluiexo"},"content":"    private static final String INVALID_MEETING_DATE \u003d \"12-04-2023 18:00\";","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"    private static final String INVALID_FAVOURITE \u003d \" \";","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"    private static final String VALID_MODULE \u003d BENSON.getModule().toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Pluiexo"},"content":"    private static final String VALID_MEETING_DESCRIPTION \u003d \"Meet for midterms\";","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"    private static final String VALID_MEETING_DATE \u003d \"12/04/2023 18:00\";","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Pluiexo"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Pluiexo"},"content":"        BENSON.getTags().stream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"    private static final String VALID_FACULTY \u003d BENSON.getFaculty().toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    private static final String VALID_VENUE \u003d BENSON.getVenue().toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"    private static final List\u003cJsonAdaptedAvailability\u003e VALID_AVAILABILITIES \u003d BENSON.getAvailabilities()","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"        .stream()","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"        .map(JsonAdaptedAvailability::new)","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Pluiexo"},"content":"    private static final JsonAdaptedMeeting VALID_MEETING_JSON \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Pluiexo"},"content":"            new JsonAdaptedMeeting(VALID_MEETING_DESCRIPTION, VALID_MEETING_DATE);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Pluiexo"},"content":"    private static final List\u003cJsonAdaptedMeeting\u003e VALID_MEETING \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Pluiexo"},"content":"            Stream.of(VALID_MEETING_JSON).collect(Collectors.toList());","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"    private static final String VALID_FAVOURITE \u003d BENSON.getFavourite().toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"JerryWang0000"},"content":"    public void toModelType_invalidFaculty_throwsIllegalValueException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"JerryWang0000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, INVALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"JerryWang0000"},"content":"        String expectedMessage \u003d Faculty.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"JerryWang0000"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"JerryWang0000"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"JerryWang0000"},"content":"    public void toModelType_nullFaculty_throwsIllegalValueException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"JerryWang0000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, null, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES, VALID_MEETING,","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"tsulim"},"content":"                VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"JerryWang0000"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Faculty.class.getSimpleName());","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"JerryWang0000"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"iynixil"},"content":"    public void toModelType_invalidVenue_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, INVALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d Venue.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"iynixil"},"content":"    public void toModelType_nullVenue_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, null, VALID_TAGS, VALID_AVAILABILITIES, VALID_MEETING,","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"tsulim"},"content":"                VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"iynixil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Venue.class.getSimpleName());","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"tsulim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"tsulim"},"content":"    public void toModelType_invalidModule_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"tsulim"},"content":"                INVALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"tsulim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"tsulim"},"content":"    public void toModelType_nullModule_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"tsulim"},"content":"                VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES, VALID_MEETING,","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"tsulim"},"content":"                VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName());","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, invalidTags, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"Pluiexo"},"content":"    public void toModelType_invalidAvailabilities_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"Pluiexo"},"content":"        List\u003cJsonAdaptedAvailability\u003e invalidAvailabilities \u003d new ArrayList\u003c\u003e(VALID_AVAILABILITIES);","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"Pluiexo"},"content":"        invalidAvailabilities.add(new JsonAdaptedAvailability(INVALID_AVAILABILITY));","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, invalidAvailabilities,","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"Pluiexo"},"content":"    public void toModelType_invalidMeetingDescription_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"Pluiexo"},"content":"        List\u003cJsonAdaptedMeeting\u003e invalidMeeting \u003d new ArrayList\u003c\u003e(VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"Pluiexo"},"content":"        invalidMeeting.add(new JsonAdaptedMeeting(INVALID_MEETING_DESCRIPTION, VALID_MEETING_DATE));","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"tsulim"},"content":"                invalidMeeting, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":199,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"Pluiexo"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":201,"author":{"gitId":"Pluiexo"},"content":"    public void toModelType_invalidMeetingDate_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"Pluiexo"},"content":"        List\u003cJsonAdaptedMeeting\u003e invalidMeeting \u003d new ArrayList\u003c\u003e(VALID_MEETING);","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"Pluiexo"},"content":"        invalidMeeting.add(new JsonAdaptedMeeting(VALID_MEETING_DESCRIPTION, INVALID_MEETING_DATE));","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"tsulim"},"content":"                invalidMeeting, VALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"Pluiexo"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":209,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"tsulim"},"content":"    public void toModelType_invalidFavourite_throwsIllegalValueException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, INVALID_FAVOURITE);","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d Favourite.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"tsulim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"tsulim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"tsulim"},"content":"    public void toModelType_nullFavourite_throwsIllegalValueException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"tsulim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"tsulim"},"content":"                VALID_MODULE, VALID_FACULTY, VALID_VENUE, VALID_TAGS, VALID_AVAILABILITIES,","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"tsulim"},"content":"                VALID_MEETING, null);","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"tsulim"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Favourite.class.getSimpleName());","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"tsulim"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsulim":97,"iynixil":6,"Pluiexo":33,"JerryWang0000":17,"-":74}},{"path":"src/test/java/staffconnect/storage/JsonSerializableStaffBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.util.JsonUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.testutil.TypicalPersons;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"public class JsonSerializableStaffBookTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStaffBookTest\");","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsStaffBook.json\");","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonStaffBook.json\");","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonStaffBook.json\");","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"        JsonSerializableStaffBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"                JsonSerializableStaffBook.class).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        StaffBook staffBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"        StaffBook typicalPersonsStaffBook \u003d TypicalPersons.getTypicalStaffBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"        assertEquals(staffBookFromFile, typicalPersonsStaffBook);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"        JsonSerializableStaffBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"                JsonSerializableStaffBook.class).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"        JsonSerializableStaffBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"                JsonSerializableStaffBook.class).get();","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableStaffBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsulim":21,"-":26}},{"path":"src/test/java/staffconnect/storage/JsonStaffBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"public class JsonStaffBookStorageTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonStaffBookStorageTest\");","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"    public void readStaffBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e readStaffBook(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"    private java.util.Optional\u003cReadOnlyStaffBook\u003e readStaffBook(String filePath) throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"        return new JsonStaffBookStorage(Paths.get(filePath)).readStaffBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"        assertFalse(readStaffBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readStaffBook(\"notJsonFormatStaffBook.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"    public void readStaffBook_invalidPersonStaffBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readStaffBook(\"invalidPersonStaffBook.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"    public void readStaffBook_invalidAndValidPersonStaffBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readStaffBook(\"invalidAndValidPersonStaffBook.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"    public void readAndSaveStaffBook_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"        Path filePath \u003d testFolder.resolve(\"TempStaffConnect.json\");","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"        StaffBook original \u003d getTypicalStaffBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"        JsonStaffBookStorage jsonStaffBookStorage \u003d new JsonStaffBookStorage(filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"        jsonStaffBookStorage.saveStaffBook(original, filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"        ReadOnlyStaffBook readBack \u003d jsonStaffBookStorage.readStaffBook(filePath).get();","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"        assertEquals(original, new StaffBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"        jsonStaffBookStorage.saveStaffBook(original, filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"        readBack \u003d jsonStaffBookStorage.readStaffBook(filePath).get();","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"        assertEquals(original, new StaffBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        jsonStaffBookStorage.saveStaffBook(original); // file path not specified","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"        readBack \u003d jsonStaffBookStorage.readStaffBook().get(); // file path not specified","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"        assertEquals(original, new StaffBook(readBack));","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"    public void saveStaffBook_nullStaffBook_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStaffBook(null, \"SomeFile.json\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"     * Saves {@code staffBook} at the specified {@code filePath}.","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"tsulim"},"content":"    private void saveStaffBook(ReadOnlyStaffBook staffBook, String filePath) {","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"            new JsonStaffBookStorage(Paths.get(filePath))","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"tsulim"},"content":"                    .saveStaffBook(staffBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"tsulim"},"content":"    public void saveStaffBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStaffBook(new StaffBook(), null));","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tsulim":42,"-":68}},{"path":"src/test/java/staffconnect/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"        userPrefs.setStaffConnectFilePath(Paths.get(\"staffconnect.json\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"tsulim":6,"-":117}},{"path":"src/test/java/staffconnect/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.storage;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.TypicalPersons.getTypicalStaffBook;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.GuiSettings;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.ReadOnlyStaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.UserPrefs;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        JsonStaffBookStorage staffBookStorage \u003d new JsonStaffBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"        storageManager \u003d new StorageManager(staffBookStorage, userPrefsStorage);","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"    public void staffBookReadSave() throws Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"         * {@link JsonStaffBookStorage} class.","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonStaffBookStorageTest} class.","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"        StaffBook original \u003d getTypicalStaffBook();","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"        storageManager.saveStaffBook(original);","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"        ReadOnlyStaffBook retrieved \u003d storageManager.readStaffBook().get();","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"        assertEquals(original, new StaffBook(retrieved));","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"tsulim"},"content":"    public void getStaffBookFilePath() {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"tsulim"},"content":"        assertNotNull(storageManager.getStaffBookFilePath());","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":17,"-":51}},{"path":"src/test/java/staffconnect/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"tsulim":1,"-":33}},{"path":"src/test/java/staffconnect/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"        descriptor.setFaculty(person.getFaculty());","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"        descriptor.setVenue(person.getVenue());","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"        descriptor.setModule(person.getModule());","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"tsulim"},"content":"        descriptor.setAvailabilities(person.getAvailabilities());","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"     * Sets the {@code Faculty} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"JerryWang0000"},"content":"    public EditPersonDescriptorBuilder withFaculty(String faculty) {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"JerryWang0000"},"content":"        descriptor.setFaculty(new Faculty(faculty));","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"JerryWang0000"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"     * Sets the {@code Venue} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"    public EditPersonDescriptorBuilder withVenue(String venue) {","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"        descriptor.setVenue(new Venue(venue));","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"     * Sets the {@code Module} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"    public EditPersonDescriptorBuilder withModule(String module) {","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"        descriptor.setModule(new Module(module));","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"tsulim"},"content":"     * Parses the {@code availabilities} into a {@code Set\u003cAvailability\u003e} and set it to the","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"     * {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"tsulim"},"content":"    public EditPersonDescriptorBuilder withAvailabilities(String... availabilities) {","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"tsulim"},"content":"        Set\u003cAvailability\u003e availabilitySet \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"tsulim"},"content":"                Stream.of(availabilities).map(Availability::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"tsulim"},"content":"        descriptor.setAvailabilities(availabilitySet);","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"tsulim"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tsulim":27,"iynixil":5,"JerryWang0000":8,"-":80}},{"path":"src/test/java/staffconnect/testutil/MeetingBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pluiexo"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.Meeting;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Pluiexo"},"content":"import staffconnect.model.meeting.MeetingBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Pluiexo"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Pluiexo"},"content":" * A utility class to help with building MeetingBook objects.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Pluiexo"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Pluiexo"},"content":" * {@code MeetingBook book \u003d new MeetingBookBuilder().withMeeting(Meeting).build();}","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Pluiexo"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Pluiexo"},"content":"public class MeetingBookBuilder {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"    private final MeetingBook meetingBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    public MeetingBookBuilder() {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"        meetingBook \u003d new MeetingBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Pluiexo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Pluiexo"},"content":"     * Adds a new {@code Meeting} to the {@code MeetingBook} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Pluiexo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Pluiexo"},"content":"    public MeetingBookBuilder withMeeting(Meeting meeting) {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Pluiexo"},"content":"        meetingBook.addMeeting(meeting);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Pluiexo"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Pluiexo"},"content":"    public MeetingBook build() {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Pluiexo"},"content":"        return meetingBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Pluiexo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Pluiexo"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Pluiexo":30}},{"path":"src/test/java/staffconnect/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Email;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"import staffconnect.model.person.Faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Module;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Name;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Phone;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import staffconnect.model.person.Venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    public static final String DEFAULT_VENUE \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"    public static final String DEFAULT_FACULTY \u003d \"Computing\";","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"    public static final String DEFAULT_MODULE \u003d \"CS2103T\";","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"    private Module module;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"    private Faculty faculty;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"    private Venue venue;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"    private Set\u003cAvailability\u003e availabilities;","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"    private Favourite favourite;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"        module \u003d new Module(DEFAULT_MODULE);","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"        faculty \u003d new Faculty(DEFAULT_FACULTY);","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"        venue \u003d new Venue(DEFAULT_VENUE);","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"        availabilities \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        favourite \u003d new Favourite(false);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"tsulim"},"content":"        module \u003d personToCopy.getModule();","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"JerryWang0000"},"content":"        faculty \u003d personToCopy.getFaculty();","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"        venue \u003d personToCopy.getVenue();","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"        availabilities \u003d new HashSet\u003c\u003e(personToCopy.getAvailabilities());","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"tsulim"},"content":"        favourite \u003d personToCopy.getFavourite();","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"tsulim"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"     * Sets the {@code Module} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"tsulim"},"content":"    public PersonBuilder withModule(String module) {","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"        this.module \u003d new Module(module);","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"JerryWang0000"},"content":"     * Sets the {@code Faculty} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"JerryWang0000"},"content":"    public PersonBuilder withFaculty(String faculty) {","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"JerryWang0000"},"content":"        this.faculty \u003d new Faculty(faculty);","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"JerryWang0000"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"     * Sets the {@code Venue} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"    public PersonBuilder withVenue(String venue) {","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"        this.venue \u003d new Venue(venue);","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"tsulim"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"tsulim"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"tsulim"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"tsulim"},"content":"     * Parses the {@code availabilities} into a {@code Set\u003cAvailability\u003e} and set it to the","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"tsulim"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"tsulim"},"content":"    public PersonBuilder withAvailabilities(String ... availabilities) {","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"tsulim"},"content":"        this.availabilities \u003d SampleDataUtil.getAvailabilitySet(availabilities);","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"tsulim"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"tsulim"},"content":"     * Sets the {@code Favourite} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"tsulim"},"content":"    public PersonBuilder withFavourite(boolean isFavourite) {","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"tsulim"},"content":"        this.favourite \u003d new Favourite(isFavourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"tsulim"},"content":"        return this;","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":145,"author":{"gitId":"tsulim"},"content":"        return new Person(name, phone, email, module, faculty, venue, tags, availabilities, favourite);","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tsulim":55,"iynixil":8,"JerryWang0000":11,"Pluiexo":1,"-":73}},{"path":"src/test/java/staffconnect/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.parser.CliSyntax.PREFIX_VENUE;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.AddCommand;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import staffconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.availability.Availability;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.tag.Tag;","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"        sb.append(PREFIX_FACULTY + person.getFaculty().toString() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"        sb.append(PREFIX_VENUE + person.getVenue().value + \" \");","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"        sb.append(PREFIX_MODULE + person.getModule().value + \" \");","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"        person.getAvailabilities().stream().forEach(","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"            s -\u003e sb.append(PREFIX_AVAILABILITY + s.value + \" \")","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"        );","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"        descriptor.getFaculty().ifPresent(faculty -\u003e sb.append(PREFIX_FACULTY).append(faculty.value).append(\" \"));","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"        descriptor.getVenue().ifPresent(venue -\u003e sb.append(PREFIX_VENUE).append(venue.value).append(\" \"));","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"        descriptor.getModule().ifPresent(module -\u003e sb.append(PREFIX_MODULE).append(module.value).append(\" \"));","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"tsulim"},"content":"        if (descriptor.getAvailabilities().isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"tsulim"},"content":"            Set\u003cAvailability\u003e availabilities \u003d descriptor.getAvailabilities().get();","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"tsulim"},"content":"            if (availabilities.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"tsulim"},"content":"                sb.append(PREFIX_AVAILABILITY);","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"            } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"                availabilities.forEach(s -\u003e sb.append(PREFIX_AVAILABILITY).append(s.value).append(\" \"));","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tsulim":26,"iynixil":3,"JerryWang0000":3,"-":49}},{"path":"src/test/java/staffconnect/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":1,"-":71}},{"path":"src/test/java/staffconnect/testutil/StaffBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"tsulim"},"content":" * A utility class to help with building StaffBook objects.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":" *     {@code StaffBook ab \u003d new StaffBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"public class StaffBookBuilder {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"    private StaffBook staffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"    public StaffBookBuilder() {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"        staffBook \u003d new StaffBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"tsulim"},"content":"    public StaffBookBuilder(StaffBook staffBook) {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"tsulim"},"content":"        this.staffBook \u003d staffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"tsulim"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"     * Adds a new {@code Person} to the {@code StaffBook} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"tsulim"},"content":"    public StaffBookBuilder withPerson(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"tsulim"},"content":"        staffBook.addPerson(person);","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"tsulim"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"tsulim"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"tsulim"},"content":"    public StaffBook build() {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"tsulim"},"content":"        return staffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"tsulim":34}},{"path":"src/test/java/staffconnect/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.Model;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"        return Index.fromOneBased(model.getSortedFilteredPersonList().size() / 2);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"        return Index.fromOneBased(model.getSortedFilteredPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"        return model.getSortedFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tsulim":7,"-":48}},{"path":"src/test/java/staffconnect/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import staffconnect.commons.core.index.Index;","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"    public static final Index INDEX_FOURTH_PERSON \u003d Index.fromOneBased(4);","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pluiexo"},"content":"    public static final Index INDEX_FIRST_MEETING \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Pluiexo"},"content":"    public static final Index INDEX_SECOND_MEETING \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Pluiexo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"tsulim":3,"Pluiexo":4,"-":10}},{"path":"src/test/java/staffconnect/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.testutil;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_MON;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_AVAILABILITY_THUR;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_FACULTY_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MODULE_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"tsulim"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_VENUE_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"import static staffconnect.logic.commands.CommandTestUtil.VALID_VENUE_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.StaffBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"tsulim"},"content":"import staffconnect.model.person.Person;","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"94351253\").withEmail(\"alice@example.com\").withModule(\"CS1101S\")","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"tsulim"},"content":"            .withTags(\"friends\").withAvailabilities(\"mon 12:00 14:00\").withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"98765432\").withEmail(\"johnd@example.com\").withModule(\"CS1231S\")","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"tsulim"},"content":"            .withTags(\"owesMoney\", \"friends\").withAvailabilities(\"tues 12:00 14:00\", \"wed 12:00 14:00\")","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"tsulim"},"content":"            .withFavourite(true).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"tsulim"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withModule(\"CS2030S\")","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"wall street\").withFavourite(true).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    public static final Person CLARA \u003d new PersonBuilder().withName(\"Clara Svarog\")","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"            .withPhone(\"9681384\").withEmail(\"svarog@example.com\").withModule(\"CS2102\")","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"belobog avenue\").withTags(\"classmate\")","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"tsulim"},"content":"            .withAvailabilities(\"fri 12:00 14:00\").withFavourite(true).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"tsulim"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withModule(\"CS2040S\")","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"10th street\")","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"tsulim"},"content":"            .withTags(\"friends\").withAvailabilities(\"thurs 12:00 14:00\", \"fri 12:00 14:00\")","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"tsulim"},"content":"            .withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"tsulim"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").withModule(\"CS2100\")","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"michegan ave\").withFavourite(false)","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"tsulim"},"content":"            .build();","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"tsulim"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withModule(\"CS2101\")","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"little tokyo\").withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"tsulim"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withModule(\"CS2102\")","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"4th street\").withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"tsulim"},"content":"            .withEmail(\"stefan@example.com\").withModule(\"CS2103\").withFaculty(\"Computing\")","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"tsulim"},"content":"            .withVenue(\"little india\").withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"tsulim"},"content":"            .withEmail(\"hans@example.com\").withModule(\"CS2103T\").withFaculty(\"Computing\")","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"tsulim"},"content":"            .withVenue(\"chicago ave\").withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"whitesnowx"},"content":"    // End of manually added","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":73,"author":{"gitId":"whitesnowx"},"content":"    public static final Person KAFKA \u003d new PersonBuilder().withName(\"Kafka Apache\").withPhone(\"9452413\")","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"whitesnowx"},"content":"            .withEmail(\"apache@example.com\").withModule(\"CS2102\").withFaculty(\"Business\")","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"tsulim"},"content":"            .withVenue(\"pteruges avenue\").withTags(\"classmate\").withAvailabilities(\"FRIDAY 12:00 14:00\")","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"tsulim"},"content":"            .withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"tsulim"},"content":"    public static final Person LEONARDO \u003d new PersonBuilder().withName(\"Leonardo DiCaprio\")","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"88472234\").withEmail(\"lcaprio@gmail.com\").withModule(\"TS2237\")","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Arts and Social Sciences\").withVenue(\"LT13\").withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"tsulim"},"content":"    public static final Person MICHAEL \u003d new PersonBuilder().withName(\"Michael Jackson\")","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"92347123\").withEmail(\"heehee@gmail.com\").withModule(\"MUA1163\")","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Music\").withVenue(\"YSTCM-SR9\").withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"tsulim"},"content":"    public static final Person NATASHA \u003d new PersonBuilder().withName(\"Natasha Harrower\")","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"tsulim"},"content":"            .withPhone(\"8019394\").withEmail(\"harrower@example.com\").withModule(\"CS2102\")","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"tsulim"},"content":"            .withFaculty(\"Computing\").withVenue(\"underworld avenue\").withTags(\"classmate\")","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"tsulim"},"content":"            .withAvailabilities(\"FRIDAY 12:00 14:00\").withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"whitesnowx"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"tsulim"},"content":"            .withEmail(VALID_EMAIL_AMY).withModule(VALID_MODULE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"tsulim"},"content":"            .withFaculty(VALID_FACULTY_AMY).withVenue(VALID_VENUE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"tsulim"},"content":"            .withTags(VALID_TAG_FRIEND).withAvailabilities(VALID_AVAILABILITY_MON)","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"tsulim"},"content":"            .withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"tsulim"},"content":"            .withEmail(VALID_EMAIL_BOB).withModule(VALID_MODULE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"tsulim"},"content":"            .withFaculty(VALID_FACULTY_BOB).withVenue(VALID_VENUE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"tsulim"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"tsulim"},"content":"            .withAvailabilities(VALID_AVAILABILITY_MON, VALID_AVAILABILITY_THUR)","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"tsulim"},"content":"            .withFavourite(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"tsulim"},"content":"     * Returns an {@code StaffBook} with all the typical persons.","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"tsulim"},"content":"    public static StaffBook getTypicalStaffBook() {","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"tsulim"},"content":"        StaffBook ab \u003d new StaffBook();","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"whitesnowx"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, CLARA, DANIEL, ELLE, FIONA, GEORGE, KAFKA,","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"whitesnowx"},"content":"                LEONARDO, MICHAEL, NATASHA));","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"tsulim":68,"iynixil":4,"JerryWang0000":4,"whitesnowx":6,"-":38}},{"path":"src/test/java/staffconnect/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"tsulim":1,"-":44}},{"path":"src/test/java/staffconnect/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsulim"},"content":"package staffconnect.ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tsulim"},"content":"import static staffconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"tsulim"},"content":"import staffconnect.MainApp;","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"tsulim":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"\u003c?import staffconnect.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"tsulim":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"tsulim"},"content":"\u003cfx:root type\u003d\"staffconnect.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tsulim":1,"-":5}}]
