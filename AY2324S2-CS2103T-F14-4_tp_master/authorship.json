[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F14-4/tp/actions)","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F14-4/tp/graph/badge.svg?token\u003d3BJBAZ63W8)](https://codecov.io/gh/AY2324S2-CS2103T-F14-4/tp)","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"* This is a team project for our CS2103T Software Engineering class.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"* Tailored specifically for computing students, our team project, Connectify, ","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"optimises networking for future career opportunities. Connectify seamlessly ","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"organises contact details, efficiently manages professional relationships ","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"and simplifies event and meeting planning. Designed for seamless usage via ","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"Command Line Interface (CLI), Connectifyâ€™s ease of use sets up computing ","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"students for success.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"sindhurajain":10,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"run {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sindhurajain":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"### Sindhura Rajiv Jain","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"\u003cimg src\u003d\"images/sindhurajain.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"[[github](https://github.com/sindhurajain)]","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"* Role: Scheduling and Tracking \u0026 Deliverables and Deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"* Responsibilities: UI","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"### Neo Tahnya","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"\u003cimg src\u003d\"images/tahnya.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"[[github](http://github.com/tahnya)]","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"* Role: Documentation \u0026 Code Quality","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"### Yap Xuan Xuan","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"\u003cimg src\u003d\"images/yapxuanxuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"[[github](http://github.com/yapxuanxuan)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"* Role: Team Lead","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"FangRuoqing"},"content":"### Fang Ruoqing","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"FangRuoqing"},"content":"\u003cimg src\u003d\"images/fangruoqing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"FangRuoqing"},"content":"[[github](http://github.com/FangRuoqing)]","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"FangRuoqing"},"content":"* Role: Testing","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"FangRuoqing"},"content":"* Responsibilities: Test","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"SamuelZero1"},"content":"### Zhou Yang","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"SamuelZero1"},"content":"\u003cimg src\u003d\"images/samuelzero1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"SamuelZero1"},"content":"[[github](http://github.com/SamuelZero1)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"SamuelZero1"},"content":"* Role: Integration","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"SamuelZero1"},"content":"* Responsibilities: Integrate the software components","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"tahnya":4,"yapxuanxuan":4,"SamuelZero1":5,"FangRuoqing":5,"sindhurajain":5,"-":37}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete Alex Yeoh`.","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete Alex Yeoh\")` API call as an example.","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"sindhurajain"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete Alex Yeoh` Command\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"sindhurajain"},"content":"Step 2. The user executes `delete Bernice Yu` command to delete the person with the name \"Bernice Yu\" in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete Bernice Yu` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"FangRuoqing"},"content":"* **Manages a Substantial Contact Network:** Connectify\u0027s target users have a need to manage a significant number of contacts within their professional network.","lastModifiedDate":"2024-03-07"},{"lineNumber":278,"author":{"gitId":"FangRuoqing"},"content":"* **Prefers Desktop Applications:** These users prefer desktop applications over other types of software solutions.","lastModifiedDate":"2024-03-07"},{"lineNumber":279,"author":{"gitId":"FangRuoqing"},"content":"* **Proficient Typists:** Connectify\u0027s target users are proficient typists who can type quickly and accurately. They prefer typing over mouse interactions.","lastModifiedDate":"2024-03-07"},{"lineNumber":280,"author":{"gitId":"FangRuoqing"},"content":"* **Comfortable with Command-Line Interfaces (CLI):** While they may not be experts, Connectify\u0027s target users are reasonably comfortable using command-line interfaces (CLI) and appreciate the efficiency and control that CLI applications offer.","lastModifiedDate":"2024-03-07"},{"lineNumber":281,"author":{"gitId":"FangRuoqing"},"content":"* **Value Efficiency and Organization:** Connectify\u0027s target users value efficiency and organization in managing their professional contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"FangRuoqing"},"content":"**Value proposition**: Tailored specifically for computing students, our team project, Connectify, optimises networking for future career opportunities. Connectify seamlessly organises contact details, efficiently manages professional relationships and simplifies event and meeting planning. Designed for seamless usage via Command Line Interface (CLI), Connectifyâ€™s ease of use sets up computing students for success.","lastModifiedDate":"2024-03-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹           | I want to â€¦â€‹                                                                                              | So that I canâ€¦â€‹                                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"FangRuoqing"},"content":"|----------|-------------------|-----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":292,"author":{"gitId":"FangRuoqing"},"content":"| `* * *`  | user              | add a new contact easily                                                                                  |                                                                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":293,"author":{"gitId":"FangRuoqing"},"content":"| `* * *`  | user              | edit the details that Iâ€™ve added                                                                          | my application will contain the most updated and accurate information                |","lastModifiedDate":"2024-03-07"},{"lineNumber":294,"author":{"gitId":"FangRuoqing"},"content":"| `* * *`  | user              | list all my contacts                                                                                      | remember whom Iâ€™ve met at a glance                                                   |","lastModifiedDate":"2024-03-07"},{"lineNumber":295,"author":{"gitId":"FangRuoqing"},"content":"| `* * *`  | user              | delete a contact                                                                                          | only keep those that are necessary                                                   |","lastModifiedDate":"2024-03-07"},{"lineNumber":296,"author":{"gitId":"FangRuoqing"},"content":"| `* *`    | computing student | categorise the people I meet into interns, recruiters, alumni, students, professors, employees and others | remember the people whom Iâ€™ve met and easily find them again                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":297,"author":{"gitId":"FangRuoqing"},"content":"| `* *`    | computing student | search a contact using key word                                                                           | find the contact quickly                                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":298,"author":{"gitId":"FangRuoqing"},"content":"| `* *`    | user              | differentiate which companies my professional contacts are from                                           | know which company I am connecting with                                              |","lastModifiedDate":"2024-03-07"},{"lineNumber":299,"author":{"gitId":"FangRuoqing"},"content":"| `* *`    | computing student | assign priority levels to my contacts                                                                     | prioritise certain contacts in my network who would be more beneficial for my career |","lastModifiedDate":"2024-03-07"},{"lineNumber":300,"author":{"gitId":"FangRuoqing"},"content":"| `*`      | computing student | filter my contacts by priority                                                                            | identify high-priority contacts at a glance                                          |","lastModifiedDate":"2024-03-07"},{"lineNumber":301,"author":{"gitId":"FangRuoqing"},"content":"| `*`      | user              | have a \"favourites\" or \"star\" feature for important contacts                                              | easily access them without scrolling through the entire list                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":302,"author":{"gitId":"FangRuoqing"},"content":"| `*`      | user              | know the number of contacts quickly                                                                       | get a sensing of how many people are in my network                                   |","lastModifiedDate":"2024-03-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"yapxuanxuan"},"content":"(For all use cases below, the **System** is the `Connectify` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-06"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"yapxuanxuan"},"content":"**Use case: Add a contact**","lastModifiedDate":"2024-03-06"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"yapxuanxuan"},"content":"1.  User requests to add a contact","lastModifiedDate":"2024-03-06"},{"lineNumber":314,"author":{"gitId":"yapxuanxuan"},"content":"2.  Connectify adds the person","lastModifiedDate":"2024-03-06"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":321,"author":{"gitId":"yapxuanxuan"},"content":"* 1a. The given contact name is already in the contact list.","lastModifiedDate":"2024-03-06"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":323,"author":{"gitId":"yapxuanxuan"},"content":"    * 1a1. Connectify shows an error message and requests for the user to give a different contact name.","lastModifiedDate":"2024-03-06"},{"lineNumber":324,"author":{"gitId":"yapxuanxuan"},"content":"    * 1a2. User enters new data.","lastModifiedDate":"2024-03-06"},{"lineNumber":325,"author":{"gitId":"yapxuanxuan"},"content":"    * Steps 1a1-1a2 are repeated until the data entered is correct.","lastModifiedDate":"2024-03-06"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":327,"author":{"gitId":"yapxuanxuan"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":329,"author":{"gitId":"yapxuanxuan"},"content":"* 1b. Connectify detects an error in the entered data.","lastModifiedDate":"2024-03-06"},{"lineNumber":330,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":331,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b1. Connectify requests for the correct data.","lastModifiedDate":"2024-03-06"},{"lineNumber":332,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b2. User enters new data","lastModifiedDate":"2024-03-06"},{"lineNumber":333,"author":{"gitId":"yapxuanxuan"},"content":"    * Steps 1b1-1b2 are repeated until the data entered is correct.","lastModifiedDate":"2024-03-06"},{"lineNumber":334,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":335,"author":{"gitId":"yapxuanxuan"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":336,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":337,"author":{"gitId":"yapxuanxuan"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2024-03-06"},{"lineNumber":338,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":339,"author":{"gitId":"yapxuanxuan"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":340,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":341,"author":{"gitId":"yapxuanxuan"},"content":"1.  User requests to delete a specific person from the contact list","lastModifiedDate":"2024-03-06"},{"lineNumber":342,"author":{"gitId":"yapxuanxuan"},"content":"2.  Connectify deletes the person","lastModifiedDate":"2024-03-06"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"yapxuanxuan"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"yapxuanxuan"},"content":"* 1a. The given contact name is not in the contact list.","lastModifiedDate":"2024-03-06"},{"lineNumber":350,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":351,"author":{"gitId":"yapxuanxuan"},"content":"    * 1a1. Connectify shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":352,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":353,"author":{"gitId":"yapxuanxuan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":354,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":355,"author":{"gitId":"yapxuanxuan"},"content":"**Use case: List contacts**","lastModifiedDate":"2024-03-06"},{"lineNumber":356,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":357,"author":{"gitId":"yapxuanxuan"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":358,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":359,"author":{"gitId":"yapxuanxuan"},"content":"1.  User requests to list contacts","lastModifiedDate":"2024-03-06"},{"lineNumber":360,"author":{"gitId":"yapxuanxuan"},"content":"2.  Connectify shows a list of contacts","lastModifiedDate":"2024-03-06"},{"lineNumber":361,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":362,"author":{"gitId":"yapxuanxuan"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":363,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":364,"author":{"gitId":"yapxuanxuan"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":365,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":366,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":367,"author":{"gitId":"yapxuanxuan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":368,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":369,"author":{"gitId":"yapxuanxuan"},"content":"    * 1a1. Connectify shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":370,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":371,"author":{"gitId":"yapxuanxuan"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":372,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":373,"author":{"gitId":"yapxuanxuan"},"content":"**Use case: Edit contacts**","lastModifiedDate":"2024-03-06"},{"lineNumber":374,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":375,"author":{"gitId":"yapxuanxuan"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":376,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":377,"author":{"gitId":"yapxuanxuan"},"content":"1.  User requests to edit a specific contact","lastModifiedDate":"2024-03-06"},{"lineNumber":378,"author":{"gitId":"yapxuanxuan"},"content":"2.  Connectify edits the contact information and displays the full updated contact information","lastModifiedDate":"2024-03-06"},{"lineNumber":379,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":380,"author":{"gitId":"yapxuanxuan"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":381,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":382,"author":{"gitId":"yapxuanxuan"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":383,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":384,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":385,"author":{"gitId":"yapxuanxuan"},"content":"* 1a. The given contact name is not in the contact list.","lastModifiedDate":"2024-03-06"},{"lineNumber":386,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":387,"author":{"gitId":"yapxuanxuan"},"content":"    * 1a1. Connectify shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":388,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":389,"author":{"gitId":"yapxuanxuan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":390,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":391,"author":{"gitId":"yapxuanxuan"},"content":"* 1b. Connectify detects an error in the entered data.","lastModifiedDate":"2024-03-06"},{"lineNumber":392,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":393,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b1. Connectify requests for the correct data.","lastModifiedDate":"2024-03-06"},{"lineNumber":394,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b2. User enters new data","lastModifiedDate":"2024-03-06"},{"lineNumber":395,"author":{"gitId":"yapxuanxuan"},"content":"    * Steps 1b1-1b2 are repeated until the data entered is correct.","lastModifiedDate":"2024-03-06"},{"lineNumber":396,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":397,"author":{"gitId":"yapxuanxuan"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":398,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":399,"author":{"gitId":"yapxuanxuan"},"content":"* 1c. The contact information to be updated is unchanged from the original.","lastModifiedDate":"2024-03-06"},{"lineNumber":400,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":401,"author":{"gitId":"yapxuanxuan"},"content":"    * 1c1. Connectify shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":402,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":403,"author":{"gitId":"yapxuanxuan"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":404,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":405,"author":{"gitId":"yapxuanxuan"},"content":"**Use case: Categorize contacts**","lastModifiedDate":"2024-03-06"},{"lineNumber":406,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":407,"author":{"gitId":"yapxuanxuan"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":408,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":409,"author":{"gitId":"yapxuanxuan"},"content":"1.  User requests to categorize a specific contact into a specific group name","lastModifiedDate":"2024-03-06"},{"lineNumber":410,"author":{"gitId":"yapxuanxuan"},"content":"2.  Connectify adds the given category to the contact and displays the full updated contact information","lastModifiedDate":"2024-03-06"},{"lineNumber":411,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":412,"author":{"gitId":"yapxuanxuan"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":413,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":414,"author":{"gitId":"yapxuanxuan"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":415,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":416,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":417,"author":{"gitId":"yapxuanxuan"},"content":"* 1a. The given contact name is not in the contact list.","lastModifiedDate":"2024-03-06"},{"lineNumber":418,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":419,"author":{"gitId":"yapxuanxuan"},"content":"    * 1a1. Connectify shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":420,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":421,"author":{"gitId":"yapxuanxuan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":422,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":423,"author":{"gitId":"yapxuanxuan"},"content":"* 1b. The contact already has an existing category","lastModifiedDate":"2024-03-06"},{"lineNumber":424,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b1. Connectify informs the user the category that the contact currently is under and requests for confirmation","lastModifiedDate":"2024-03-06"},{"lineNumber":426,"author":{"gitId":"yapxuanxuan"},"content":"      to update the current category to the newly given one.","lastModifiedDate":"2024-03-06"},{"lineNumber":427,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b2a. User confirms the update.","lastModifiedDate":"2024-03-06"},{"lineNumber":428,"author":{"gitId":"yapxuanxuan"},"content":"        * 1b2a1. Connectify updates the current category of the given contact to the new one.","lastModifiedDate":"2024-03-06"},{"lineNumber":429,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":430,"author":{"gitId":"yapxuanxuan"},"content":"          Use Case ends","lastModifiedDate":"2024-03-06"},{"lineNumber":431,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b2b. User cancels the update.","lastModifiedDate":"2024-03-06"},{"lineNumber":432,"author":{"gitId":"yapxuanxuan"},"content":"        * 1b2b1. Connectify does not update the information.","lastModifiedDate":"2024-03-06"},{"lineNumber":433,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":434,"author":{"gitId":"yapxuanxuan"},"content":"          Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":435,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":436,"author":{"gitId":"yapxuanxuan"},"content":"**Use case: Tag contacts with their company\u0027s name**","lastModifiedDate":"2024-03-06"},{"lineNumber":437,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":438,"author":{"gitId":"yapxuanxuan"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":439,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":440,"author":{"gitId":"yapxuanxuan"},"content":"1.  User requests to tag a specific contact with a specific company\u0027s name","lastModifiedDate":"2024-03-06"},{"lineNumber":441,"author":{"gitId":"yapxuanxuan"},"content":"2.  Connectify adds the company\u0027s name tag to the contact and displays the full updated contact information","lastModifiedDate":"2024-03-06"},{"lineNumber":442,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":443,"author":{"gitId":"yapxuanxuan"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":444,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":445,"author":{"gitId":"yapxuanxuan"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":446,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":447,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":448,"author":{"gitId":"yapxuanxuan"},"content":"* 1a. The given contact name is not in the contact list.","lastModifiedDate":"2024-03-06"},{"lineNumber":449,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":450,"author":{"gitId":"yapxuanxuan"},"content":"    * 1a1. Connectify shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":451,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":452,"author":{"gitId":"yapxuanxuan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":453,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":454,"author":{"gitId":"yapxuanxuan"},"content":"* 1b. The contact already has an existing company tag.","lastModifiedDate":"2024-03-06"},{"lineNumber":455,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":456,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b1. Connectify informs the user the company tag that the contact currently has and requests for confirmation","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"yapxuanxuan"},"content":"      to update the current company tag to the newly given one.","lastModifiedDate":"2024-03-06"},{"lineNumber":458,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b2a. User confirms the update.","lastModifiedDate":"2024-03-06"},{"lineNumber":459,"author":{"gitId":"yapxuanxuan"},"content":"      * 1b2a1. Connectify updates the current company tag of the given contact to the new one.","lastModifiedDate":"2024-03-06"},{"lineNumber":460,"author":{"gitId":"yapxuanxuan"},"content":"      ","lastModifiedDate":"2024-03-06"},{"lineNumber":461,"author":{"gitId":"yapxuanxuan"},"content":"        Use Case ends","lastModifiedDate":"2024-03-06"},{"lineNumber":462,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b2b. User cancels the update.","lastModifiedDate":"2024-03-06"},{"lineNumber":463,"author":{"gitId":"yapxuanxuan"},"content":"      * 1b2b1. Connectify does not update the information.","lastModifiedDate":"2024-03-06"},{"lineNumber":464,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":465,"author":{"gitId":"yapxuanxuan"},"content":"        Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":466,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":467,"author":{"gitId":"yapxuanxuan"},"content":"**Use case: Assign priorities to contacts**","lastModifiedDate":"2024-03-06"},{"lineNumber":468,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":469,"author":{"gitId":"yapxuanxuan"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":470,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":471,"author":{"gitId":"yapxuanxuan"},"content":"1.  User requests to assign a specific contact with low/medium/high priority","lastModifiedDate":"2024-03-06"},{"lineNumber":472,"author":{"gitId":"yapxuanxuan"},"content":"2.  Connectify adds the given priority to the contact and displays the full updated contact information","lastModifiedDate":"2024-03-06"},{"lineNumber":473,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":474,"author":{"gitId":"yapxuanxuan"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":475,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":476,"author":{"gitId":"yapxuanxuan"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":477,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":478,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":479,"author":{"gitId":"yapxuanxuan"},"content":"* 1a. The given contact name is not in the contact list.","lastModifiedDate":"2024-03-06"},{"lineNumber":480,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":481,"author":{"gitId":"yapxuanxuan"},"content":"    * 1a1. Connectify shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":482,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":483,"author":{"gitId":"yapxuanxuan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":484,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":485,"author":{"gitId":"yapxuanxuan"},"content":"* 1b. The contact already has an existing priority label.","lastModifiedDate":"2024-03-06"},{"lineNumber":486,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":487,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b1. Connectify informs the user the priority label that the contact currently has and requests for confirmation","lastModifiedDate":"2024-03-06"},{"lineNumber":488,"author":{"gitId":"yapxuanxuan"},"content":"      to update the current priority level to the newly given one.","lastModifiedDate":"2024-03-06"},{"lineNumber":489,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b2a. User confirms the update.","lastModifiedDate":"2024-03-06"},{"lineNumber":490,"author":{"gitId":"yapxuanxuan"},"content":"        * 1b2a1. Connectify updates the current priority label of the given contact to the new one.","lastModifiedDate":"2024-03-06"},{"lineNumber":491,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":492,"author":{"gitId":"yapxuanxuan"},"content":"          Use Case ends","lastModifiedDate":"2024-03-06"},{"lineNumber":493,"author":{"gitId":"yapxuanxuan"},"content":"    * 1b2b. User cancels the update.","lastModifiedDate":"2024-03-06"},{"lineNumber":494,"author":{"gitId":"yapxuanxuan"},"content":"        * 1b2b1. Connectify does not update the information.","lastModifiedDate":"2024-03-06"},{"lineNumber":495,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":496,"author":{"gitId":"yapxuanxuan"},"content":"          Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"SamuelZero1"},"content":"4.  The application should implement certain security measures to protect the users\u0027 private contact details from unauthorized access. This includes the encryption of sensitive data and preventing unauthorized access to the application\u0027s database.","lastModifiedDate":"2024-03-07"},{"lineNumber":505,"author":{"gitId":"SamuelZero1"},"content":"5.  The application should be convenient enough for the users(including those that are disabled).","lastModifiedDate":"2024-03-07"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":509,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"SamuelZero1"},"content":"* **Favorites**: The users can mark some users as favorites. This will increase the userâ€™s efficiency when finding the people they like to contact","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"SamuelZero1"},"content":"* **Tags**: The users can classify different contacts as from different groupings","lastModifiedDate":"2024-03-07"},{"lineNumber":512,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":520,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":521,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"sindhurajain"},"content":"   1. Test case: `delete Alex Yeoh`\u003cbr\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":549,"author":{"gitId":"sindhurajain"},"content":"      Expected: Contact with the name \"Alex Yeoh\" is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-24"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"sindhurajain"},"content":"   1. Test case: `delete`\u003cbr\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"sindhurajain"},"content":"   1. Other incorrect delete commands to try: `delete 0`, `delete 1`, `delete x`, `...` (where x is an integer)\u003cbr\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yapxuanxuan":172,"SamuelZero1":4,"FangRuoqing":18,"sindhurajain":8,"-":363}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"# Connectify User Guide","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"Connectify is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) ","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Connectify can get your ","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Connectify application.","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` ","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"   to Connectify.","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"   * `delete John Doe` : Deletes the contact with the specified contact name.","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"   ","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"   * `edit John Doe n/John Tan` : edits the name attribute of the contact of `John Doe` to `John Tan`","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]â€¦â€‹`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"Format: `edit NAME [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹`","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"* Edits the contact with the specified `NAME`. The specified `NAME` of the contact to edit is case-insensitive. ","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"    e.g `edit John Doe n/John` is the same as `edit john doe n/John`","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* You can remove all the personâ€™s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"yapxuanxuan"},"content":"*  `edit John Doe p/91234567 e/johndoe@example.com` Edits the phone number and email address of the contact named ","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"yapxuanxuan"},"content":"    `John Doe` to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"yapxuanxuan"},"content":"*  `edit Betsy n/Betsy Crower t/` Edits the name of the contact named `Betsy` to be `Betsy Crower` and clears all ","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"yapxuanxuan"},"content":"    existing tags.","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"yapxuanxuan"},"content":"Format: `delete NAME`","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"yapxuanxuan"},"content":"* Deletes the contact with the specified `NAME`. The specified `NAME` of the contact to delete is case-insensitive.","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"yapxuanxuan"},"content":"  e.g `delete John Doe` is the same as `delete john doe`","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"yapxuanxuan"},"content":"* `delete Betsy` deletes the contact with the contact name `Betsy` in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"yapxuanxuan"},"content":"### Adding a company tag to a person : `co`","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"yapxuanxuan"},"content":"Adds the specified company tag name to the specified contact.","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":158,"author":{"gitId":"yapxuanxuan"},"content":"Format: `co NAME c/COMPANY_NAME`","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":160,"author":{"gitId":"yapxuanxuan"},"content":"* Adds the company tag to the person\u0027s contact. The specified `NAME` of the contact to add the company tag is ","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"yapxuanxuan"},"content":"case-insensitive. e.g `co John Doe c/TikTok` is the same as `co john doe c/TikTok`","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"yapxuanxuan"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"yapxuanxuan"},"content":"* `co Betsy c/Google` adds the company tag `Google` to the contact name `Betsy` in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"yapxuanxuan"},"content":"### Assigning priority level to a contact : `pr/PRIORITY_LEVEL`","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"yapxuanxuan"},"content":"Assigns the specified priority level to the specified contact.","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"yapxuanxuan"},"content":"Format: `pr/PRIORITY_LEVEL NAME`","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"yapxuanxuan"},"content":"* Assigns the specified priority level to the person\u0027s contact. The specified `NAME` of the contact to assign the ","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"yapxuanxuan"},"content":"priority level is case-insensitive. e.g `pr/high Alex Tan` is the same as `pr/high alex tan`","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"yapxuanxuan"},"content":"* Acceptable values for PRIORITY_LEVEL are `high` and `med`.","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"yapxuanxuan"},"content":"Examples:","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"yapxuanxuan"},"content":"* `pr/high Alex Tan` assigns `HIGH` priority level to the contact name `Alex Tan` in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"yapxuanxuan"},"content":"### Filtering contacts by priority : `filter-PRIORITY_LEVEL`","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":181,"author":{"gitId":"yapxuanxuan"},"content":"Filters the contacts in the address book by the specified priority level.","lastModifiedDate":"2024-03-12"},{"lineNumber":182,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":183,"author":{"gitId":"yapxuanxuan"},"content":"Format: `filter-PRIORITY_LEVEL`","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"yapxuanxuan"},"content":"Examples:","lastModifiedDate":"2024-03-12"},{"lineNumber":186,"author":{"gitId":"yapxuanxuan"},"content":"* `filter-high` returns a list of contacts with priority assigned as `high`.","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"yapxuanxuan"},"content":"* `filter-med` returns a list of contacts with priority assigned as `med`.","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"yapxuanxuan"},"content":"### Getting the number of contacts : `count`","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"yapxuanxuan"},"content":"Counts the number of contacts in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"yapxuanxuan"},"content":"Format: `count`","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":195,"author":{"gitId":"yapxuanxuan"},"content":"### Starring a contact : `star`","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"yapxuanxuan"},"content":"Stars the specified contact in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":198,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":199,"author":{"gitId":"yapxuanxuan"},"content":"Format: `star NAME`","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"yapxuanxuan"},"content":"* Stars the contact with the specified `NAME`. The specified `NAME` of the contact to star is case-insensitive.","lastModifiedDate":"2024-03-12"},{"lineNumber":202,"author":{"gitId":"yapxuanxuan"},"content":"  e.g `star John Doe` is the same as `star john doe`","lastModifiedDate":"2024-03-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"yapxuanxuan"},"content":"* `star Betsy` stars the contact with the contact name `Betsy` in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":206,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":207,"author":{"gitId":"yapxuanxuan"},"content":"### Undoing the last command : `undo`","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"yapxuanxuan"},"content":"Undoes the most recent add command by removing the most recently added contact.","lastModifiedDate":"2024-03-12"},{"lineNumber":210,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":211,"author":{"gitId":"yapxuanxuan"},"content":"Format: `undo`","lastModifiedDate":"2024-03-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"yapxuanxuan"},"content":"The address book data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"yapxuanxuan"},"content":"The address book data is saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":236,"author":{"gitId":"yapxuanxuan"},"content":"If your changes to the data file makes its format invalid, Connectify will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"yapxuanxuan"},"content":"Furthermore, certain edits can cause Connectify to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"yapxuanxuan"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Connectify home folder.","lastModifiedDate":"2024-03-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"yapxuanxuan"},"content":"-----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]â€¦â€‹` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"yapxuanxuan"},"content":"**Delete** | `delete NAME`\u003cbr\u003e e.g., `delete John Doe`","lastModifiedDate":"2024-03-12"},{"lineNumber":266,"author":{"gitId":"yapxuanxuan"},"content":"**Edit**   | `edit NAME [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹`\u003cbr\u003e e.g.,`edit James n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-03-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"yapxuanxuan"},"content":"**Add Company Tag**  | `co NAME c/COMPANY_NAME`\u003cbr\u003e e.g., `co James Doe c/TikTok`","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"yapxuanxuan"},"content":"**Assign Priority**  | `pr/PRIORITY_LEVEL NAME`\u003cbr\u003e e.g., `pr/high Alex Tan`","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"yapxuanxuan"},"content":"**Filter** | `filter-PRIORITY_LEVEL`\u003cbr\u003e e.g., `filter-high`","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"yapxuanxuan"},"content":"**Count**  | `count`","lastModifiedDate":"2024-03-12"},{"lineNumber":272,"author":{"gitId":"yapxuanxuan"},"content":"**Star**   | `star NAME`\u003cbr\u003e e.g., `star John Doe`","lastModifiedDate":"2024-03-12"},{"lineNumber":273,"author":{"gitId":"yapxuanxuan"},"content":"**Undo**   | `undo`","lastModifiedDate":"2024-03-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yapxuanxuan":91,"-":184}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eConnectify\u003c/a\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"sindhurajain":1,"-":66}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"user -[USER_COLOR]\u003e ui : \"delete Alex Yeoh\"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete Alex Yeoh\")","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sindhurajain":2,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Email","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Address","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Company","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Priority","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Note","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tahnya":5,"-":19}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"[-\u003e LogicManager : execute(\"delete Alex Yeoh\")","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete Alex Yeoh\")","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"Alex Yeoh\")","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"DeleteCommand -\u003e Model : deletePerson(\"Alex Yeoh\")","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sindhurajain":4,"-":66}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"Class Company","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"Class Priority","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"Class Note","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Email","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Address","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Company","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Priority","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"Person *--\u003e \"*\" Note","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tahnya":6,"yapxuanxuan":1,"sindhurajain":1,"-":52}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"title After command \"delete Bernice Yu\"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State1 as \"\u003cu\u003eab0:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State2 as \"\u003cu\u003eab1:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State3 as \"\u003cu\u003eab2:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sindhurajain":1,"-":22}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"    public static boolean containsFullWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"     *   Ignores case, allows partial word match.","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"FangRuoqing"},"content":"        String preppedWord \u003d word.trim().toLowerCase(); // Convert to lowercase for case-insensitive matching","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"FangRuoqing"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"FangRuoqing"},"content":"        String preppedSentence \u003d sentence.toLowerCase(); // Convert to lowercase for case-insensitive matching","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"FangRuoqing"},"content":"        return preppedSentence.contains(preppedWord);","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yapxuanxuan":5,"FangRuoqing":4,"-":83}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"            + \"EMAIL, ADDRESS and TAGs are optional.\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tahnya":1,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/CompanyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":" * Changes the company of an existing person in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"public class CompanyCommand extends Command {","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String COMMAND_WORD \u003d \"co\";","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"            + \": Adds a company to the person identified by the contact name \"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"            + \"Existing company will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"            + \"c/ [COMPANY_NAME]\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"            + \"c/ Friends\";","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_ADD_COMPANY_SUCCESS \u003d \"Tagged %1$s\u0027s company as %2$s\";","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_DELETE_COMPANY_SUCCESS \u003d \"Removed the company tag from %1$s\u0027s contact\";","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"            \"Company command not implemented yet\";","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Oops, %1$s\u0027s contact does not exist. Unable to add \"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"            + \"company tag.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_EMPTY_NAME \u003d \"Oops, please state the name of the contact.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"    private final String name;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"    private final Company company;","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"     * @param name  of the person in the filtered person list to edit the company","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"     * @param company of the person to be updated to","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"    public CompanyCommand(String name, Company company) {","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        requireAllNonNull(name, company);","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"        this.company \u003d company;","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"            throw new CommandException(String.format(MESSAGE_EMPTY_NAME, name));","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"        List\u003cPerson\u003e contactList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"        Person personToEdit \u003d null;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"        for (Person person : contactList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"            if (person.getName().fullName.equalsIgnoreCase(name)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"                personToEdit \u003d person;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"                break;","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"        if (personToEdit \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_NOT_FOUND, name));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"FangRuoqing"},"content":"                personToEdit.getAddress(), company, personToEdit.getPriority(),","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"FangRuoqing"},"content":"                personToEdit.isStarred(), personToEdit.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"     * the company is added to or removed from","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"        String message \u003d !company.value.isEmpty() ? MESSAGE_ADD_COMPANY_SUCCESS : MESSAGE_DELETE_COMPANY_SUCCESS;","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"        return String.format(message, personToEdit.getName(), company);","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"        if (!(other instanceof CompanyCommand)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyCommand e \u003d (CompanyCommand) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"        return name.equals(e.name)","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"                \u0026\u0026 company.equals(e.company);","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"yapxuanxuan":99,"FangRuoqing":2,"sindhurajain":3}},{"path":"src/main/java/seedu/address/logic/commands/CountCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":" * Shows the number of contacts in the address book to the user.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"public class CountCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String COMMAND_WORD \u003d \"count\";","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You currently have %1$d contacts.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"        int count \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, count));","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"yapxuanxuan":25}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":" * Deletes a person identified using it\u0027s displayed name from the contact list.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the person identified by the \"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"            + \"name used in the contact list.\\n\" + \"Parameters: CONTACT_NAME\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"            + \"Example: \" + COMMAND_WORD + \" Alex Tan\";","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Okay, %1$s\u0027s contact has been deleted.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Oops, %1$s\u0027s contact does not exist.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    private final String targetName;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    public DeleteCommand(String targetName) {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    public String getTargetName() {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"        return targetName;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"        List\u003cPerson\u003e contactList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"        Person personToDelete \u003d null;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"        for (Person person : contactList) {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"            if (person.getName().fullName.equalsIgnoreCase(targetName)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"                personToDelete \u003d person;","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"                break;","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        if (personToDelete \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_NOT_FOUND, targetName));","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, targetName));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"        return targetName.equals(otherDeleteCommand.targetName);","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"        return new ToStringBuilder(this).add(\"targetName\", targetName).toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sindhurajain":26,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"        Company updatedCompany \u003d personToEdit.getCompany();","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"FangRuoqing"},"content":"        Boolean updatedStar \u003d personToEdit.isStarred();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"sindhurajain"},"content":"        Priority updatedPriority \u003d personToEdit.getPriority();","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"sindhurajain"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"FangRuoqing"},"content":"                updatedAddress, updatedCompany, updatedPriority, updatedStar, updatedTags);","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yapxuanxuan":2,"FangRuoqing":2,"sindhurajain":3,"-":241}},{"path":"src/main/java/seedu/address/logic/commands/FilterHighPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" * Finds and lists all persons in address book who are marked as high priority.","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"public class FilterHighPriorityCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    public static final String COMMAND_WORD \u003d \"filter-high\";","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose \"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"            + \"priorities are high and displays them as a list.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed contacts with high priority\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_NO_CONTACTS_FOUND \u003d \"Oops! No contacts found with high priority level.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        model.updateFilteredPersonList(person -\u003e person.getPriority().value.equals(\"high\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"            return new CommandResult(MESSAGE_NO_CONTACTS_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"sindhurajain":31}},{"path":"src/main/java/seedu/address/logic/commands/FilterMedPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" * Finds and lists all persons in address book who are marked as medium priority.","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"public class FilterMedPriorityCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    public static final String COMMAND_WORD \u003d \"filter-med\";","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose \"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"            + \"priorities are medium and displays them as a list.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed contacts with medium priority\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_NO_CONTACTS_FOUND \u003d \"Oops! No contacts found with medium priority level.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        model.updateFilteredPersonList(person -\u003e person.getPriority().value.equals(\"med\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"            return new CommandResult(MESSAGE_NO_CONTACTS_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"sindhurajain":31}},{"path":"src/main/java/seedu/address/logic/commands/FindCompanyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" * Finds and lists all persons in address book whose company tag contains any of the argument keywords.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"public class FindCompanyCommand extends Command {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String COMMAND_WORD \u003d \"findco\";","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts with company tag containing \"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"            + \"Example: \" + COMMAND_WORD + \"TikTok\";","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String MESSAGE_FIND_COMPANY_SUCCESS \u003d \"Found %1$d %2$s with matching company tag(s).\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"    private final CompanyContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"    public FindCompanyCommand(CompanyContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"        int numContacts \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"        String contactOrContacts \u003d (numContacts \u003d\u003d 1) ? \"contact\" : \"contacts\";","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"        return new CommandResult(String.format(MESSAGE_FIND_COMPANY_SUCCESS, numContacts, contactOrContacts));","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        if (!(other instanceof FindCompanyCommand)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand otherFindCompanyCommand \u003d (FindCompanyCommand) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"        return predicate.equals(otherFindCompanyCommand.predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"                .toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yapxuanxuan":60}},{"path":"src/main/java/seedu/address/logic/commands/PriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":" * Changes the priority of an existing person in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"    public static final String COMMAND_WORD_MED \u003d \"pr/med\";","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    public static final String COMMAND_WORD_HIGH \u003d \"pr/high\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    public static final String COMMAND_WORD_NONE \u003d \"pr/none\";","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_NONE + \" or \" + COMMAND_WORD_MED + \" or \"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"            + COMMAND_WORD_HIGH + \": Sets the priority of the contact identified \"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"            + \"by the contact name to none, medium or high respectively.\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"            + \"Parameters: CONTACT_NAME\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"            + \"Example: \" + COMMAND_WORD_MED + \" John Doe\";","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Oops, %1$s\u0027s contact does not exist.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_EMPTY_NAME \u003d \"Oops, please state the name of the contact.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_ADD_PRIORITY_SUCCESS \u003d \"Added this contact with %1$s priority:\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"            + \"%2$s\\tName: %3$s | Phone: %4$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"    public static final String MESSAGE_DELETE_PRIORITY_SUCCESS \u003d \"Removed priority from this contact: \\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"            + \"\\tName: %1$s | Phone: %2$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    private final String name;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"    private final Priority priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a PriorityCommand.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"     * @param name Name of the person in the filtered person list to edit the priority.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"     * @param priority Priority of the person to be updated to.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"    public PriorityCommand(String name, Priority priority) {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"        requireAllNonNull(name, priority);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"            throw new CommandException(MESSAGE_EMPTY_NAME);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"        List\u003cPerson\u003e contactList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"        Person personToEdit \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"        for (Person person : contactList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"            if (person.getName().fullName.equalsIgnoreCase(name)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"                personToEdit \u003d person;","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"        if (personToEdit \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_NOT_FOUND, name));","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"FangRuoqing"},"content":"                personToEdit.getAddress(), personToEdit.getCompany(), priority,","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"FangRuoqing"},"content":"                personToEdit.isStarred(), personToEdit.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"sindhurajain"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"sindhurajain"},"content":"     * the priority is added to or removed from {@code personToEdit}.","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"sindhurajain"},"content":"     * @param personToEdit Person whose priority is edited.","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"sindhurajain"},"content":"     * @return A success message indicating the priority change.","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"sindhurajain"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"sindhurajain"},"content":"        if (priority.value.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"sindhurajain"},"content":"            return String.format(MESSAGE_DELETE_PRIORITY_SUCCESS,","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"                    personToEdit.getName(), personToEdit.getPhone());","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"sindhurajain"},"content":"        String priorityMessage \u003d priority.value.equals(\"high\") ? \"high\" : \"medium\";","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"sindhurajain"},"content":"        String formattingCharacter \u003d priority.value.equals(\"high\") ? \"**\" : \"*\";","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"sindhurajain"},"content":"        return String.format(MESSAGE_ADD_PRIORITY_SUCCESS, priorityMessage, formattingCharacter,","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"sindhurajain"},"content":"                personToEdit.getName(), personToEdit.getPhone());","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"sindhurajain"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"sindhurajain"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"sindhurajain"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"sindhurajain"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"sindhurajain"},"content":"        if (!(other instanceof PriorityCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"sindhurajain"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand e \u003d (PriorityCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"sindhurajain"},"content":"        return name.equals(e.name)","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"sindhurajain"},"content":"                \u0026\u0026 priority.equals(e.priority);","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"FangRuoqing":2,"sindhurajain":116}},{"path":"src/main/java/seedu/address/logic/commands/StarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FangRuoqing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"FangRuoqing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"FangRuoqing"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"FangRuoqing"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"FangRuoqing"},"content":" * Command to star a contact in Connectify.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"FangRuoqing"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"FangRuoqing"},"content":"public class StarCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"FangRuoqing"},"content":"    public static final String COMMAND_WORD \u003d \"star\";","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"FangRuoqing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Stars the contact in Connectify.\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"FangRuoqing"},"content":"            + \"Parameters: \u003ccontact_name\u003e\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"            + \"Example: \" + COMMAND_WORD + \" Alex Tan\";","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"FangRuoqing"},"content":"    private final String contactName;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"FangRuoqing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"FangRuoqing"},"content":"     * Constructs a {@code StarCommand} to star the specified contact.","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"FangRuoqing"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"     * @param contactName The name of the contact to be starred.","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"    public StarCommand(String contactName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"FangRuoqing"},"content":"        this.contactName \u003d contactName;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"FangRuoqing"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"FangRuoqing"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"FangRuoqing"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"FangRuoqing"},"content":"        // Find the person by name","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"FangRuoqing"},"content":"        List\u003cPerson\u003e personsFound \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"FangRuoqing"},"content":"        Person contactToStar \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"FangRuoqing"},"content":"        for (Person person : personsFound) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"FangRuoqing"},"content":"            if (person.getName().fullName.equalsIgnoreCase(contactName)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"FangRuoqing"},"content":"                contactToStar \u003d person;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"FangRuoqing"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"FangRuoqing"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"FangRuoqing"},"content":"        if (contactToStar \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"FangRuoqing"},"content":"            throw new CommandException(\"Error! Contact not found: \" + contactName);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"FangRuoqing"},"content":"        // Star the contact","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"FangRuoqing"},"content":"        contactToStar.starContact();","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"FangRuoqing"},"content":"        Person starredContact \u003d new Person(contactToStar.getName(), contactToStar.getPhone(),","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"FangRuoqing"},"content":"                contactToStar.getEmail(), contactToStar.getAddress(), contactToStar.getCompany(),","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"FangRuoqing"},"content":"                contactToStar.getPriority(), contactToStar.isStarred(), contactToStar.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"FangRuoqing"},"content":"        model.setPerson(contactToStar, starredContact);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"FangRuoqing"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"FangRuoqing"},"content":"        return new CommandResult(\"Nice! You have starred this contact:\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"FangRuoqing"},"content":"                + contactToStar.getName() + \" â˜…\");","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"FangRuoqing"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"FangRuoqing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"FangRuoqing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"FangRuoqing"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"FangRuoqing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"FangRuoqing"},"content":"        if (!(other instanceof StarCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"FangRuoqing"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"FangRuoqing"},"content":"        StarCommand e \u003d (StarCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"FangRuoqing"},"content":"        return contactName.equals(e.contactName);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"FangRuoqing"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"FangRuoqing"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"FangRuoqing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"FangRuoqing"},"content":"                .add(\"contactName\", this.contactName)","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"FangRuoqing"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"FangRuoqing"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"FangRuoqing":83}},{"path":"src/main/java/seedu/address/logic/commands/UnstarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FangRuoqing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"FangRuoqing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"FangRuoqing"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"FangRuoqing"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"FangRuoqing"},"content":" * Unstars a contact in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"FangRuoqing"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"FangRuoqing"},"content":"public class UnstarCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"FangRuoqing"},"content":"    public static final String COMMAND_WORD \u003d \"unstar\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"FangRuoqing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Unstars the contact in Connectify.\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"FangRuoqing"},"content":"            + \"Parameters: \u003ccontact_name\u003e\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"            + \"Example: \" + COMMAND_WORD + \" Alex Tan\";","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"FangRuoqing"},"content":"    private final String contactName;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"FangRuoqing"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"FangRuoqing"},"content":"     * Constructs a {@code UnstarCommand} to unstar the specified contact.","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"FangRuoqing"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"     * @param contactName The name of the contact to be unstarred.","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"    public UnstarCommand(String contactName) {","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"FangRuoqing"},"content":"        this.contactName \u003d contactName;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"FangRuoqing"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"FangRuoqing"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"FangRuoqing"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"FangRuoqing"},"content":"        // Find the person by name","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"FangRuoqing"},"content":"        List\u003cPerson\u003e personsFound \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"FangRuoqing"},"content":"        Person contactToUnstar \u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"FangRuoqing"},"content":"        for (Person person : personsFound) {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"FangRuoqing"},"content":"            if (person.getName().fullName.equalsIgnoreCase(contactName)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"FangRuoqing"},"content":"                contactToUnstar \u003d person;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"FangRuoqing"},"content":"                break;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"FangRuoqing"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"FangRuoqing"},"content":"        if (contactToUnstar \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"FangRuoqing"},"content":"            throw new CommandException(\"Error! Contact not found: \" + contactName);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"FangRuoqing"},"content":"        if (!contactToUnstar.isStarred()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"FangRuoqing"},"content":"            throw new CommandException(\"Error! Contact is not starred: \" + contactName);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"FangRuoqing"},"content":"        // Unstar the contact","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"FangRuoqing"},"content":"        contactToUnstar.unstarContact();","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"FangRuoqing"},"content":"        Person unstarredContact \u003d new Person(contactToUnstar.getName(), contactToUnstar.getPhone(),","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"FangRuoqing"},"content":"                contactToUnstar.getEmail(), contactToUnstar.getAddress(), contactToUnstar.getCompany(),","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"FangRuoqing"},"content":"                contactToUnstar.getPriority(), contactToUnstar.isStarred(), contactToUnstar.getTags());","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"FangRuoqing"},"content":"        model.setPerson(contactToUnstar, unstarredContact);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"FangRuoqing"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"FangRuoqing"},"content":"        return new CommandResult(String.format(\"Nice! You have unstarred this contact:\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"FangRuoqing"},"content":"                + contactToUnstar.getName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"FangRuoqing"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"FangRuoqing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"FangRuoqing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"FangRuoqing"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"FangRuoqing"},"content":"        if (!(other instanceof UnstarCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"FangRuoqing"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"FangRuoqing"},"content":"        UnstarCommand e \u003d (UnstarCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"FangRuoqing"},"content":"        return contactName.equals(e.contactName);","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"FangRuoqing"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"FangRuoqing"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"FangRuoqing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"FangRuoqing"},"content":"                .add(\"contactName\", this.contactName)","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"FangRuoqing"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"FangRuoqing"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"FangRuoqing":86}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE) // only check for required Name and Phone","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(\"\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        Company company \u003d new Company(\"\");","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"        Priority priority \u003d new Priority(\"\");","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"FangRuoqing"},"content":"        Person person \u003d new Person(name, phone, email, address, company, priority, false, tagList);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"FangRuoqing"},"content":"    static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tahnya":3,"yapxuanxuan":2,"FangRuoqing":2,"sindhurajain":2,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.CompanyCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.CountCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.FilterHighPriorityCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.FilterMedPriorityCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.FindCompanyCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.StarCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.UnstarCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"        case FilterHighPriorityCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"            return new FilterHighPriorityCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"        case FilterMedPriorityCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"            return new FilterMedPriorityCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"        case FindCompanyCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"            return new FindCompanyCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"        case CompanyCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"            return new CompanyCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"sindhurajain"},"content":"        case PriorityCommand.COMMAND_WORD_HIGH:","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"sindhurajain"},"content":"            return new PriorityCommandParser(\"high\").parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"sindhurajain"},"content":"        case PriorityCommand.COMMAND_WORD_MED:","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"sindhurajain"},"content":"            return new PriorityCommandParser(\"med\").parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"sindhurajain"},"content":"        case PriorityCommand.COMMAND_WORD_NONE:","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"sindhurajain"},"content":"            return new PriorityCommandParser(\"\").parse(arguments);","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"        case CountCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"            return new CountCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"FangRuoqing"},"content":"        case StarCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"FangRuoqing"},"content":"            return new StarCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"FangRuoqing"},"content":"        case UnstarCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"FangRuoqing"},"content":"            return new UnstarCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yapxuanxuan":15,"FangRuoqing":8,"sindhurajain":15,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yapxuanxuan":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/CompanyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.CompanyCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" * Parses input arguments and creates a new {@code CompanyCommand} object","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"public class CompanyCommandParser implements Parser\u003cCompanyCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"     * Parses the given {@code String} of arguments in the context of the CompanyCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"     * and returns a CompanyCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"    public CompanyCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_COMPANY);","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"        String contactName;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"        contactName \u003d argMultimap.getPreamble();","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"        String company \u003d argMultimap.getValue(PREFIX_COMPANY).orElse(\"\");","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        return new CompanyCommand(contactName, new Company(company));","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"yapxuanxuan":32}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"        return new DeleteCommand(trimmedArgs);","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sindhurajain":7,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/FindCompanyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.FindCompanyCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" * Parses input arguments and creates a new FindCompanyCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"public class FindCompanyCommandParser implements Parser\u003cFindCompanyCommand\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"    public FindCompanyCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCompanyCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"        return new FindCompanyCommand(new CompanyContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yapxuanxuan":33}},{"path":"src/main/java/seedu/address/logic/parser/PriorityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" * Parses input arguments and creates a new {@code PriorityCommand} object","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"public class PriorityCommandParser implements Parser\u003cPriorityCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    private final String priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"    public PriorityCommandParser(String priority) {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"     * Parses the given {@code String} of arguments in the context of the PriorityCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"     * and returns a PriorityCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    public PriorityCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, PriorityCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        return new PriorityCommand(trimmedArgs, new Priority(priority));","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"sindhurajain":32}},{"path":"src/main/java/seedu/address/logic/parser/StarCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FangRuoqing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"FangRuoqing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.StarCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"FangRuoqing"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"FangRuoqing"},"content":" * Parses input arguments and creates a new StarCommand object.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"FangRuoqing"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"FangRuoqing"},"content":"public class StarCommandParser implements Parser\u003cStarCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"FangRuoqing"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"FangRuoqing"},"content":"     * Parses the given {@code userInput} and returns a {@code StarCommand} object.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"FangRuoqing"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"FangRuoqing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"FangRuoqing"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"FangRuoqing"},"content":"    public StarCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"FangRuoqing"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"FangRuoqing"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"FangRuoqing"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"FangRuoqing"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"FangRuoqing"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, StarCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"        return new StarCommand(trimmedArgs);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"FangRuoqing"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"FangRuoqing":30}},{"path":"src/main/java/seedu/address/logic/parser/UnstarCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FangRuoqing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"FangRuoqing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.UnstarCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"FangRuoqing"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"FangRuoqing"},"content":" * Parses input arguments and creates a new UnstarCommand object.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"FangRuoqing"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"FangRuoqing"},"content":"public class UnstarCommandParser implements Parser\u003cUnstarCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"FangRuoqing"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"FangRuoqing"},"content":"     * Parses the given {@code String} of arguments in the context of the UnstarCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"FangRuoqing"},"content":"     * and returns a UnstarCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"FangRuoqing"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"FangRuoqing"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"FangRuoqing"},"content":"    public UnstarCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"FangRuoqing"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"FangRuoqing"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"FangRuoqing"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"FangRuoqing"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"FangRuoqing"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, UnstarCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"        return new UnstarCommand(trimmedArgs);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"FangRuoqing"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"FangRuoqing":30}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"        return test \u003d\u003d \"\" || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tahnya":1,"-":64}},{"path":"src/main/java/seedu/address/model/person/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":" * Represents a Person\u0027s company name in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"public class Company {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"    public final String value;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"     * Constructs a {@code Company}.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"     * @param companyName A valid name.","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    public Company(String companyName) {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"        value \u003d companyName;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"        return value;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"                || (other instanceof Company // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"                \u0026\u0026 value.equals(((Company) other).value)); // state check","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"yapxuanxuan":37,"sindhurajain":1}},{"path":"src/main/java/seedu/address/model/person/CompanyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" * Tests that a {@code Person}\u0027s {@code Company} matches any of the keywords given.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"public class CompanyContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"    public CompanyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsFullWordIgnoreCase(person.getCompany().value, keyword));","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"        if (!(other instanceof CompanyContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate otherCompanyContainsKeywordsPredicate \u003d (CompanyContainsKeywordsPredicate)","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"                other;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"        return keywords.equals(otherCompanyContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yapxuanxuan":45}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"        return test \u003d\u003d \"\" || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tahnya":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"    private final Company company;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    private final Priority priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"    private boolean starred;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"     * Name, phone, email, address, tags must be present and not null.","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"FangRuoqing"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"FangRuoqing"},"content":"                  Company company, Priority priority, Boolean starred, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"        this.company \u003d company;","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"FangRuoqing"},"content":"        this.starred \u003d starred;","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"    public Company getCompany() {","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"        return company;","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"    public Priority getPriority() {","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"        return priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"FangRuoqing"},"content":"    public void starContact() {","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"FangRuoqing"},"content":"        this.starred \u003d true;","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"FangRuoqing"},"content":"    public void unstarContact() {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"FangRuoqing"},"content":"        this.starred \u003d false;","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"FangRuoqing"},"content":"    public boolean isStarred() {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"FangRuoqing"},"content":"        return starred;","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"FangRuoqing"},"content":"        String starSymbol \u003d starred ? \" â˜…\" : \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"FangRuoqing"},"content":"                .add(\"name\", name + starSymbol)","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"yapxuanxuan"},"content":"                .add(\"company\", company)","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"sindhurajain"},"content":"                .add(\"priority\", priority)","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"FangRuoqing"},"content":"                .add(\"starred\", starred)","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yapxuanxuan":7,"FangRuoqing":20,"sindhurajain":7,"-":113}},{"path":"src/main/java/seedu/address/model/person/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":" * Represents a Person\u0027s priority level in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"public class Priority {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"    public final String value;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"     * @param priorityLevel A valid priority level, which can be \"high\", \"med\", or empty.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"     * @throws IllegalArgumentException if the priority level is not \"high\", \"med\", or empty.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    public Priority(String priorityLevel) {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"        requireNonNull(priorityLevel);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"        if (!priorityLevel.equals(\"high\") \u0026\u0026 !priorityLevel.equals(\"med\") \u0026\u0026 !priorityLevel.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"            throw new IllegalArgumentException(\"Priority level must be \u0027high\u0027, \u0027med\u0027, or empty\");","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"        value \u003d priorityLevel;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"        return value;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"                || (other instanceof Priority // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"                \u0026\u0026 value.equals(((Priority) other).value)); // state check","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"sindhurajain":42}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"    public static final Company EMPTY_COMPANY \u003d new Company(\"\");","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"    public static final Priority EMPTY_PRIORITY \u003d new Priority(\"\");","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"FangRuoqing"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_COMPANY, EMPTY_PRIORITY, false,","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"FangRuoqing"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_COMPANY, EMPTY_PRIORITY, false,","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"FangRuoqing"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_COMPANY, EMPTY_PRIORITY, false,","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"FangRuoqing"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_COMPANY, EMPTY_PRIORITY, false,","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"FangRuoqing"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_COMPANY, EMPTY_PRIORITY, false,","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"FangRuoqing"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_COMPANY, EMPTY_PRIORITY, false,","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yapxuanxuan":4,"FangRuoqing":6,"sindhurajain":2,"-":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"    private final String company;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    private final String priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"FangRuoqing"},"content":"    private Boolean starred;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"               @JsonProperty(\"company\") String company, @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"FangRuoqing"},"content":"                  @JsonProperty(\"starred\") Boolean starred, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"        this.company \u003d company;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"FangRuoqing"},"content":"        this.starred \u003d starred;","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"        company \u003d source.getCompany().value;","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"        priority \u003d source.getPriority().value;","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"FangRuoqing"},"content":"        starred \u003d source.isStarred();","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"yapxuanxuan"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"yapxuanxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName()));","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"yapxuanxuan"},"content":"        final Company modelCompany \u003d new Company(company);","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"sindhurajain"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"sindhurajain"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"sindhurajain"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"sindhurajain"},"content":"        final Priority modelPriority \u003d new Priority(priority);","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"FangRuoqing"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"FangRuoqing"},"content":"                          modelCompany, modelPriority, starred, modelTags);","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yapxuanxuan":9,"FangRuoqing":6,"sindhurajain":10,"-":106}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"    private Label company;","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"    private Circle priorityDot;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"FangRuoqing"},"content":"        if (person.isStarred()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"FangRuoqing"},"content":"            name.setText(person.getName().fullName + \" â˜…\");","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"FangRuoqing"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"        setCompany();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"        String priorityValue \u003d person.getPriority().value;","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"        if (\"high\".equals(priorityValue)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"            priorityDot.setFill(Color.RED);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"        } else if (\"med\".equals(priorityValue)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"            priorityDot.setFill(Color.ORANGE);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"            priorityDot.setVisible(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"    private void setCompany() {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"        if (!person.getCompany().value.equals(\"\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"            company.setText(person.getCompany().value);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"            company.setVisible(true);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"            company.setPrefHeight(0.0);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yapxuanxuan":13,"FangRuoqing":5,"sindhurajain":13,"-":59}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"    background-color: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"    -fx-base: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"    -fx-control-inner-background: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #C3F2CD;","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #CCF8D6;","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"    /**-fx-background-color: #424d5f;**/","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"tahnya"},"content":"    -fx-border-color: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":139,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":143,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"tahnya"},"content":"    -fx-border-color: #C0C2C0;","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"tahnya"},"content":"    /**-fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"tahnya"},"content":"    -fx-border-width: 1px;**/","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"tahnya"},"content":"    -fx-border-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":188,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #D9D9D9;","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"tahnya"},"content":"    /**-fx-background-color: derive(#1d1d1d, 50%);**/","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #D9D9D9;","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"tahnya"},"content":"    /**-fx-background-color: derive(#1d1d1d, 20%);**/","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":208,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"tahnya"},"content":"    /**-fx-background-color: #1d1d1d;**/","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"tahnya"},"content":"  -fx-text-fill: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"tahnya"},"content":"    /**-fx-background-color: #1d1d1d;**/","lastModifiedDate":"2024-03-21"},{"lineNumber":255,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"tahnya"},"content":"    /**-fx-background-color: #1d1d1d;**/","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"tahnya"},"content":"        /**-fx-background-color: #1d1d1d;**/","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":285,"author":{"gitId":"tahnya"},"content":"    /**-fx-background-color: derive(#1d1d1d, 25%);**/","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"tahnya"},"content":"    -fx-border-color: transparent transparent #69866F transparent;","lastModifiedDate":"2024-03-21"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"tahnya"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-03-21"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-21"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: transparent, #b9ecc4, transparent, #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: #69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":358,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-21"},{"lineNumber":359,"author":{"gitId":"tahnya"},"content":"    -fx-padding: 1 10 1 10;","lastModifiedDate":"2024-03-21"},{"lineNumber":360,"author":{"gitId":"tahnya"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-21"},{"lineNumber":361,"author":{"gitId":"tahnya"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-21"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"yapxuanxuan"},"content":".company {","lastModifiedDate":"2024-03-21"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-21"},{"lineNumber":366,"author":{"gitId":"yapxuanxuan"},"content":"    -fx-background-color: #FFF8B6;","lastModifiedDate":"2024-03-21"},{"lineNumber":367,"author":{"gitId":"yapxuanxuan"},"content":"    -fx-padding: 1 10 1 10;","lastModifiedDate":"2024-03-21"},{"lineNumber":368,"author":{"gitId":"yapxuanxuan"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-21"},{"lineNumber":369,"author":{"gitId":"yapxuanxuan"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-21"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-21"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"tahnya":59,"yapxuanxuan":5,"-":307}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"    -fx-background: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tahnya":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"    -fx-text-fill: 69866F;","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #D9D9D9;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #C0C2C0;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    -fx-background-color: #b9ecc4;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"tahnya":5,"-":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"         title\u003d\"Connectify\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"            \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"5\" left\u003d\"0\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tahnya":2,"-":58}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        \u003cCircle fx:id\u003d\"priorityDot\" radius\u003d\"5\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"          \u003cInsets bottom\u003d\"5\"/\u003e \u003c!-- Padding added between tags and company --\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"      \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"company\" text\u003d\"\\$company\" minHeight\u003d\"-Infinity\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yapxuanxuan":8,"sindhurajain":2,"-":33}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"    //---------------- Tests for containsFullWordIgnoreCase --------------------------------------","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"    /*","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"    public void containsFullWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsFullWordIgnoreCase(\"typical sentence\",","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"                null));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"    public void containsFullWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"                -\u003e StringUtil.containsFullWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"    public void containsFullWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"                -\u003e StringUtil.containsFullWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"    public void containsFullWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsFullWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"    /*","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"     *   - any word","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"     *   - empty string","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"     *   - one word","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"     *   - multiple words","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"     *   - last word in sentence","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"     *   - middle word in sentence","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"     *   - matches multiple words","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"    public void containsFullWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"        // Empty sentence","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(StringUtil.containsFullWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(StringUtil.containsFullWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"        // Matches a partial word only","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(StringUtil.containsFullWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(StringUtil.containsFullWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"yapxuanxuan"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(StringUtil.containsFullWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(StringUtil.containsFullWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(StringUtil.containsFullWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(StringUtil.containsFullWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(StringUtil.containsFullWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"yapxuanxuan"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(StringUtil.containsFullWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yapxuanxuan":78,"-":139}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.logic.commands.DeleteCommand.MESSAGE_PERSON_NOT_FOUND;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"        assertCommandException(deleteCommand, String.format(MESSAGE_PERSON_NOT_FOUND, \"9\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sindhurajain":2,"-":173}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String VALID_COMPANY_AMY \u003d \"TikTok\";","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String VALID_COMPANY_BOB \u003d \"Google\";","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"    public static final String VALID_PRIORITY_AMY \u003d \"high\";","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"    public static final String VALID_PRIORITY_BOB \u003d \"med\";","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yapxuanxuan":2,"sindhurajain":2,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/CompanyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"public class CompanyCommandTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"    private static final String COMPANY_STUB \u003d \"Some company\";","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"    public void execute_addCompanyUnfilteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withCompany(COMPANY_STUB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyCommand companyCommand \u003d new CompanyCommand(editedPerson.getName().fullName,","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"                new Company(editedPerson.getCompany().value));","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"        String expectedMessage \u003d String.format(CompanyCommand.MESSAGE_ADD_COMPANY_SUCCESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"                editedPerson.getName().fullName, editedPerson.getCompany().value);","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        assertCommandSuccess(companyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"    public void execute_deleteCompanyUnfilteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withCompany(\"\").build();","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyCommand companyCommand \u003d new CompanyCommand(editedPerson.getName().fullName,","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"                new Company(editedPerson.getCompany().toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"        String expectedMessage \u003d String.format(CompanyCommand.MESSAGE_DELETE_COMPANY_SUCCESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"                editedPerson.getName().fullName);","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"        assertCommandSuccess(companyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"                .withCompany(COMPANY_STUB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyCommand companyCommand \u003d new CompanyCommand(editedPerson.getName().fullName,","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"                new Company(editedPerson.getCompany().value));","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"        String expectedMessage \u003d String.format(CompanyCommand.MESSAGE_ADD_COMPANY_SUCCESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"                editedPerson.getName().fullName, editedPerson.getCompany().value);","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"        assertCommandSuccess(companyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"    public void execute_invalidPersonName_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyCommand companyCommand \u003d new CompanyCommand(\"\",","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"                new Company(VALID_COMPANY_AMY));","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"        assertCommandFailure(companyCommand, model, CompanyCommand.MESSAGE_EMPTY_NAME);","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"    public void execute_invalidPerson_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyCommand companyCommand \u003d new CompanyCommand(\"ABC\",","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"                new Company(VALID_COMPANY_AMY));","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"        assertCommandFailure(companyCommand, model, String.format(CompanyCommand.MESSAGE_PERSON_NOT_FOUND, \"ABC\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"        final CompanyCommand standardCommand \u003d new CompanyCommand(\"Amy Reale\",","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"                new Company(VALID_COMPANY_AMY));","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyCommand commandWithSameValues \u003d new CompanyCommand(\"Amy Reale\",","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"                new Company(VALID_COMPANY_AMY));","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"        // different company tag -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(standardCommand.equals(new CompanyCommand(\"Bob Tan\",","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"yapxuanxuan"},"content":"                new Company(VALID_COMPANY_BOB))));","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"yapxuanxuan":116}},{"path":"src/test/java/seedu/address/logic/commands/CountCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"public class CountCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    private Model model;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    public void execute_listIsNotEmpty_showsCount() {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        assertCommandSuccess(new CountCommand(), model, String.format(CountCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"                model.getFilteredPersonList().size()), expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"yapxuanxuan":33}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    public void execute_validNameUnfilteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        Person personToDelete \u003d ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getName().fullName);","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete.getName());","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"Nonexistent Person\");","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"                String.format(DeleteCommand.MESSAGE_PERSON_NOT_FOUND, \"Nonexistent Person\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    public void execute_validNameFilteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getName().fullName);","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"                personToDelete.getName());","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"Nonexistent Person\");","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"                String.format(DeleteCommand.MESSAGE_PERSON_NOT_FOUND, \"Nonexistent Person\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(ALICE.getName().fullName);","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(BOB.getName().fullName);","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(ALICE.getName().fullName);","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"sindhurajain"},"content":"        String targetName \u003d \"Test Person\";","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetName);","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"sindhurajain"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetName\u003d\" + targetName + \"}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sindhurajain":21,"-":93}},{"path":"src/test/java/seedu/address/logic/commands/FilterHighPriorityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"public class FilterHighPriorityCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    public void execute_filterHighPriority_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getPriority().value.equals(\"high\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"                FilterHighPriorityCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        assertCommandSuccess(new FilterHighPriorityCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"    public void execute_filterHighPriority_noContactsFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"        model.deletePerson(ALICE);","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"        model.deletePerson(CARL);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        model.deletePerson(ELLE);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"        model.deletePerson(FIONA);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"        model.deletePerson(GEORGE);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getPriority().value.equals(\"high\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"                FilterHighPriorityCommand.MESSAGE_NO_CONTACTS_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"        assertCommandSuccess(new FilterHighPriorityCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(Arrays.asList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"sindhurajain":48}},{"path":"src/test/java/seedu/address/logic/commands/FilterMedPriorityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"public class FilterMedPriorityCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"    public void execute_filterMedPriority_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getPriority().value.equals(\"med\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"                FilterMedPriorityCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        assertCommandSuccess(new FilterMedPriorityCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"    public void execute_filterMedPriority_noContactsFound() {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"        model.deletePerson(BENSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"        model.deletePerson(DANIEL);","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getPriority().value.equals(\"med\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"                FilterMedPriorityCommand.MESSAGE_NO_CONTACTS_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"        assertCommandSuccess(new FilterMedPriorityCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(Arrays.asList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"sindhurajain":40}},{"path":"src/test/java/seedu/address/logic/commands/FindCompanyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCompanyCommand}.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"public class FindCompanyCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"                new CompanyContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"                new CompanyContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand findFirstCommand \u003d new FindCompanyCommand(firstPredicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand findSecondCommand \u003d new FindCompanyCommand(secondPredicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand findFirstCommandCopy \u003d new FindCompanyCommand(firstPredicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"        String expectedMessage \u003d String.format(FindCompanyCommand.MESSAGE_FIND_COMPANY_SUCCESS, 0, \"contacts\");","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand command \u003d new FindCompanyCommand(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"        String expectedMessage \u003d String.format(FindCompanyCommand.MESSAGE_FIND_COMPANY_SUCCESS, 2, \"contacts\");","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d preparePredicate(\"TikTok Google\");","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand command \u003d new FindCompanyCommand(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand findCommand \u003d new FindCompanyCommand(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"        String expected \u003d FindCompanyCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"     * Parses {@code userInput} into a {@code CompanyContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"    private CompanyContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"        return new CompanyContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yapxuanxuan":89}},{"path":"src/test/java/seedu/address/logic/commands/PriorityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sindhurajain"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"sindhurajain"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"sindhurajain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"sindhurajain"},"content":" * {@code PriorityCommand}.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"sindhurajain"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"sindhurajain"},"content":"public class PriorityCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    public void execute_addHighPriorityUnfilteredList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"sindhurajain"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withPriority(\"high\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand priorityCommand \u003d new PriorityCommand(editedPerson.getName().fullName,","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"sindhurajain"},"content":"                new Priority(editedPerson.getPriority().value));","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"sindhurajain"},"content":"        String expectedMessage \u003d String.format(PriorityCommand.MESSAGE_ADD_PRIORITY_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"sindhurajain"},"content":"                \"high\", \"**\", editedPerson.getName().fullName, editedPerson.getPhone());","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"sindhurajain"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"sindhurajain"},"content":"        assertCommandSuccess(priorityCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"sindhurajain"},"content":"    public void execute_addMedPriorityUnfilteredList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"sindhurajain"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"sindhurajain"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"sindhurajain"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withPriority(\"med\").build();","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand priorityCommand \u003d new PriorityCommand(editedPerson.getName().fullName,","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"                new Priority(editedPerson.getPriority().value));","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"        String expectedMessage \u003d String.format(PriorityCommand.MESSAGE_ADD_PRIORITY_SUCCESS,","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"                \"medium\", \"*\", editedPerson.getName().fullName, editedPerson.getPhone());","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"sindhurajain"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"sindhurajain"},"content":"        assertCommandSuccess(priorityCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"sindhurajain"},"content":"    public void execute_deletePriorityUnfilteredList_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"sindhurajain"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"sindhurajain"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withPriority(\"\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand priorityCommand \u003d new PriorityCommand(firstPerson.getName().fullName,","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"sindhurajain"},"content":"                new Priority(\"\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"sindhurajain"},"content":"        String expectedMessage \u003d String.format(PriorityCommand.MESSAGE_DELETE_PRIORITY_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"sindhurajain"},"content":"                firstPerson.getName().fullName, firstPerson.getPhone());","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"sindhurajain"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"sindhurajain"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"sindhurajain"},"content":"        assertCommandSuccess(priorityCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"sindhurajain"},"content":"    public void execute_invalidPersonName_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand priorityCommand \u003d new PriorityCommand(\"\",","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"sindhurajain"},"content":"                new Priority(VALID_PRIORITY_AMY));","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"sindhurajain"},"content":"        assertCommandFailure(priorityCommand, model, PriorityCommand.MESSAGE_EMPTY_NAME);","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"sindhurajain"},"content":"    public void execute_invalidPerson_throwsCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand priorityCommand \u003d new PriorityCommand(\"ABC\",","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"sindhurajain"},"content":"                new Priority(\"high\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"sindhurajain"},"content":"        assertCommandFailure(priorityCommand, model, String.format(PriorityCommand.MESSAGE_PERSON_NOT_FOUND, \"ABC\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"sindhurajain"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"sindhurajain"},"content":"        final PriorityCommand standardCommand \u003d new PriorityCommand(\"Amy Reale\",","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"sindhurajain"},"content":"                new Priority(VALID_PRIORITY_AMY));","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"sindhurajain"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand commandWithSameValues \u003d new PriorityCommand(\"Amy Reale\",","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"sindhurajain"},"content":"                new Priority(VALID_PRIORITY_AMY));","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"sindhurajain"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"sindhurajain"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"sindhurajain"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"sindhurajain"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"sindhurajain"},"content":"        assertFalse(standardCommand.equals(new PriorityCommand(\"Bob Tan\",","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"sindhurajain"},"content":"                new Priority(VALID_PRIORITY_BOB))));","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"sindhurajain"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"sindhurajain":116}},{"path":"src/test/java/seedu/address/logic/commands/StarCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FangRuoqing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"FangRuoqing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"FangRuoqing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"FangRuoqing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"FangRuoqing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"FangRuoqing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"FangRuoqing"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"FangRuoqing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"FangRuoqing"},"content":"public class StarCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"FangRuoqing"},"content":"    private static final String CONTACT_STUB \u003d \"Alex Yeoh\";","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"FangRuoqing"},"content":"    private Model model \u003d new ModelManager(SampleDataUtil.getSampleAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"    public void execute_contactNotFound_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"FangRuoqing"},"content":"        StarCommand starCommand \u003d new StarCommand(\"Nonexistent Contact\");","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"FangRuoqing"},"content":"        assertCommandFailure(starCommand, model, \"Error! Contact not found: Nonexistent Contact\");","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"FangRuoqing"},"content":"    public void execute_contactFoundAndStarred_successful() {","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"FangRuoqing"},"content":"        StarCommand starCommand \u003d new StarCommand(CONTACT_STUB);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"FangRuoqing"},"content":"        ReadOnlyAddressBook initialAddressBook \u003d model.getAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"FangRuoqing"},"content":"        List\u003cPerson\u003e initialPersonList \u003d initialAddressBook.getPersonList();","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"FangRuoqing"},"content":"        Person contactToStar \u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"FangRuoqing"},"content":"        for (Person person : initialPersonList) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"FangRuoqing"},"content":"            if (person.getName().fullName.equalsIgnoreCase(CONTACT_STUB)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"FangRuoqing"},"content":"                contactToStar \u003d person;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"FangRuoqing"},"content":"                break;","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"FangRuoqing"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"FangRuoqing"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"FangRuoqing"},"content":"        assertTrue(contactToStar !\u003d null); // Assert that the contact is found initially","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"FangRuoqing"},"content":"        String expectedMessage \u003d \"Nice! You have starred this contact:\\n\" + contactToStar.getName() + \" â˜…\";","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"FangRuoqing"},"content":"        Person expectedStarredContact \u003d new Person(contactToStar.getName(), contactToStar.getPhone(),","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"FangRuoqing"},"content":"                contactToStar.getEmail(), contactToStar.getAddress(), contactToStar.getCompany(),","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"FangRuoqing"},"content":"                contactToStar.getPriority(), true, contactToStar.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"FangRuoqing"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"FangRuoqing"},"content":"        expectedModel.setPerson(contactToStar, expectedStarredContact);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"FangRuoqing"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"FangRuoqing"},"content":"        assertCommandSuccess(starCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"FangRuoqing"},"content":"    public void execute_validContactName_starsContact() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"FangRuoqing"},"content":"        // Arrange","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"FangRuoqing"},"content":"        String contactName \u003d \"Alex Tan\";","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"FangRuoqing"},"content":"        Person personToStar \u003d new PersonBuilder().withName(contactName).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"FangRuoqing"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"FangRuoqing"},"content":"        model.addPerson(personToStar);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"FangRuoqing"},"content":"        StarCommand starCommand \u003d new StarCommand(contactName);","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"FangRuoqing"},"content":"        // Act","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"FangRuoqing"},"content":"        CommandResult commandResult \u003d starCommand.execute(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"FangRuoqing"},"content":"        // Assert","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"FangRuoqing"},"content":"        Person starredPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(\"Nice! You have starred this contact:\\nAlex Tan â˜…\", commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(contactName, starredPerson.getName().fullName);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(true, starredPerson.isStarred());","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"FangRuoqing"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"FangRuoqing"},"content":"        StarCommand starCommand1 \u003d new StarCommand(\"Alex\");","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"FangRuoqing"},"content":"        StarCommand starCommand2 \u003d new StarCommand(\"Alex\");","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"FangRuoqing"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(starCommand1, starCommand1);","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"FangRuoqing"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(starCommand1, starCommand2);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"FangRuoqing"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"FangRuoqing"},"content":"        assertNotEquals(starCommand1, 1);","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"FangRuoqing"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"FangRuoqing"},"content":"        assertNotEquals(starCommand1, null);","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"FangRuoqing"},"content":"        // different contactName -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"FangRuoqing"},"content":"        StarCommand differentStarCommand \u003d new StarCommand(\"John\");","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"FangRuoqing"},"content":"        assertNotEquals(starCommand1, differentStarCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"FangRuoqing"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"FangRuoqing":101}},{"path":"src/test/java/seedu/address/logic/commands/UnstarCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FangRuoqing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"FangRuoqing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"FangRuoqing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"FangRuoqing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"FangRuoqing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"FangRuoqing"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"FangRuoqing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"FangRuoqing"},"content":"public class UnstarCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"FangRuoqing"},"content":"    public void execute_contactNotFound_throwsCommandException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"FangRuoqing"},"content":"        UnstarCommand unstarCommand \u003d new UnstarCommand(\"Nonexistent Contact\");","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"FangRuoqing"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"FangRuoqing"},"content":"        assertCommandFailure(unstarCommand, model, \"Error! Contact not found: Nonexistent Contact\");","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"    public void execute_unstarAlreadyUnstarredContact_throwsCommandException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"FangRuoqing"},"content":"        String contactName \u003d \"Alex Tan\";","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"FangRuoqing"},"content":"        Person personToUnstar \u003d new PersonBuilder().withName(contactName).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"FangRuoqing"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"FangRuoqing"},"content":"        model.addPerson(personToUnstar);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"FangRuoqing"},"content":"        UnstarCommand unstarCommand \u003d new UnstarCommand(contactName);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"FangRuoqing"},"content":"        model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"FangRuoqing"},"content":"        assertThrows(CommandException.class, () -\u003e unstarCommand.execute(model));","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"FangRuoqing"},"content":"    public void execute_validContactName_unstarsContact() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"FangRuoqing"},"content":"        // Arrange","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"FangRuoqing"},"content":"        String contactName \u003d \"Alex Tan\";","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"FangRuoqing"},"content":"        Person personToUnstar \u003d new PersonBuilder().withName(contactName).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"FangRuoqing"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"FangRuoqing"},"content":"        model.addPerson(personToUnstar);","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"FangRuoqing"},"content":"        StarCommand starCommand \u003d new StarCommand(contactName);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"FangRuoqing"},"content":"        UnstarCommand unstarCommand \u003d new UnstarCommand(contactName);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"FangRuoqing"},"content":"        // Act","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"FangRuoqing"},"content":"        starCommand.execute(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"FangRuoqing"},"content":"        CommandResult unstarCommandResult \u003d unstarCommand.execute(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"FangRuoqing"},"content":"        // Assert","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"FangRuoqing"},"content":"        Person unstarredPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(\"Nice! You have unstarred this contact:\\nAlex Tan\", unstarCommandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(contactName, unstarredPerson.getName().fullName);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(false, unstarredPerson.isStarred());","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"FangRuoqing"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"FangRuoqing"},"content":"        UnstarCommand unstarCommand1 \u003d new UnstarCommand(\"Alex\");","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"FangRuoqing"},"content":"        UnstarCommand unstarCommand2 \u003d new UnstarCommand(\"Alex\");","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"FangRuoqing"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(unstarCommand1, unstarCommand1);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"FangRuoqing"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(unstarCommand1, unstarCommand2);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"FangRuoqing"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"FangRuoqing"},"content":"        assertNotEquals(unstarCommand1, 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"FangRuoqing"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"FangRuoqing"},"content":"        assertNotEquals(unstarCommand1, null);","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"FangRuoqing"},"content":"        // different contactName -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"FangRuoqing"},"content":"        UnstarCommand differentUnstarCommand \u003d new UnstarCommand(\"John\");","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"FangRuoqing"},"content":"        assertNotEquals(unstarCommand1, differentUnstarCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"FangRuoqing"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"FangRuoqing":82}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"tahnya"},"content":"        // assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"tahnya"},"content":"        //        expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"tahnya"},"content":"        // assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"tahnya"},"content":"        // expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tahnya":4,"-":192}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.CountCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.logic.commands.FilterHighPriorityCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.logic.commands.FilterMedPriorityCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.FindCompanyCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.commands.StarCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"sindhurajain"},"content":"    public void parseCommand_delete() throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"        String testName \u003d ALICE.getName().toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"sindhurajain"},"content":"        String userInput \u003d DeleteCommand.COMMAND_WORD + \" \" + testName;","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"sindhurajain"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(testName, command.getTargetName());","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseCommand_findCompany() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand command \u003d (FindCompanyCommand) parser.parseCommand(","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"                FindCompanyCommand.COMMAND_WORD + \" \" + keywords.stream().collect(","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"                        Collectors.joining(\" \")));","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(new FindCompanyCommand(new CompanyContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseCommand_count() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(parser.parseCommand(CountCommand.COMMAND_WORD) instanceof CountCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(parser.parseCommand(CountCommand.COMMAND_WORD + \" 3\") instanceof CountCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"sindhurajain"},"content":"    public void parseCommand_priorityHigh() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"sindhurajain"},"content":"        String testName \u003d ALICE.getName().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"sindhurajain"},"content":"        String userInput \u003d PriorityCommand.COMMAND_WORD_HIGH + \" Alice Pauline\";","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand command \u003d (PriorityCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(new PriorityCommand(testName, new Priority(\"high\")), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"sindhurajain"},"content":"    public void parseCommand_priorityMed() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"sindhurajain"},"content":"        String testName \u003d ALICE.getName().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"sindhurajain"},"content":"        String userInput \u003d PriorityCommand.COMMAND_WORD_MED + \" Alice Pauline\";","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand command \u003d (PriorityCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(new PriorityCommand(testName, new Priority(\"med\")), command);","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"sindhurajain"},"content":"    public void parseCommand_priorityNone() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"sindhurajain"},"content":"        String testName \u003d ALICE.getName().toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"sindhurajain"},"content":"        String userInput \u003d PriorityCommand.COMMAND_WORD_NONE + \" Alice Pauline\";","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"sindhurajain"},"content":"        PriorityCommand command \u003d (PriorityCommand) parser.parseCommand(userInput);","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"sindhurajain"},"content":"        assertEquals(new PriorityCommand(testName, new Priority(\"\")), command);","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"sindhurajain"},"content":"    public void parseCommand_filterHighPriority() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(parser.parseCommand(FilterHighPriorityCommand.COMMAND_WORD) instanceof FilterHighPriorityCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"sindhurajain"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"sindhurajain"},"content":"    public void parseCommand_filterMedPriority() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"sindhurajain"},"content":"        assertTrue(parser.parseCommand(FilterMedPriorityCommand.COMMAND_WORD) instanceof FilterMedPriorityCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"FangRuoqing"},"content":"    public void parseCommand_validStarCommand_returnsStarCommand() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"FangRuoqing"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"FangRuoqing"},"content":"        String userInput \u003d \"star John Doe\";","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"FangRuoqing"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"FangRuoqing"},"content":"        assertEquals(StarCommand.class, command.getClass());","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"FangRuoqing"},"content":"    public void parseCommand_invalidCommand_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"FangRuoqing"},"content":"        AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"FangRuoqing"},"content":"        String userInput \u003d \"invalid command\";","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"FangRuoqing"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yapxuanxuan":18,"FangRuoqing":17,"sindhurajain":45,"-":97}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"sindhurajain"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"sindhurajain"},"content":"        assertParseSuccess(parser, \"Alice Pauline\", new DeleteCommand(ALICE.getName().toString()));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"sindhurajain"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"sindhurajain":3,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"yapxuanxuan":2,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/FindCompanyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.logic.commands.FindCompanyCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"public class FindCompanyCommandParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"    private FindCompanyCommandParser parser \u003d new FindCompanyCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"                FindCompanyCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"        FindCompanyCommand expectedFindCompanyCommand \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"                new FindCompanyCommand(new CompanyContainsKeywordsPredicate(Arrays.asList(\"Google\", \"Microsoft\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        assertParseSuccess(parser, \"Google Microsoft\", expectedFindCompanyCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"        assertParseSuccess(parser, \" \\n Google \\n \\t Microsoft  \\t\", expectedFindCompanyCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yapxuanxuan":35}},{"path":"src/test/java/seedu/address/logic/parser/StarCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FangRuoqing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"FangRuoqing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"FangRuoqing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"FangRuoqing"},"content":"public class StarCommandParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"FangRuoqing"},"content":"    private final StarCommandParser parser \u003d new StarCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"FangRuoqing"},"content":"    public void parse_emptyInput_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"FangRuoqing"},"content":"        // Arrange","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"FangRuoqing"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"        // Act and Assert","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"FangRuoqing"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"FangRuoqing"},"content":"    public void parse_nullInput_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"FangRuoqing"},"content":"        // Act and Assert","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"FangRuoqing":28}},{"path":"src/test/java/seedu/address/logic/parser/UnstarCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FangRuoqing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"FangRuoqing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"FangRuoqing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"FangRuoqing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"FangRuoqing"},"content":"public class UnstarCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"FangRuoqing"},"content":"    private final UnstarCommandParser parser \u003d new UnstarCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"FangRuoqing"},"content":"    public void parse_emptyInput_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"FangRuoqing"},"content":"        // Arrange","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"FangRuoqing"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"FangRuoqing"},"content":"        // Act and Assert","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"FangRuoqing"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"FangRuoqing"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"FangRuoqing"},"content":"    public void parse_nullInput_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"FangRuoqing"},"content":"        // Act and Assert","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"FangRuoqing"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"FangRuoqing":28}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"        String invalidAddress \u003d \"  \";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"        assertFalse(Address.isValidAddress(\"     \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"        assertTrue(Address.isValidAddress(\"\")); // empty address if not entered","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tahnya":3,"-":54}},{"path":"src/test/java/seedu/address/model/person/CompanyContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"public class CompanyContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"                new CompanyContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"                new CompanyContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"                new CompanyContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"        // One keyword","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"                Collections.singletonList(\"TikTok\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCompany(\"TikTok\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"        // Multiple keywords","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"OCBC\", \"Bank\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCompany(\"OCBC Bank\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"Microsoft\", \"Facebook\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCompany(\"Microsoft\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"        // Mixed-case keyword","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"gOOgle\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCompany(\"Google\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCompany(\"TikTok\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"Facebook\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCompany(\"Google\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"        predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCompany(\"TikTok\").withPhone(\"12345\")","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"        String expected \u003d CompanyContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"yapxuanxuan":89}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"        String invalidEmail \u003d \"email\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"        assertFalse(Email.isValidEmail(\"randomtext\")); // not email format","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"        assertTrue(Email.isValidEmail(\"\")); // empty email if not entered","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tahnya":3,"-":86}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", company\u003d\" + ALICE.getCompany()","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"FangRuoqing"},"content":"                + \", priority\u003d\" + ALICE.getPriority() + \", starred\u003d\" + ALICE.isStarred()","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"FangRuoqing"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yapxuanxuan":1,"FangRuoqing":2,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    private static final String VALID_GROUP \u003d BENSON.getCompany().toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"sindhurajain"},"content":"    private static final String VALID_PRIORITY \u003d BENSON.getPriority().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"FangRuoqing"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"FangRuoqing"},"content":"                                      VALID_GROUP, VALID_PRIORITY, false, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"FangRuoqing"},"content":"                                                 VALID_GROUP, VALID_PRIORITY, false, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"FangRuoqing"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"FangRuoqing"},"content":"                                      VALID_GROUP, VALID_PRIORITY, false, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"FangRuoqing"},"content":"                                                 VALID_GROUP, VALID_PRIORITY, false, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"FangRuoqing"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"FangRuoqing"},"content":"                                      VALID_GROUP, VALID_PRIORITY, false, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"FangRuoqing"},"content":"                                                 VALID_GROUP, VALID_PRIORITY, false, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"FangRuoqing"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"FangRuoqing"},"content":"                                      VALID_GROUP, VALID_PRIORITY, false, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"FangRuoqing"},"content":"                                                         VALID_GROUP, VALID_PRIORITY, false, VALID_TAGS);","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"FangRuoqing"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"FangRuoqing"},"content":"                                      VALID_GROUP, VALID_PRIORITY, false, invalidTags);","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yapxuanxuan":5,"FangRuoqing":14,"sindhurajain":2,"-":99}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"sindhurajain"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    public static final String DEFAULT_COMPANY \u003d \"\";","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"sindhurajain"},"content":"    public static final String DEFAULT_PRIORITY \u003d \"high\";","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"FangRuoqing"},"content":"    public static final Boolean DEFAULT_STAR \u003d false;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"    private Company company;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"sindhurajain"},"content":"    private Priority priority;","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"FangRuoqing"},"content":"    private Boolean starred;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"sindhurajain"},"content":"        priority \u003d new Priority(DEFAULT_PRIORITY);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"FangRuoqing"},"content":"        starred \u003d DEFAULT_STAR;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"        company \u003d personToCopy.getCompany();","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"sindhurajain"},"content":"        priority \u003d personToCopy.getPriority();","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"FangRuoqing"},"content":"        starred \u003d personToCopy.isStarred();","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"     * Sets the {@code Company} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"    public PersonBuilder withCompany(String company) {","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"FangRuoqing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"FangRuoqing"},"content":"     * Sets the {@code Star} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"FangRuoqing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"FangRuoqing"},"content":"    public PersonBuilder withStar(Boolean starred) {","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"FangRuoqing"},"content":"        this.starred \u003d starred;","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"FangRuoqing"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"FangRuoqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"FangRuoqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"sindhurajain"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"sindhurajain"},"content":"     * Sets the {@code Priority} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"sindhurajain"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"sindhurajain"},"content":"    public PersonBuilder withPriority(String priority) {","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"sindhurajain"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"sindhurajain"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"sindhurajain"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"sindhurajain"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":131,"author":{"gitId":"FangRuoqing"},"content":"        return new Person(name, phone, email, address, company, priority, starred, tags);","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"yapxuanxuan":13,"FangRuoqing":13,"sindhurajain":13,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"FangRuoqing"},"content":"            .withPhone(\"94351253\").withCompany(\"TikTok\").withPriority(\"high\").withStar(false)","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"FangRuoqing"},"content":"            .withCompany(\"Google\").withPriority(\"med\").withStar(false)","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"FangRuoqing"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withStar(false).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"sindhurajain"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"FangRuoqing"},"content":"            .withPriority(\"med\").withStar(false).withTags(\"friends\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"FangRuoqing"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withStar(false).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"FangRuoqing"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withStar(false).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"FangRuoqing"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withStar(false).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"FangRuoqing"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withStar(false).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"FangRuoqing"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withStar(false).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"FangRuoqing"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withStar(false)","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"FangRuoqing"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"FangRuoqing"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withStar(false)","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"FangRuoqing"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"FangRuoqing":13,"sindhurajain":1,"-":66}}]
