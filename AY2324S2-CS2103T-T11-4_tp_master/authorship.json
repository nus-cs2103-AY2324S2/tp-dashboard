[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T11-4/tp/graph/badge.svg?token\u003dYS8FHD1IQM)](https://codecov.io/gh/AY2324S2-CS2103T-T11-4/tp)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"* **TrAcker** is a student software engineering project that aims to create an application to help Head Teaching","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"  Assistants (Head TAs) track the records of other Teaching Assistants (TAs) and students.","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"  * Add/delete contact details of TAs and students","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"  * Update contact details of TAs and students","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"  * Edit tags which reflect the attendance of students","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"yyccbb":8,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"run {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"    archiveBaseName \u003d \u0027TrAcker\u0027","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"kaitinghh"},"content":"    archiveClassifier \u003d \u0027v1.3\u0027","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yyccbb":1,"yongkotaro":4,"kaitinghh":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kaitinghh"},"content":"### Ho Kai Ting","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"\u003cimg src\u003d\"images/kaitinghh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"[[github](https://github.com/kaitinghh)]","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":"[[portfolio](team/kaitinghh.md)]","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"### Wang Xinrong","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"\u003cimg src\u003d\"images/wang-xinrong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"[[github](http://github.com/wang-xinrong)]","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"[[portfolio](team/wangxinrong.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"wongkj12"},"content":"### Wong Kai Jie","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"wongkj12"},"content":"\u003cimg src\u003d\"images/wongkj12.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"wongkj12"},"content":"[[github](http://github.com/wongkj12)] [[portfolio](team/wongkj12.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"### Yong Kotaro","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"\u003cimg src\u003d\"images/yongkotaro.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"[[github](http://github.com/yongkotaro)]","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"* Responsibilities: UI","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"### Yu Chenbo","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"\u003cimg src\u003d\"images/yyccbb.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"[[github](http://github.com/yyccbb)]","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"[[portfolio](team/yyccbb)]","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"* Responsibilities: Project Structure","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"yyccbb":5,"wongkj12":3,"kaitinghh":6,"wang-xinrong":9,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"yongkotaro"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"mark 1 /t Assignment1 /ts cg\")` API call as an example.","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"yongkotaro"},"content":"![Interactions Inside the Logic Component for the `mark 1 /t Assignment1 /ts cg` Command](images/MarkSequenceDiagram.png)","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"yongkotaro"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `MarkCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"yongkotaro"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `MarkCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"yongkotaro"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `MarkCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"wongkj12"},"content":"### Tagging system","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"wongkj12"},"content":"TrAcker helps users track assignment status, tutorial attendance and tutorial groups via the Tagging system.","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"wongkj12"},"content":"The class diagram below depicts how different types of Tags are implemented:","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"wongkj12"},"content":"\u003cimg src\u003d\"images/TaggingClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"wongkj12"},"content":"We use a `Set\u003cTag\u003e` to store the set of tags for each Student / TA, such that Tags are uniquely identified","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"wongkj12"},"content":"by their `tagName`. Note that TAs may only have `TutorialTag`.","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"yongkotaro"},"content":"### Available Command","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"yongkotaro"},"content":"TrAcker allows users to find available TAs for a specific tutorial group. The `AvailableCommandParser` parses the user\u0027s input and creates an `AvailableCommand` containing a `TutorialTagContainsGroupPredicate`. The `AvailableCommand` is then executed by `LogicManager` to update the `FilterPersonList` in the `Model`. This retrieves the list of available TAs for the specified tutorial group.","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"yongkotaro"},"content":"The workflow is shown below.","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"yongkotaro"},"content":"![AvailableActivityDiagram](images/AvailableActivityDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"kaitinghh"},"content":"* Head TA of CS2103T","lastModifiedDate":"2024-03-30"},{"lineNumber":276,"author":{"gitId":"kaitinghh"},"content":"* has a need to manage a significant number of contacts of students and other TAs","lastModifiedDate":"2024-03-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"kaitinghh"},"content":"**Value proposition**: manage students and TAs faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| Priority | As a …​                                      | I want to …​                                                                         | So that I can…​                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"kaitinghh"},"content":"|----------|----------------------------------------------|--------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":291,"author":{"gitId":"kaitinghh"},"content":"| `* * *`  | user                                         | mark students\u0027 attendance                                                            | view attendance records easily in the app.                                                  |","lastModifiedDate":"2024-03-07"},{"lineNumber":292,"author":{"gitId":"kaitinghh"},"content":"| `* * *`  | user                                         | add a contact entry                                                                  |                                                                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":293,"author":{"gitId":"kaitinghh"},"content":"| `* * *`  | user                                         | delete a contact entry                                                               |                                                                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":294,"author":{"gitId":"kaitinghh"},"content":"| `* * *`  | user                                         | add tags                                                                             |                                                                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":295,"author":{"gitId":"kaitinghh"},"content":"| `* * *`  | user                                         | delete tags                                                                          |                                                                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":296,"author":{"gitId":"kaitinghh"},"content":"| `* * *`  | user                                         | edit a contact entry                                                                 |                                                                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":297,"author":{"gitId":"kaitinghh"},"content":"| `* * *`  | user                                         | search for specific contacts                                                         | easily retrieve the contact info of a student/tutor if I need to contact them.              |","lastModifiedDate":"2024-03-07"},{"lineNumber":298,"author":{"gitId":"kaitinghh"},"content":"| `* * *`  | user                                         | have a basic GUI to interact with                                                    | use the app conveniently instead of in shell/terminal.                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":299,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | user with many students and tutors to manage | send group emails to students/tutors                                                 | save time on gathering email addresses.                                                     |","lastModifiedDate":"2024-03-07"},{"lineNumber":300,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | user                                         | organize students into classes                                                       | separate records for students from different classes.                                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":301,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | beginner user                                | access a user guide                                                                  | understand the functions of the app.                                                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":302,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | potential user exploring the app             | see the app populated with sample data                                               | get an idea of how the app is used.                                                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":303,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | user with many students and tutors to manage | filter contacts with relevant keywords or tags                                       | access records relevant to a specific keyword quickly.                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":304,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | novice user                                  | expect the commands to be common-sensical                                            | pick up the app at speed.                                                                   |","lastModifiedDate":"2024-03-07"},{"lineNumber":305,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | novice user                                  | expect warnings to be given to irreversible actions such as batch delete contacts    | will not lose my data out of unfamiliarity with the commands.                               |","lastModifiedDate":"2024-03-07"},{"lineNumber":306,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | frequent user                                | batch edit contacts                                                                  | make similar changes to a large number of contacts quickly.                                 |","lastModifiedDate":"2024-03-07"},{"lineNumber":307,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | user                                         | see which tutors are available                                                       | quickly allocate them for replacement tutoring.                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":308,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | novice user                                  | have a sleek and simple UI                                                           | use the app easily.                                                                         |","lastModifiedDate":"2024-03-07"},{"lineNumber":309,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | careless user                                | backup the last few edits                                                            | revert changes if necessary.                                                                |","lastModifiedDate":"2024-03-07"},{"lineNumber":310,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | user                                         | track students\u0027 assignment progress                                                  | follow up if necessary.                                                                     |","lastModifiedDate":"2024-03-07"},{"lineNumber":311,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | user                                         | edit tags                                                                            | easily customise existing tags for my use case.                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":312,"author":{"gitId":"kaitinghh"},"content":"| `* *`    | careless user                                | backup the last few edits                                                            | revert changes if necessary.                                                                |","lastModifiedDate":"2024-03-07"},{"lineNumber":313,"author":{"gitId":"kaitinghh"},"content":"| `*`      | expert user                                  | export data in .xlsx                                                                 | share records with other tutors.                                                            |","lastModifiedDate":"2024-03-07"},{"lineNumber":314,"author":{"gitId":"kaitinghh"},"content":"| `*`      | expert user                                  | create shortcuts for specific commands                                               | perform the usual tasks quickly.                                                            |","lastModifiedDate":"2024-03-07"},{"lineNumber":315,"author":{"gitId":"kaitinghh"},"content":"| `*`      | user with lots of data stored                | batch imports to have a timestamp                                                    | easily locate certain information based on import time, or batch delete them when obsolete. |","lastModifiedDate":"2024-03-07"},{"lineNumber":316,"author":{"gitId":"kaitinghh"},"content":"| `*`      | novice user                                  | accessible help page to remind me of command keywords                                | carry out tasks quickly even without remembering the command keywords.                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":317,"author":{"gitId":"kaitinghh"},"content":"| `*`      | user                                         | generate attendance reports of the students                                          | see who has been skipping classes.                                                          |","lastModifiedDate":"2024-03-07"},{"lineNumber":318,"author":{"gitId":"kaitinghh"},"content":"| `*`      | busy user                                    | receive reminders for upcoming classes                                               | keep track of my upcoming lessons.                                                          |","lastModifiedDate":"2024-03-07"},{"lineNumber":319,"author":{"gitId":"kaitinghh"},"content":"| `*`      | impatient user                               | use the app offline                                                                  | use the app even when the connection is poor.                                               |","lastModifiedDate":"2024-03-07"},{"lineNumber":320,"author":{"gitId":"kaitinghh"},"content":"| `*`      | user who is familiar with cli                | be able to access already executed commands                                          | execute them again when needed without having to type everything again.                     |","lastModifiedDate":"2024-03-07"},{"lineNumber":321,"author":{"gitId":"kaitinghh"},"content":"| `*`      | user who is familiar with cli                | see a list of suggested commands after having typed the initial letters of a keyword | quickly select a command to complete and it is less likely that I misspell a command.       |","lastModifiedDate":"2024-03-07"},{"lineNumber":322,"author":{"gitId":"kaitinghh"},"content":"| `*`      | beginner user                                | GUI to be simple and self-explanatory                                                | get familiar with the app easily.                                                           |","lastModifiedDate":"2024-03-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"wang-xinrong"},"content":"(For all use cases below, the **System** is the `TrAcker`, the **Actor** is the `user` and **persons** can be both a student and a TA unless specified otherwise)","lastModifiedDate":"2024-03-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"wang-xinrong"},"content":"2.  TrAcker shows a list of persons","lastModifiedDate":"2024-03-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"wang-xinrong"},"content":"    * 3a1. TrAcker shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"wang-xinrong"},"content":"**Use case: Add a person**","lastModifiedDate":"2024-03-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":353,"author":{"gitId":"wang-xinrong"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":354,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":355,"author":{"gitId":"wang-xinrong"},"content":"1. User requests to add a person with relevant entries such as name, phone number and email","lastModifiedDate":"2024-03-07"},{"lineNumber":356,"author":{"gitId":"wang-xinrong"},"content":"2. TrAcker adds the entry to its contact list","lastModifiedDate":"2024-03-07"},{"lineNumber":357,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":358,"author":{"gitId":"wang-xinrong"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":359,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":360,"author":{"gitId":"wang-xinrong"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":361,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":362,"author":{"gitId":"wang-xinrong"},"content":"* 1a. User inputs information in incorrect format","lastModifiedDate":"2024-03-07"},{"lineNumber":363,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":364,"author":{"gitId":"wang-xinrong"},"content":"    * 1a1. TrAcker shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":365,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":366,"author":{"gitId":"wang-xinrong"},"content":"      Use case resumes at step 1","lastModifiedDate":"2024-03-07"},{"lineNumber":367,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":368,"author":{"gitId":"wang-xinrong"},"content":"**Use case: Search a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":370,"author":{"gitId":"wang-xinrong"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":371,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":372,"author":{"gitId":"wang-xinrong"},"content":"1.  User requests to search a contact by keywords (for names)","lastModifiedDate":"2024-03-07"},{"lineNumber":373,"author":{"gitId":"wang-xinrong"},"content":"2.  TrAcker shows a list of contacts whose names match the keywords","lastModifiedDate":"2024-03-07"},{"lineNumber":374,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":375,"author":{"gitId":"wang-xinrong"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":376,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":377,"author":{"gitId":"wang-xinrong"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":378,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":379,"author":{"gitId":"wang-xinrong"},"content":"* 1a. No contacts have names including the specified keywords.","lastModifiedDate":"2024-03-07"},{"lineNumber":380,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":381,"author":{"gitId":"wang-xinrong"},"content":"    *1a1. TrAcker shows an empty list","lastModifiedDate":"2024-03-07"},{"lineNumber":382,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":383,"author":{"gitId":"wang-xinrong"},"content":"  Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":384,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":385,"author":{"gitId":"wang-xinrong"},"content":"**Use case: Edit a contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":386,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":387,"author":{"gitId":"wang-xinrong"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":388,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":389,"author":{"gitId":"wang-xinrong"},"content":"1.  User requests to edit a contact with new information","lastModifiedDate":"2024-03-07"},{"lineNumber":390,"author":{"gitId":"wang-xinrong"},"content":"2.  TrAcker updates the contact with specified new information","lastModifiedDate":"2024-03-07"},{"lineNumber":391,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":392,"author":{"gitId":"wang-xinrong"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":393,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":394,"author":{"gitId":"wang-xinrong"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":395,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":396,"author":{"gitId":"wang-xinrong"},"content":"* 1a. User inputs new information in incorrect format","lastModifiedDate":"2024-03-07"},{"lineNumber":397,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":398,"author":{"gitId":"wang-xinrong"},"content":"    * 1a1. TrAcker shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":399,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":400,"author":{"gitId":"wang-xinrong"},"content":"      Use case resumes at step 1","lastModifiedDate":"2024-03-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"wongkj12"},"content":"1.  **(Technical)** Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2024-03-07"},{"lineNumber":405,"author":{"gitId":"wongkj12"},"content":"2.  **(Quality)** A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-07"},{"lineNumber":406,"author":{"gitId":"wongkj12"},"content":"3.  **(Quality)** The user interface and commands should be intuitive and user-friendly, requiring minimal time to learn.","lastModifiedDate":"2024-03-07"},{"lineNumber":407,"author":{"gitId":"wongkj12"},"content":"4.  **(Quality)** The app should provide clear and informative error messages in case of invalid inputs or command failures.","lastModifiedDate":"2024-03-07"},{"lineNumber":408,"author":{"gitId":"wongkj12"},"content":"5.  **(Performance)** The app should respond to user actions within 0.5 seconds, ensuring smooth navigation and interaction.","lastModifiedDate":"2024-03-07"},{"lineNumber":409,"author":{"gitId":"wongkj12"},"content":"6.  **(Performance)** The app should be able to support at minimum a contacts list of 200 without affecting performance.","lastModifiedDate":"2024-03-07"},{"lineNumber":410,"author":{"gitId":"wongkj12"},"content":"7.  **(Performance)** The app should be able to run smoothly even on low-end hardware configurations.","lastModifiedDate":"2024-03-07"},{"lineNumber":411,"author":{"gitId":"wongkj12"},"content":"8.  **(Process)** The project is expected to adhere to a schedule that adds updates incrementally at least once every two weeks.","lastModifiedDate":"2024-03-07"},{"lineNumber":412,"author":{"gitId":"wongkj12"},"content":"9.  **(Project scope)** The product should be focused on the needs of our target user, head teaching assistants.","lastModifiedDate":"2024-03-07"},{"lineNumber":413,"author":{"gitId":"wongkj12"},"content":"10. **(Documentation)** Comprehensive user guide should be provided, with detailed instructions on how to use each command.","lastModifiedDate":"2024-03-07"},{"lineNumber":414,"author":{"gitId":"wongkj12"},"content":"11. **(Documentation)** Comprehensive developer guide should be created to facilitate ongoing maintenance of the app.","lastModifiedDate":"2024-03-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":419,"author":{"gitId":"yongkotaro"},"content":"* **Tutor**: A teaching assistant for CS2103T","lastModifiedDate":"2024-03-07"},{"lineNumber":420,"author":{"gitId":"yongkotaro"},"content":"* **Student**: A student taking CS2103T","lastModifiedDate":"2024-03-07"},{"lineNumber":421,"author":{"gitId":"yongkotaro"},"content":"* **Tag**: A label that can be attached to the student. It is used to mark the attendance for a specific week.","lastModifiedDate":"2024-03-07"},{"lineNumber":422,"author":{"gitId":"yongkotaro"},"content":"* **Attendance Status**: The current state of a student\u0027s attendance.","lastModifiedDate":"2024-03-07"},{"lineNumber":423,"author":{"gitId":"yongkotaro"},"content":"* **Contact Entry**: Contact information of either a student or a tutor, containing the name, phone number, email. For students, they also have an attendance status.","lastModifiedDate":"2024-03-12"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yongkotaro":17,"wongkj12":21,"kaitinghh":36,"wang-xinrong":51,"-":351}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wongkj12"},"content":"**TrAcker** is a handy contact management app built for CS Head Teaching Assistants (TAs) in NUS.","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wongkj12"},"content":"Optimized for use via a command line interface, you can manage student assignments, attendance,","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wongkj12"},"content":"tutor availability and much more with just a few keystrokes!","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"wongkj12"},"content":"2. Download the latest `TrAcker.jar` from [here](https://github.com/AY2324S2-CS2103T-T11-4/tp/releases).","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wongkj12"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your **TrAcker** app.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"wongkj12"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar TrAcker.jar` ","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"   command to ","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"   run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"wongkj12"},"content":"   The GUI with some sample data should appear in a few seconds: \u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"wongkj12"},"content":"5. Type the command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"wongkj12"},"content":"   * `add stu /n John Doe /i A0123456Y /p 91234567 /e johndoe@example.com` : Adds the Student `John Doe` to your contact list.","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wongkj12"},"content":"   ","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"wongkj12"},"content":"   * `add ta /n Jane Smith /i A0654321Y /p 97654321 /e janesmith@example.com` : Adds the TA `Jane Smith` to your contact list.","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"6. If a command is not recognized, a message containing the correct usage of the command will be shown.","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"wongkj12"},"content":"## Basic Features","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"wongkj12"},"content":"  e.g. in `add stu /n NAME`, `NAME` is a parameter which can be used as `add stu /n John Doe`.","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"* Items with `...` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"  e.g. `[/t TAG...]` can be used as `/t friend` or `/t friend colleague` etc.","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"yongkotaro"},"content":"  e.g. `/n NAME [/p PHONE]` can be used as `/n John Doe /p 91234567` or as `/n John Doe`.","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"* Vertical bar (pipe) is used to denote alternatives.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"* Pipe symbol and square brackets `[|]` separate alternative optional items.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"  e.g. in `add [stu | ta] /n NAME`, `stu` and `ta` are alternatives, and at most one of them should be used.","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"wongkj12"},"content":"  e.g. if the command specifies `/n NAME /i ID`, `/i ID /n NAME` is also acceptable.","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"wongkj12"},"content":"### Adding a Student or TA: `add stu`, `add ta`","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"kaitinghh"},"content":"Adds a Student/TA to the address book.","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"wongkj12"},"content":"Format:","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"wongkj12"},"content":"* To add a Student,\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"  `add [stu] /n NAME /i ID /p PHONE /e EMAIL`","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"wongkj12"},"content":"* To add a TA,\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"  `add ta /n NAME /i ID /p PHONE /e EMAIL`","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"wongkj12"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"wongkj12"},"content":":bulb: **Notes:**\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"kaitinghh"},"content":"* Every person is saved either as a Student or TA. If the type of the person is not specified, the person will be","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"  saved as a Student by default.","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"wongkj12"},"content":"* Each person\u0027s ID is unique, so you cannot add 2 people with the same ID.","lastModifiedDate":"2024-04-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"wongkj12"},"content":"* `add stu /n Alex Yeoh /i A0777777L /p 87438807 /e alexyeoh@example.com`","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"* `add ta /n Charlotte Oliveiro /i A2222222P /p 93210283 /e charlotte@example.com`","lastModifiedDate":"2024-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"Shows a list of all persons in TrAcker.","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"wongkj12"},"content":"Format: `edit INDEX [/n NAME] [/p PHONE] [/e EMAIL]`","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-05"},{"lineNumber":116,"author":{"gitId":"yyccbb"},"content":"  The index **must be a positive integer** 1, 2, 3, ...​","lastModifiedDate":"2024-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"yyccbb"},"content":"* A person\u0027s `type` (`stu` or `ta`) and `ID` cannot be edited.","lastModifiedDate":"2024-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"*  `edit 1 /p 91234567 /e johndoe@example.com` Edits the phone number and email address of the 1st person to be ","lastModifiedDate":"2024-04-05"},{"lineNumber":123,"author":{"gitId":"yyccbb"},"content":"   `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-04-05"},{"lineNumber":124,"author":{"gitId":"wongkj12"},"content":"*  `edit 2 /n Betsy Crower` Edits the name of the 2nd person to be `Betsy Crower`.","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"yongkotaro"},"content":"### Locating persons: `find`","lastModifiedDate":"2024-04-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"wongkj12"},"content":"Filters all persons whose contact details contain each of the specified keywords ","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"wongkj12"},"content":"under the specified flag and displays them as a list with index numbers.","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"yyccbb"},"content":"Format: `find [stu | ta] [/n NAME] [/i ID] [/p PHONE] [/e EMAIL] [/t TAGS...]`","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"yyccbb"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-05"},{"lineNumber":134,"author":{"gitId":"yongkotaro"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"wongkj12"},"content":"* The order of the keywords under each flag does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"yongkotaro"},"content":"* Subwords will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2024-04-11"},{"lineNumber":137,"author":{"gitId":"yongkotaro"},"content":"* For Tags:","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"yyccbb"},"content":"    * For tutorial tags, subword matching is performed","lastModifiedDate":"2024-04-05"},{"lineNumber":139,"author":{"gitId":"yongkotaro"},"content":"    * For other tags, it performs full word matching","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"yongkotaro"},"content":"    * The search filters for persons meeting ANY criteria, (i.e. `OR` search).","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"yongkotaro"},"content":"   ","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"yongkotaro"},"content":"    e.g. `find /t wed assignment1` will find all persons with the tutorial tag where `wed` is a subword or have tag `assignment1`","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"wongkj12"},"content":"* The search filters for persons meeting ALL criteria, (i.e. `AND` search).","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"wongkj12"},"content":"  e.g. `find stu /n John` will find all Students whose names contain `John`.","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"yongkotaro"},"content":"* `find /n John` returns `john` and `John Doe`","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"wongkj12"},"content":"* `find ta` returns all TAs","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"wongkj12"},"content":"  ![result for \u0027find ta\u0027](images/findTaResult.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"yyccbb"},"content":"### Deleting persons : `delete`","lastModifiedDate":"2024-04-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"yyccbb"},"content":"Deletes the person(s) specified by their indices from the displayed person list. A popup will appear to confirm the ","lastModifiedDate":"2024-04-05"},{"lineNumber":157,"author":{"gitId":"yyccbb"},"content":"deletion.","lastModifiedDate":"2024-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"yyccbb"},"content":"Format: `delete (all | INDEX [OTHER_INDICES...])`","lastModifiedDate":"2024-04-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"yyccbb"},"content":"* Deletes the person(s) at the specified `INDEX`s.","lastModifiedDate":"2024-04-05"},{"lineNumber":162,"author":{"gitId":"wang-xinrong"},"content":"* If `all` is used, all persons in the displayed list are deleted. The displayed list might be the same as the full","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"wang-xinrong"},"content":"list. For example, if the `delete all` command is used after a `find NAME` command, all contacts found by","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"wang-xinrong"},"content":"the `find NAME` command would be deleted but not those excluded from the displayed list.","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"wongkj12"},"content":"TrAcker data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":190,"author":{"gitId":"wongkj12"},"content":"TrAcker data is saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"wongkj12"},"content":"If your changes to the data file makes its format invalid, TrAcker will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":194,"author":{"gitId":"wongkj12"},"content":"Furthermore, certain edits can cause the TrAcker  to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":197,"author":{"gitId":"wongkj12"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"wongkj12"},"content":"## Tagging","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"yyccbb"},"content":"With TrAcker tags, you can track assignment status, tutorial attendance and tutorial groups students are attending.","lastModifiedDate":"2024-04-05"},{"lineNumber":202,"author":{"gitId":"yyccbb"},"content":"For TAs, you can track their tutorial slots assigned and their availability for replacing other TAs in case ","lastModifiedDate":"2024-04-05"},{"lineNumber":203,"author":{"gitId":"yyccbb"},"content":"substitutions are needed.","lastModifiedDate":"2024-04-05"},{"lineNumber":204,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"wongkj12"},"content":"TrAcker allows use of three different types of tags : **Assignments, Attendance,** and **Tutorial** tags which can be attached to Students and TAs respectively.","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"wongkj12"},"content":"The different tag types along with their corresponding tag statuses are described below.","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"wongkj12"},"content":"### Tag Status","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"wongkj12"},"content":"| Tag type   | Status                                                                                                                                                                                                                                                                             |","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"wongkj12"},"content":"|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"wongkj12"},"content":"| Assignment | `cg` : \u003cmark style\u003d\"background-color: green\"\u003eCOMPLETE_GOOD\u003c/mark\u003e\u003cbr/\u003e`cb` : \u003cmark style\u003d\"background-color: orange\"\u003eCOMPLETE_BAD\u003c/mark\u003e\u003cbr/\u003e`ig` : \u003cmark style\u003d\"background-color: grey\"\u003eINCOMPLETE_GOOD\u003c/mark\u003e\u003cbr/\u003e`ib` : \u003cmark style\u003d\"background-color:red\"\u003eINCOMPLETE_BAD\u003c/mark\u003e |","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"wongkj12"},"content":"| Attendance | `p` : \u003cmark style\u003d\"background-color:  green\"\u003ePRESENT\u003c/mark\u003e\u003cbr/\u003e`a` : \u003cmark style\u003d\"background-color:red\"\u003eABSENT\u003c/mark\u003e\u003cbr/\u003e`awr` : \u003cmark style\u003d\"background-color:orange\"\u003eABSENT_WITH_REASON\u003c/mark\u003e                                                                                 |","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"wongkj12"},"content":"| Tutorial | `as` : \u003cmark style\u003d\"background-color: #3e7b91\"\u003eASSIGNED\u003c/mark\u003e\u003cbr/\u003e`av` : \u003cmark style\u003d\"background-color: white\"\u003eAVAILABLE\u003c/mark\u003e                                                                                                                                                   |","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"kaitinghh"},"content":"### Tag Name","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"kaitinghh"},"content":"Tag names have the following constraints:","lastModifiedDate":"2024-04-14"},{"lineNumber":218,"author":{"gitId":"kaitinghh"},"content":"- must be alphanumeric","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"kaitinghh"},"content":"- no whitespace between words in the tag","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"kaitinghh"},"content":"- all tag names must be unique.","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":222,"author":{"gitId":"kaitinghh"},"content":"Here are some recommended tag names for the various tag types.","lastModifiedDate":"2024-04-14"},{"lineNumber":223,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"kaitinghh"},"content":"| Tag type   | Examples of recommended tag names |","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"kaitinghh"},"content":"|------------|-----------------------------------|","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"kaitinghh"},"content":"| Assignment | `Assignment1` `v1.1Issues`        |","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"kaitinghh"},"content":"| Attendance | `Week1` `Week2`                   |","lastModifiedDate":"2024-04-14"},{"lineNumber":228,"author":{"gitId":"kaitinghh"},"content":"| Tutorial   | `TUE08` `WED10` `THU09`           |","lastModifiedDate":"2024-04-14"},{"lineNumber":229,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"wongkj12"},"content":"### Marking a tag : `mark`","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"wongkj12"},"content":"Updates the status of the specified tag with the specified status. If the","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"wongkj12"},"content":"tag specified does not exist, a new tag with the tag name and tag status will be","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"wongkj12"},"content":"created.","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"yyccbb"},"content":"Format: `mark ( all | INDEX [OTHER_INDICES...] ) /t TAG [OTHER_TAGS...] /ts TAG_STATUS`","lastModifiedDate":"2024-04-05"},{"lineNumber":238,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"wongkj12"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"wongkj12"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"yyccbb"},"content":"* When `all` is used, the command will apply to all persons in the displayed list.","lastModifiedDate":"2024-04-05"},{"lineNumber":242,"author":{"gitId":"yyccbb"},"content":"* When multiple `TAG`s are specified, the same `TAG_STATUS` will be applied to all the tags.","lastModifiedDate":"2024-04-05"},{"lineNumber":243,"author":{"gitId":"yyccbb"},"content":"* `TAG_STATUS` must be one of the [above specified values](#tag-status)","lastModifiedDate":"2024-04-05"},{"lineNumber":244,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"wongkj12"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"wang-xinrong"},"content":"* `mark 1 /t Assignment1 /ts cg` updates the `Assignment1` tag","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"wang-xinrong"},"content":"to \u003cmark style\u003d\"background-color: green\"\u003eCOMPLETE_GOOD\u003c/mark\u003e for the 1st person in the displayed list if they already","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"wang-xinrong"},"content":"have the tag. The `Assignment1` tag of \u003cmark style\u003d\"background-color: green\"\u003eCOMPLETE_GOOD\u003c/mark\u003e status would be added","lastModifiedDate":"2024-04-14"},{"lineNumber":249,"author":{"gitId":"wang-xinrong"},"content":"to the contact if they previously did not have the tag.","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"wang-xinrong"},"content":"* `mark 2 3 /t week1 week2 /ts awr` updates the `week1` and `week2` tags to","lastModifiedDate":"2024-04-14"},{"lineNumber":251,"author":{"gitId":"wang-xinrong"},"content":"\u003cmark style\u003d\"background-color: orange\"\u003eABSENT_WITH_REASON\u003c/mark\u003e for the 2nd and 3rd persons in the displayed list","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"wang-xinrong"},"content":"if they already have the tag. Both tags with specified status would be added to the two contacts if any of them","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"wang-xinrong"},"content":"previously did not have the tags.","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"wang-xinrong"},"content":"* `mark all /t TUE08 /ts as` updates the `TUE08` tag to \u003cmark style\u003d\"background-color: #3e7b91\"\u003eASSIGNED\u003c/mark\u003e to","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"wang-xinrong"},"content":"assign every person in the displayed list to the tutorial group TUE08 if they already have the tag. The `TUE08` tag","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"wang-xinrong"},"content":"with specified status would be added to any listed contact that previously did not have the tag.","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":258,"author":{"gitId":"wongkj12"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"yyccbb"},"content":"**:information_source: Note:** For **Tutorial** tags, the tutorial name must be that of a valid Tutorial tag in the ","lastModifiedDate":"2024-04-05"},{"lineNumber":261,"author":{"gitId":"yyccbb"},"content":"list of available tutorial sessions defined with the [tuttag](#adding-a-tutorial--tuttag-add) command.","lastModifiedDate":"2024-04-05"},{"lineNumber":262,"author":{"gitId":"wongkj12"},"content":"For example, in the third example above, `TUE08` should be added as a tutorial tag first using `tuttag add /t TUE08`.","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"wongkj12"},"content":"### Adding a Tutorial: `tuttag add`","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"wongkj12"},"content":"Creates a Tutorial tag to be used with the specified tag name.","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"wongkj12"},"content":"Format: `tuttag add /t TAG`","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"wongkj12"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"wongkj12"},"content":"* `tuttag add /t TUE08` adds TUE08 as a valid Tutorial tag.","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"wongkj12"},"content":"### Deleting a Tutorial: `tuttag del`","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"wongkj12"},"content":"Deletes the Tutorial tag corresponding to the specified tag name. If the specified tag does not exist, no change should happen.","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"wongkj12"},"content":"Warning: All persons with the specified Tutorial tag will also have the tag removed.","lastModifiedDate":"2024-04-09"},{"lineNumber":281,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":282,"author":{"gitId":"wongkj12"},"content":"Format: `tuttag del /t TAG`","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"wongkj12"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"wongkj12"},"content":"* `tuttag del /t WED09` deletes WED09 as a valid Tutorial tag, and removes the WED09 tag from all persons.","lastModifiedDate":"2024-04-09"},{"lineNumber":287,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"wang-xinrong"},"content":"### Listing All Tutorials: `tuttag list`","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":290,"author":{"gitId":"wang-xinrong"},"content":"Lists all Tutorial tags in TrAcker.","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"wang-xinrong"},"content":"Format: `tuttag list`","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"wongkj12"},"content":"### Removing a tag: `removetag`","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":296,"author":{"gitId":"wongkj12"},"content":"Removes an individual tag from a person. If the specified tag does not exist, no change should happen.","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"yongkotaro"},"content":"Format: `removetag (all | INDEX [OTHER_INDICES...]) /t TAG`","lastModifiedDate":"2024-04-11"},{"lineNumber":299,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":300,"author":{"gitId":"wongkj12"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"wongkj12"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"wongkj12"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":304,"author":{"gitId":"wongkj12"},"content":"* `removetag 1  /t Assignment1` removes the `Assignment1` tag from the 1st person in the displayed list.","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"yongkotaro"},"content":"* `removetag 2  3 /t Assignment2` removes the `Assignment2` tag from the 2nd and 3rd person in the displayed list.","lastModifiedDate":"2024-04-11"},{"lineNumber":306,"author":{"gitId":"yongkotaro"},"content":"* `removetag all /t Assignment3` removes the `Assignment3` tag from every person in the displayed list.","lastModifiedDate":"2024-04-11"},{"lineNumber":307,"author":{"gitId":"yyccbb"},"content":"### Locating available TAs for a tutorial group: `available`","lastModifiedDate":"2024-04-05"},{"lineNumber":308,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":309,"author":{"gitId":"yyccbb"},"content":"Filters all replacement TAs who are available for a specified tutorial group.","lastModifiedDate":"2024-04-05"},{"lineNumber":310,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":311,"author":{"gitId":"yyccbb"},"content":"Format: `available /g TUTORIAL`","lastModifiedDate":"2024-04-05"},{"lineNumber":312,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":313,"author":{"gitId":"yyccbb"},"content":"* The search is case-sensitive and must match the specified tutorial group exactly.","lastModifiedDate":"2024-04-05"},{"lineNumber":314,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":315,"author":{"gitId":"yyccbb"},"content":"Examples:","lastModifiedDate":"2024-04-05"},{"lineNumber":316,"author":{"gitId":"kaitinghh"},"content":"* `available /g TUE08` returns all TAs who are available for tutorial group `TUE08`","lastModifiedDate":"2024-04-14"},{"lineNumber":317,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":318,"author":{"gitId":"yyccbb"},"content":"### Viewing help : `help`","lastModifiedDate":"2024-04-05"},{"lineNumber":319,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":320,"author":{"gitId":"yyccbb"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-05"},{"lineNumber":321,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":322,"author":{"gitId":"yyccbb"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":323,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":324,"author":{"gitId":"yyccbb"},"content":"Format: `help`","lastModifiedDate":"2024-04-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"yyccbb"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":331,"author":{"gitId":"yyccbb"},"content":"**A**: Install the app in the other computer and overwrite the data file it creates with the file that ","lastModifiedDate":"2024-04-05"},{"lineNumber":332,"author":{"gitId":"yyccbb"},"content":"contains the data of your previous TrAcker home folder.","lastModifiedDate":"2024-04-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"kaitinghh"},"content":"| Action                        | Format, Examples                                                                                                                           |","lastModifiedDate":"2024-04-14"},{"lineNumber":345,"author":{"gitId":"yongkotaro"},"content":"|-------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-11"},{"lineNumber":346,"author":{"gitId":"yongkotaro"},"content":"| **Add**                       | `add [stu \u0026#124; ta] /n NAME /i ID /p PHONE /e EMAIL ​` \u003cbr\u003e e.g., `add stu /n Alex Yeoh /i A0777777L /p 87438807 /e alexyeoh@example.com` |","lastModifiedDate":"2024-04-11"},{"lineNumber":347,"author":{"gitId":"kaitinghh"},"content":"| **List**                      | `list`                                                                                                                                     |","lastModifiedDate":"2024-04-14"},{"lineNumber":348,"author":{"gitId":"kaitinghh"},"content":"| **Edit**                      | `edit INDEX [/n NAME] [/p PHONE] [/e EMAIL] ​`\u003cbr\u003e e.g.,`edit 1 /p 91234567 /e johndoe@example.com`                                        |","lastModifiedDate":"2024-04-14"},{"lineNumber":349,"author":{"gitId":"yongkotaro"},"content":"| **Find**                      | `find [stu \u0026#124; ta] [/n NAME] [/i ID] [/p PHONE] [/e EMAIL] [/t TAGS...]`\u003cbr\u003e e.g., `find /t wed assignment1`                            |","lastModifiedDate":"2024-04-11"},{"lineNumber":350,"author":{"gitId":"yongkotaro"},"content":"| **Delete**                    | `delete (all \u0026#124; INDEX [OTHER_INDICES...])`\u003cbr\u003e e.g., `delete 3`                                                                        |","lastModifiedDate":"2024-04-11"},{"lineNumber":351,"author":{"gitId":"kaitinghh"},"content":"| **Clear**                     | `clear`                                                                                                                                    |","lastModifiedDate":"2024-04-14"},{"lineNumber":352,"author":{"gitId":"kaitinghh"},"content":"| **Exit**                      | `exit`                                                                                                                                     |","lastModifiedDate":"2024-04-14"},{"lineNumber":353,"author":{"gitId":"yongkotaro"},"content":"| **Mark**                      | `mark (all \u0026#124; INDEX [OTHER_INDICES...]) /t TAG [OTHER_TAGS...] /ts TAG_STATUS`\u003cbr\u003e e.g., `mark 1 /t Assignment1 /ts cg`                |","lastModifiedDate":"2024-04-11"},{"lineNumber":354,"author":{"gitId":"kaitinghh"},"content":"| **Create Valid Tutorial Tag** | `tuttag add /t TAG`\u003cbr\u003e e.g., `tuttag add /t TUE08`                                                                                        |","lastModifiedDate":"2024-04-14"},{"lineNumber":355,"author":{"gitId":"kaitinghh"},"content":"| **Delete Valid Tutorial Tag** | `tuttag del /t TAG`\u003cbr\u003e e.g., `tuttag del /t WED09`                                                                                        |","lastModifiedDate":"2024-04-14"},{"lineNumber":356,"author":{"gitId":"kaitinghh"},"content":"| **List Valid Tutorial Tags**  | `tuttag list`                                                                                                                              |","lastModifiedDate":"2024-04-14"},{"lineNumber":357,"author":{"gitId":"kaitinghh"},"content":"| **Remove Tag**                | `removetag INDEX /t TAG`\u003cbr\u003e e.g., `removetag 1 /t Assignment1`                                                                            |","lastModifiedDate":"2024-04-14"},{"lineNumber":358,"author":{"gitId":"kaitinghh"},"content":"| **Available**                 | `available /g TUTORIAL`\u003cbr\u003e e.g., `available /g TUES08`                                                                                    |","lastModifiedDate":"2024-04-14"},{"lineNumber":359,"author":{"gitId":"kaitinghh"},"content":"| **Help**                      | `help`                                                                                                                                     |","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"yyccbb":58,"wongkj12":96,"yongkotaro":18,"kaitinghh":29,"wang-xinrong":21,"-":137}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"wongkj12"},"content":"    content: \"TrAcker\";","lastModifiedDate":"2024-04-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"wongkj12":1,"-":294}},{"path":"docs/diagrams/AvailableActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"skin rose","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"start","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":":User enters Available Command;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":":AvailableCommandParser parses input;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"if () then ([command is valid])","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"    :Creates an AvailableCommand with a  TutorialTagContainsGroupPredicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"    if () then ([tutorial group exists])","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"        :Update FilterPersonList with the predicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"    else ([else])","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"        :Display error message;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"    endif","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"else ([command is invalid])","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"    :Display error message;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"endif","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"stop","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"yongkotaro":21}},{"path":"docs/diagrams/MarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"participant \":MarkCommandParser\" as MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"participant \"p:MarkCommand\" as MarkCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"[-\u003e LogicManager : execute(\"mark 1 /t Assignment1 /ts cg\")","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"mark 1 /t Assignment1 /ts cg\")","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"create MarkCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"AddressBookParser -\u003e MarkCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"activate MarkCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"MarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"AddressBookParser -\u003e MarkCommandParser : parse(\"1 /t Assignment1 /ts cg\")","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"activate MarkCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"create MarkCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"MarkCommandParser -\u003e MarkCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"activate MarkCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"MarkCommand --\u003e MarkCommandParser :","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"deactivate MarkCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"yongkotaro"},"content":"MarkCommandParser --\u003e AddressBookParser : p","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"yongkotaro"},"content":"MarkCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"destroy MarkCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"AddressBookParser --\u003e LogicManager : p","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"yongkotaro"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"yongkotaro"},"content":"LogicManager -\u003e MarkCommand : execute(m)","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"yongkotaro"},"content":"activate MarkCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"yongkotaro"},"content":"MarkCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"yongkotaro"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"yongkotaro"},"content":"Model --\u003e MarkCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"yongkotaro"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"yongkotaro"},"content":"create CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"yongkotaro"},"content":"MarkCommand -\u003e CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"yongkotaro"},"content":"activate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"yongkotaro"},"content":"CommandResult --\u003e MarkCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"yongkotaro"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"yongkotaro"},"content":"MarkCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"yongkotaro"},"content":"deactivate MarkCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"yongkotaro"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"yongkotaro"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"yongkotaro"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"yyccbb":18,"yongkotaro":52}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"Class PersonType","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"Class ID","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"Person *--\u003e PersonType","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"Person *--\u003e ID","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":52,"author":{"gitId":"yongkotaro"},"content":"PersonType -[hidden]right-\u003e Name","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"Name -[hidden]right-\u003e ID","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"kaitinghh"},"content":"ID -[hidden]right-\u003e Phone","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yongkotaro":6,"kaitinghh":4,"-":49}},{"path":"docs/diagrams/TaggingClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wongkj12"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"wongkj12"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"wongkj12"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"wongkj12"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"wongkj12"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"wongkj12"},"content":"package \"Tagging\"{","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"wongkj12"},"content":"Class \"{abstract}\\nPerson\" as Person","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"wongkj12"},"content":"Class Student","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"wongkj12"},"content":"Class Ta","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"wongkj12"},"content":"Class \"{abstract}\\nTag\" as Tag","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"wongkj12"},"content":"Class AssignmentTag","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"wongkj12"},"content":"Class AttendanceTag","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"wongkj12"},"content":"Class TutorialTag","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"wongkj12"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"wongkj12"},"content":"Student -up-|\u003e Person","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"wongkj12"},"content":"Ta -up-|\u003e Person","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"wongkj12"},"content":"Student --\u003e \"*\" AssignmentTag","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"wongkj12"},"content":"Student --\u003e \"*\" AttendanceTag","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"wongkj12"},"content":"Student --\u003e \"*\" TutorialTag","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"wongkj12"},"content":"Ta --\u003e \"*\" TutorialTag","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"wongkj12"},"content":"AssignmentTag -up--|\u003e Tag","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"wongkj12"},"content":"AttendanceTag -up--|\u003e Tag","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"wongkj12"},"content":"TutorialTag -up---|\u003e Tag","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"wongkj12"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"wongkj12":27}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"title: TrAcker","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"**TrAcker is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wang-xinrong":2,"-":17}},{"path":"docs/team/kaitinghh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaitinghh"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"kaitinghh"},"content":"layout: page","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"title: Ho Kai Ting\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"kaitinghh"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"* **Project management**:","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"    * User Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"kaitinghh"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"* **Community**:","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"* **Tools**:","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"kaitinghh":46}},{"path":"docs/team/wangxinrong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"layout: page","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"title: Wang Xinrong\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"* **Project management**:","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"  * User Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"* **Community**:","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"* **Tools**:","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"wang-xinrong":44}},{"path":"docs/team/wongkj12.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wongkj12"},"content":"title: Kai Jie\u0027s Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wongkj12":1,"-":45}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"import seedu.address.commons.util.StatefulStringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"import seedu.address.logic.parser.StatefulParserUtil;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"    protected StatefulStringUtil statefulStringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"        StatefulStringUtil.initialize(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"        StatefulParserUtil.initialize(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"            // need to check the initial data against the tutorial tag list to remove the invalid TutoiralTags","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"            // (TutorialTags that are not in the UniqueTutorialTagList yet have been attached to contact entries)","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"yyccbb"},"content":"            logger.warning(\"Failed to save config file : \" + StatefulStringUtil.getDetails(e));","lastModifiedDate":"2024-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"yyccbb"},"content":"            logger.warning(\"Failed to save config file : \" + StatefulStringUtil.getDetails(e));","lastModifiedDate":"2024-04-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"yyccbb"},"content":"            logger.severe(\"Failed to save preferences \" + StatefulStringUtil.getDetails(e));","lastModifiedDate":"2024-04-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yyccbb":8,"yongkotaro":2,"wang-xinrong":2,"-":182}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"        return this.zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yyccbb":5,"kaitinghh":1,"-":67}},{"path":"src/main/java/seedu/address/commons/util/StatefulStringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"public class StatefulStringUtil {","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    private static StatefulStringUtil instance \u003d null;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"    private Model model;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    private StatefulStringUtil(Model model) {","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"        this.model \u003d model;","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"     * Initializes the StatefulStringUtil instance.","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"    public static void initialize(Model model) {","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"            instance \u003d new StatefulStringUtil(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    public static StatefulStringUtil getInstance() {","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalStateException(\"StatefulStringUtil has not been initialized\");","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"yongkotaro"},"content":"        return instance;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"     *   Ignores case, and performs subword matching.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"kaitinghh"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"kaitinghh"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"Ac\") \u003d\u003d false //not a match","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"     * @param word cannot be null, cannot be empty","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"kaitinghh"},"content":"    public static boolean containsSubwordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"kaitinghh"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"                .anyMatch(wordInPreppedSentence -\u003e wordInPreppedSentence.toLowerCase().contains(preppedWord));","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"yongkotaro"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"yongkotaro"},"content":"     * Returns true if the {@code tag} contains the {@code word}.","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"yongkotaro"},"content":"     *   Ignores case, and performs subword matching if {@code word} is a subword of a valid tutorialtag,","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"yongkotaro"},"content":"     *   else it performs a full word match.","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"yongkotaro"},"content":"     * @param tag cannot be null","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"yongkotaro"},"content":"     * @param word cannot be null, cannot be empty","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"yongkotaro"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"yongkotaro"},"content":"    public static boolean tagContainsWordIgnoreCase(Tag tag, String word) {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"yongkotaro"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"yongkotaro"},"content":"        requireNonNull(word);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"yongkotaro"},"content":"        String tagName \u003d tag.getTagName().toLowerCase();","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"yongkotaro"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"yongkotaro"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"        ObservableList\u003cTutorialTag\u003e validTutorials \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"                StatefulStringUtil.getInstance().model.getTutorialTagList();","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"yongkotaro"},"content":"        for (TutorialTag tutorial : validTutorials) {","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"yongkotaro"},"content":"            String tutorialGroup \u003d tutorial.getTagName().toLowerCase();","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"yongkotaro"},"content":"            if (tutorialGroup.contains(preppedWord)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"yongkotaro"},"content":"                return tagName.contains(preppedWord) \u0026\u0026 tag.isTutorial();","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"yongkotaro"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"yongkotaro"},"content":"        return tagName.equalsIgnoreCase(preppedWord);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"yongkotaro"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"yongkotaro"},"content":"     * Returns true if the {@code tag} contains the {@code tutorialGroup}.","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"yongkotaro"},"content":"     *   Ignores case, and performs a full word match.","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"yongkotaro"},"content":"     * @param tag cannot be null","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"yongkotaro"},"content":"     * @param tutorialGroup cannot be null, cannot be empty","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"yongkotaro"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"yongkotaro"},"content":"    public static boolean containsTutorialGroup(Tag tag, String tutorialGroup) {","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"yongkotaro"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"yongkotaro"},"content":"        requireNonNull(tutorialGroup);","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"yongkotaro"},"content":"        String tagName \u003d tag.getTagName();","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"yongkotaro"},"content":"        checkArgument(!tutorialGroup.isEmpty(), \"Tutorial group parameter cannot be empty\");","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"yongkotaro"},"content":"        checkArgument(!tutorialGroup.contains(\" \"), \"Only use one word for tutorial group parameter\");","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"        ObservableList\u003cTutorialTag\u003e validTutorials \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":111,"author":{"gitId":"yyccbb"},"content":"                StatefulStringUtil.getInstance().model.getTutorialTagList();","lastModifiedDate":"2024-04-05"},{"lineNumber":112,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"yongkotaro"},"content":"        for (TutorialTag tutorial : validTutorials) {","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"yongkotaro"},"content":"            String validTutorialGroupTag \u003d tutorial.getTagName();","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"yongkotaro"},"content":"            if (validTutorialGroupTag.equalsIgnoreCase(tutorialGroup)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"yongkotaro"},"content":"                return tagName.equalsIgnoreCase(tutorialGroup) \u0026\u0026 tag.getTagStatus() \u003d\u003d TagStatus.AVAILABLE;","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"yongkotaro"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"yongkotaro"},"content":"        return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yyccbb":13,"yongkotaro":68,"kaitinghh":7,"-":61}},{"path":"src/main/java/seedu/address/commons/util/StringListUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaitinghh"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":" * This ListUtil class contains additional methods for list manipulation.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"public class StringListUtil {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"kaitinghh"},"content":"     * Given a list of strings, returns a new list of strings separated by white spaces.","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"     * @param originalList list of strings","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"     * @return separatedList a new list of strings separated by white spaces","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"    public static List\u003cString\u003e separateWithSpaces(List\u003cString\u003e originalList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":"        List\u003cString\u003e separatedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":"        for (String str : originalList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"            if (str.contains(\" \")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"                String[] parts \u003d str.split(\"\\\\s+\");","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"                for (String part : parts) {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"                    separatedList.add(part);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"kaitinghh"},"content":"            } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"                separatedList.add(str);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"        return separatedList;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"kaitinghh":30}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"     * @param command The requested command.","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"    CommandResult execute(Command command) throws CommandException, ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"    Command parseCommand(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kaitinghh":5,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"    public Command parseCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"kaitinghh"},"content":"        return command;","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"kaitinghh"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"    public CommandResult execute(Command command) throws CommandException, ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kaitinghh":6,"-":86}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    public static final String MESSAGE_INVALID_PERSON_TYPE \u003d PersonType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided %1$s is invalid\";","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    public static final String MESSAGE_PERSON_LISTED_OVERVIEW \u003d \"%1$d person listed!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"    public static final String MESSAGE_INVALID_TUTORIAL_TAG_VALUE \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"            \"Specified tutorial tag name is not allowed: \";","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"    public static final String MESSAGE_AVAILABLE_TAS_OVERVIEW \u003d \"%1$d TAs available for the tutorial group.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"    public static final String MESSAGE_INVALID_TAG_NAME \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"yongkotaro"},"content":"                .append(\"; ID: \")","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"                .append(person.getId())","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"                .append(person.getEmail());","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"        if (person.getTags().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"            return builder.toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"        builder.append(\"; Tags: \");","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yyccbb":8,"yongkotaro":4,"kaitinghh":1,"wang-xinrong":4,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_STU;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_TA;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"wongkj12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Student / TA to the address book.\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"            + \"PERSON TYPE [\" + TYPE_STU + \"/\" + TYPE_TA + \"] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"            + PREFIX_ID + \" ID \"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"            + TYPE_STU + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"            + PREFIX_ID + \" A0123456Z \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"wongkj12"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \";","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wongkj12":2,"kaitinghh":7,"-":75}},{"path":"src/main/java/seedu/address/logic/commands/AvailableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.person.TutorialTagContainsGroupPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":" * Finds and lists all available TAs for the tutorial group.","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"public class AvailableCommand extends Command {","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"    public static final String COMMAND_WORD \u003d \"available\";","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all available TAs for the tutorial slot.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"            + \"Parameters: [FLAG] [TUTORIAL] \\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"            + PREFIX_GROUP + \" TUES08 \";","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"    public static final String MESSAGE_NON_EMPTY_GROUP_NAME \u003d \"Tutorial group name parameter cannot be empty\";","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"    public static final String SAMPLE_COMMAND \u003d COMMAND_WORD + \" \" + PREFIX_GROUP + \" WED10 \";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"    private final TutorialTagContainsGroupPredicate predicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"    private final TutorialTag tutorialGroup;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"yongkotaro"},"content":"     * Creates an AvailableCommand to find all available TAs for the tutorial group.","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"    public AvailableCommand(TutorialTagContainsGroupPredicate predicate, TutorialTag tutorialGroup) {","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"        this.tutorialGroup \u003d tutorialGroup;","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"yongkotaro"},"content":"        if (!model.hasTutorialTag(tutorialGroup)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TUTORIAL_TAG_VALUE + tutorialGroup.getTagName());","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"yongkotaro"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"                String.format(Messages.MESSAGE_AVAILABLE_TAS_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"yongkotaro"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"yongkotaro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"yongkotaro"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"yongkotaro"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"yongkotaro"},"content":"        if (!(other instanceof AvailableCommand)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"yongkotaro"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"yongkotaro"},"content":"        AvailableCommand otherAvailableCommand \u003d (AvailableCommand) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"yongkotaro"},"content":"        return predicate.equals(otherAvailableCommand.predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yongkotaro":61,"wang-xinrong":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"    public ClearCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":"        this.needsWarningPopup \u003d true;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaitinghh":3,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"    protected boolean needsWarningPopup \u003d false;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"    public boolean getNeedsWarningPopup() {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"        return needsWarningPopup;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaitinghh":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"            + \": Deletes the person(s) identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"            + \"Parameters: INDEX (must be a positive integer) [OTHER_INDICES} \\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" 1\"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"            + \" Example 2: \" + COMMAND_WORD + \" 1 5 3\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"    private final Set\u003cIndex\u003e indices;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"     * Constructor for the delete command.","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"     * @param indices set of indices whose contact entry are to be deleted.","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"    public DeleteCommand(Set\u003cIndex\u003e indices) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        requireNonNull(indices);","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"        this.needsWarningPopup \u003d true;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"        // need not check for duplicate indices because a Set is used","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"        List\u003cPerson\u003e lastShownList \u003d new ArrayList\u003c\u003e(model.getFilteredPersonList());","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"kaitinghh"},"content":"        StringBuilder resultStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"kaitinghh"},"content":"        checksInvalidIndices(lastShownList, indices);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"kaitinghh"},"content":"            resultStringBuilder \u003d indices.stream().map(x -\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"kaitinghh"},"content":"                try {","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"kaitinghh"},"content":"                    return executeHelper(model, lastShownList, x);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"kaitinghh"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"kaitinghh"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"kaitinghh"},"content":"                }","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"kaitinghh"},"content":"            }).reduce(StringBuilder::append).orElse(new StringBuilder());","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"kaitinghh"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"kaitinghh"},"content":"            Throwable cause \u003d e.getCause();","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"kaitinghh"},"content":"            if (cause instanceof CommandException) {","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"kaitinghh"},"content":"                throw (CommandException) cause;","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"kaitinghh"},"content":"            } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"                throw e;","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"kaitinghh"},"content":"        resultStringBuilder.deleteCharAt(resultStringBuilder.length() - 1); // remove the last \u0027\\n\u0027","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"kaitinghh"},"content":"        return new CommandResult(resultStringBuilder.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"kaitinghh"},"content":"    private void checksInvalidIndices(List\u003cPerson\u003e lastShownList, Set\u003cIndex\u003e indices) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"kaitinghh"},"content":"        // check whether index specified is within valid range","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"kaitinghh"},"content":"        List\u003cInteger\u003e invalidIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"kaitinghh"},"content":"        for (Index index: indices) {","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"kaitinghh"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"kaitinghh"},"content":"                invalidIndices.add(index.getOneBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"kaitinghh"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"kaitinghh"},"content":"        if (invalidIndices.size() \u003e 0) {","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"kaitinghh"},"content":"            throw new CommandException(","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"kaitinghh"},"content":"                    String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, invalidIndices));","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"kaitinghh"},"content":"     * Deletes a single {@code Person}. Index is guaranteed to be a valid index.","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"kaitinghh"},"content":"    private StringBuilder executeHelper(Model model, List\u003cPerson\u003e lastShownList, Index index) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"kaitinghh"},"content":"        requireAllNonNull(model, lastShownList, index);","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"kaitinghh"},"content":"        Person personToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"kaitinghh"},"content":"        return new StringBuilder()","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"kaitinghh"},"content":"                .append(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)))","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"kaitinghh"},"content":"                .append(\"\\n\");","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"kaitinghh"},"content":"        return indices.equals(otherDeleteCommand.indices);","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"kaitinghh"},"content":"                .add(\"index\", indices.toString())","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yyccbb":1,"kaitinghh":64,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the particulars of the person identified \"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL]\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"        PersonType currentType \u003d personToEdit.getType();","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"        Id currentId \u003d personToEdit.getId();","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"        Set\u003cTag\u003e currentTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"        return Person.of(currentType, updatedName, currentId, updatedPhone, updatedEmail,","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"                currentTags);","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"yyccbb"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email);","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"yyccbb"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email);","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yyccbb":10,"kaitinghh":1,"-":195}},{"path":"src/main/java/seedu/address/logic/commands/EditTutTagListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wongkj12"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"wongkj12"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"wongkj12"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"wongkj12"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"wongkj12"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wongkj12"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"wongkj12"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"public class EditTutTagListCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"     * Represents the subtype of the EditTutTagListCommand. ADD represents command to add an available","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"     * tutorial tag, DELETE represents command to delete an available tutorial tag and LIST represents","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"     * command to list all available tutorial tags.","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"    public enum CommandSubtype { ADD, DELETE, LIST };","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"    public static final String COMMAND_WORD \u003d \"tuttag\";","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"    public static final String ADD_FLAG \u003d \"add\";","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"    public static final String DELETE_FLAG \u003d \"del\";","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"    public static final String LIST_FLAG \u003d \"list\";","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a TutorialTag to be used with the specified \"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"            + \"TagName.\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"wongkj12"},"content":"            + \"Parameters: MODE (must be either \u0027add\u0027 for adding tags or \u0027del\u0027 for deleting tags) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"            + PREFIX_TAG + \" [TAGNAME]\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + ADD_FLAG + \" \" + PREFIX_TAG + \" THU10\\n\";","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"    public static final String SAMPLE_COMMAND \u003d COMMAND_WORD + \" \" + ADD_FLAG + \" \" + PREFIX_TAG + \" WED10\";","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New tutorial tag added: %1$s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"    public static final String MESSAGE_DUPLICATE_TUTORIALTAG \u003d \"This tutorial tag already exists in the address book\";","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"    public static final String EMPTY_TUTORIALTAGLIST_OUTPUT \u003d \"Available Tutorial Tag(s): [ ]\";","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"    private final String tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"    private final CommandSubtype commandType;","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"     * Creates a new EditTutTagListCommand.","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagName TagName of the tutorial tag to be added or deleted.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"     * @param commandType indicates the command subtype.","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"    public EditTutTagListCommand(String tagName, CommandSubtype commandType) {","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"     * Creates a new EditTutTagListCommand.","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"     * @param commandType indicates the command subtype.","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"    public EditTutTagListCommand(CommandSubtype commandType) {","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"        this.tagName \u003d null;","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"wongkj12"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"        if (commandType \u003d\u003d CommandSubtype.ADD) {","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"wang-xinrong"},"content":"            TutorialTag tag \u003d new TutorialTag(tagName, TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"            if (model.hasTutorialTag(tag)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TUTORIALTAG);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"wang-xinrong"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"wang-xinrong"},"content":"            model.addTutorialTag(tag);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"        if (commandType \u003d\u003d CommandSubtype.DELETE) {","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"wongkj12"},"content":"            // Check if specified tutorial tag exists","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"wongkj12"},"content":"            TutorialTag tag \u003d new TutorialTag(tagName, TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"wongkj12"},"content":"            if (!model.hasTutorialTag(tag)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"wongkj12"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_TUTORIAL_TAG_VALUE + tagName);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"wongkj12"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"wang-xinrong"},"content":"            model.deleteTutorialTag(new TutorialTag(tagName, TagStatus.AVAILABLE));","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"wongkj12"},"content":"            // Remove the specified tag from all persons","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"wongkj12"},"content":"            List\u003cPerson\u003e entireList \u003d model.getPersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"wongkj12"},"content":"            for (Person person : entireList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"wongkj12"},"content":"                Set\u003cTag\u003e currTags \u003d new HashSet\u003c\u003e(person.getTags());","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"wongkj12"},"content":"                assert person !\u003d null;","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"                Person editedPerson \u003d createEditedPerson(person, Tag.removeTagFromTagSet(currTags, this.tagName));","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"wongkj12"},"content":"                // Update the person list","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"wongkj12"},"content":"                model.setPerson(person, editedPerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"wongkj12"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"        if (commandType \u003d\u003d CommandSubtype.LIST) {","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"            // nothing needs to be done","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"        return new CommandResult(model.getTutorialTagListString());","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"wongkj12"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"wongkj12"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"wongkj12"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"wongkj12"},"content":"    private static Person createEditedPerson(Person personToEdit, Set\u003cTag\u003e newTags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"wongkj12"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"wongkj12"},"content":"        return Person.of(personToEdit.getType(), personToEdit.getName(), personToEdit.getId(),","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"wongkj12"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(), newTags);","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"wongkj12"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"wang-xinrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"wang-xinrong"},"content":"        if (!(other instanceof EditTutTagListCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"wang-xinrong"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommand otherFindCommand \u003d (EditTutTagListCommand) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"        return tagName.equals(otherFindCommand.tagName);","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"wang-xinrong"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"wang-xinrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"wang-xinrong"},"content":"                .add(\"tagName\", tagName)","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"wang-xinrong"},"content":"                .toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"wang-xinrong"},"content":"    public static boolean isListCommand(CommandSubtype type) {","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"wang-xinrong"},"content":"        return type \u003d\u003d CommandSubtype.LIST;","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"yyccbb":1,"wongkj12":37,"wang-xinrong":107}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"wongkj12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all persons whose contact details contain \"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"            + \"the specified keywords (case-insensitive) under the specified flag and displays them as a list with \"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"            + \"index numbers.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"wongkj12"},"content":"            + \"Parameters: [stu/ta] [/n NAME] [/i ID] [/p PHONE] [/e EMAIL]\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wongkj12"},"content":"            + \"Example: \" + COMMAND_WORD + \" stu /n grace /p 900\";","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"    private final List\u003cFieldContainsKeywordsPredicate\u003e predicates;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"    public FindCommand(List\u003cFieldContainsKeywordsPredicate\u003e predicates) {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"        model.persistentUpdateFilteredList(this.predicates);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        int filteredListSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"        if (filteredListSize \u003c\u003d 1) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"            return new CommandResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"                    String.format(Messages.MESSAGE_PERSON_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"kaitinghh"},"content":"        return predicates.equals(otherFindCommand.predicates);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"kaitinghh"},"content":"    // UPDATE THIS","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"kaitinghh"},"content":"        ToStringBuilder sb \u003d new ToStringBuilder(this);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"kaitinghh"},"content":"        for (FieldContainsKeywordsPredicate predicate : predicates) {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"kaitinghh"},"content":"            sb.add(\"predicate\", predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yyccbb":7,"wongkj12":3,"kaitinghh":16,"-":43}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAGSTATUS;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagType;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"    public static final String SAMPLE_COMMAND \u003d COMMAND_WORD + \" 1 \" + PREFIX_TAG","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"            + \" assignment1 \" + PREFIX_TAGSTATUS + \" cg\";","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    public static final String SAMPLE_COMMAND_2 \u003d COMMAND_WORD + \" 1 2 \" + PREFIX_TAG","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"            + \" assignment2 assignment3 \" + PREFIX_TAGSTATUS + \" ig\";","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the status of the specified tag(s) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"            + \"of specified contact entry(s) with the specified status.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"            + \"If the tag(s) specified does not exist, a new tag with the tag name\"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"            + \" and tag status would be created.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"            + \"Parameters: INDEX (must be a positive integer within the size of the displayed list) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"            + \"[OTHER_INDICES} \"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"            + PREFIX_TAG + \" TAG_NAME [OTHER_TAG_NAMES] \" + PREFIX_TAGSTATUS + \" TAG_STATUS\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"            + \"Example 1: \" + SAMPLE_COMMAND + \"\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"            + \"Example 2: \" + SAMPLE_COMMAND_2;","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"    public static final String MESSAGE_MARK_PERSON_SUCCESS \u003d \"Updated Person: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"    private final Set\u003cIndex\u003e indices;","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"    private final Set\u003cString\u003e tagNames;","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"    private final TagStatus tagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"     * @param indices of the person in the filtered person list to update tag status","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"     * @param tagNames name of the tag whose status is to be updated","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagStatus the status to update the specified tag with","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"    public MarkCommand(Set\u003cIndex\u003e indices, Set\u003cString\u003e tagNames, TagStatus tagStatus) {","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"        requireAllNonNull(indices, tagNames, tagStatus);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"        this.tagNames \u003d tagNames;","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"        this.tagStatus \u003d tagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"     * Edit the tags of a single {@code Person}.","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"    private StringBuilder executeHelper(Model model, Index index) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"        requireAllNonNull(model, index);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"        // check whether index specified is within valid range","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"wang-xinrong"},"content":"        Set\u003cTag\u003e currTags \u003d new HashSet\u003c\u003e(personToEdit.getTags());","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"        // create a new person with the new tag(s), necessary as the person fields are final","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, Tag.updateTagsWithNewTags(currTags,","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"                this.tagNames, this.tagStatus));","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"wang-xinrong"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"        return new StringBuilder()","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"                .append(String.format(MESSAGE_MARK_PERSON_SUCCESS, Messages.format(editedPerson)))","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"                .append(\"\\n\");","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"yyccbb"},"content":"        // need not check for duplicate indices because a Set is used","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"        // only tutorial tags with predefined tag names are allowed","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"        if (Tag.getTagTypeWithTagStatus(tagStatus) \u003d\u003d TagType.TUTORIAL) {","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"            for (String tagName: tagNames) {","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"                TutorialTag tag \u003d new TutorialTag(tagName, TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"                if (!model.hasTutorialTag(tag)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_TUTORIAL_TAG_VALUE + tagName);","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"                }","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"yyccbb"},"content":"        StringBuilder resultStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"yyccbb"},"content":"            resultStringBuilder \u003d indices.stream().map(x -\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"yyccbb"},"content":"                try {","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"yyccbb"},"content":"                    return executeHelper(model, x);","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"yyccbb"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"yyccbb"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"                }","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"yyccbb"},"content":"            }).reduce(StringBuilder::append).orElse(new StringBuilder());","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"yyccbb"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"            Throwable cause \u003d e.getCause();","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"            if (cause instanceof CommandException) {","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"                throw (CommandException) cause;","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"yyccbb"},"content":"            } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"yyccbb"},"content":"                throw e;","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"yyccbb"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"yyccbb"},"content":"        resultStringBuilder.deleteCharAt(resultStringBuilder.length() - 1); // remove the last \u0027\\n\u0027","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"        return new CommandResult(resultStringBuilder.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"wang-xinrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"wang-xinrong"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"wang-xinrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"wang-xinrong"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"wang-xinrong"},"content":"        // state check","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"wang-xinrong"},"content":"        MarkCommand e \u003d (MarkCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"yyccbb"},"content":"        return indices.equals(e.indices)","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 tagNames.equals(e.tagNames)","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"wang-xinrong"},"content":"                \u0026\u0026 tagStatus.equals(e.tagStatus);","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"wang-xinrong"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"wang-xinrong"},"content":"    private static Person createEditedPerson(Person personToEdit, Set\u003cTag\u003e newTags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"wang-xinrong"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"yyccbb"},"content":"        return Person.of(personToEdit.getType(), personToEdit.getName(), personToEdit.getId(),","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"yongkotaro"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(), newTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"wang-xinrong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"wang-xinrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"yyccbb"},"content":"                .add(\"index\", indices.toString())","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"yyccbb"},"content":"                .add(\"tagName(s)\", tagNames)","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"wang-xinrong"},"content":"                .add(\"tagStatus\", tagStatus)","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"wang-xinrong"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"yyccbb":72,"yongkotaro":1,"wang-xinrong":87}},{"path":"src/main/java/seedu/address/logic/commands/RemovetagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"public class RemovetagCommand extends Command {","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wongkj12"},"content":"    public static final String COMMAND_WORD \u003d \"removetag\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"    public static final String SAMPLE_COMMAND \u003d COMMAND_WORD + \" 1 \" + PREFIX_TAG + \" assignment1 \";","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    // to be updated","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wongkj12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes the specified tag from the specified\"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"            + \" contact entry.\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wongkj12"},"content":"            + PREFIX_TAG + \" TAG\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"            + \"Example: \" + SAMPLE_COMMAND;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    public static final String MESSAG_REMOVETAG_SUCCESS \u003d \"Updated Person: %1$s\";","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    private final Set\u003cIndex\u003e indices;","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    private final Set\u003cString\u003e tagNames;","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"     * @param indices of the person in the filtered person list to have the tag deleted.","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"     * @param tagNames name of the tag to be deleted.","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"    public RemovetagCommand(Set\u003cIndex\u003e indices, Set\u003cString\u003e tagNames) {","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        requireAllNonNull(indices, tagNames);","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"        this.tagNames \u003d tagNames;","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"     * Removes the specified tags of a single {@code Person}.","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"    private StringBuilder executeHelper(Model model, Index index) throws CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"        requireAllNonNull(model, index);","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"        // check whether index specified is within valid range","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"        Set\u003cTag\u003e currTags \u003d new HashSet\u003c\u003e(personToEdit.getTags());","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"        // create a new person with the new tag(s), necessary as the person fields are final","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, Tag.removeTagsFromTagSet(currTags,","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"                this.tagNames));","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"        return new StringBuilder()","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"                .append(String.format(MESSAG_REMOVETAG_SUCCESS, Messages.format(editedPerson)))","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"                .append(\"\\n\");","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"        // need not check for duplicate indices because a Set is used","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"        StringBuilder resultStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"            resultStringBuilder \u003d indices.stream().map(x -\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"                try {","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"                    return executeHelper(model, x);","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2024-04-05"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"                }","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"            }).reduce(StringBuilder::append).orElse(new StringBuilder());","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"            Throwable cause \u003d e.getCause();","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"            if (cause instanceof CommandException) {","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"                throw (CommandException) cause;","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"yyccbb"},"content":"            } else {","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"                throw e;","lastModifiedDate":"2024-04-05"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-05"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"        resultStringBuilder.deleteCharAt(resultStringBuilder.length() - 1); // remove the last \u0027\\n\u0027","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"        return new CommandResult(resultStringBuilder.toString());","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"wang-xinrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"        // short circuit if same object","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"yyccbb"},"content":"        if (!(other instanceof RemovetagCommand)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"        // state check","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"        RemovetagCommand e \u003d (RemovetagCommand) other;","lastModifiedDate":"2024-04-05"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"        return indices.equals(e.indices)","lastModifiedDate":"2024-04-05"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 tagNames.equals(e.tagNames);","lastModifiedDate":"2024-04-05"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"    private static Person createEditedPerson(Person personToEdit, Set\u003cTag\u003e newTags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"        return Person.of(personToEdit.getType(), personToEdit.getName(), personToEdit.getId(),","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"                personToEdit.getPhone(), personToEdit.getEmail(), newTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"wang-xinrong"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"wang-xinrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"yyccbb"},"content":"                .add(\"index\", indices.toString())","lastModifiedDate":"2024-04-05"},{"lineNumber":130,"author":{"gitId":"yyccbb"},"content":"                .add(\"tagName(s)\", tagNames).toString();","lastModifiedDate":"2024-04-05"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"yyccbb":54,"wongkj12":3,"wang-xinrong":75}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yyccbb":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"wongkj12"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"kaitinghh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_PHONE,","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wongkj12"},"content":"                        PREFIX_EMAIL);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        if (!StatefulParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID, PREFIX_PHONE,","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"                PREFIX_EMAIL)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_ID, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"        PersonType type \u003d StatefulParserUtil.parsePersonType(argMultimap.getPreamble());","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        Name name \u003d StatefulParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        Id id \u003d StatefulParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"        Phone phone \u003d StatefulParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        Email email \u003d StatefulParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"wongkj12"},"content":"        Person person \u003d Person.of(type, name, id, phone, email, new HashSet\u003cTag\u003e());","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yyccbb":7,"wongkj12":3,"yongkotaro":1,"kaitinghh":3,"wang-xinrong":1,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.commands.AvailableCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.EditTutTagListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"import seedu.address.logic.commands.RemovetagCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        final String arguments \u003d matcher.group(\"arguments\") + \" \";","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        case RemovetagCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"            return new RemovetagCommandParser().parse(arguments);","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"        case EditTutTagListCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"            return new EditTutTagListCommandParser().parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"yongkotaro"},"content":"        case AvailableCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"yongkotaro"},"content":"            return new AvailableCommandParser().parse(arguments);","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yyccbb":4,"yongkotaro":4,"wang-xinrong":9,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix + \" \", fromIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"yyccbb":1,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/AvailableCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_TAG_NAME;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.commands.AvailableCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.person.TutorialTagContainsGroupPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":" * Parses input arguments and creates a new AvailableCommand object","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"public class AvailableCommandParser implements Parser\u003cAvailableCommand\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"     * Parses the given {@code String} of arguments in the context of the AvailableCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"     * and returns an AvailableCommand object for execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"    public AvailableCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"yongkotaro"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_GROUP);","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"        String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"        if (!preamble.equals(\"\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"        Optional\u003cString\u003e group \u003d argMultimap.getValue(PREFIX_GROUP);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"            checkArgument(!group.isEmpty(), String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"                    AvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"            checkArgument(!group.get().equals(\"\"), AvailableCommand.MESSAGE_NON_EMPTY_GROUP_NAME);","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"        String tutorialGroup \u003d argMultimap.getValue(PREFIX_GROUP).get();","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"        if (!Tag.isValidTagName(tutorialGroup)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(MESSAGE_INVALID_TAG_NAME);","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"yongkotaro"},"content":"        TutorialTag tutorialTag \u003d new TutorialTag(tutorialGroup, TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"yongkotaro"},"content":"        return new AvailableCommand(new TutorialTagContainsGroupPredicate(tutorialGroup), tutorialTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yongkotaro":36,"wang-xinrong":25}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    public static final PersonType TYPE_STU \u003d PersonType.STU;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    public static final PersonType TYPE_TA \u003d PersonType.TA;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    public static final PersonType TYPE_DEFAULT \u003d PersonType.STU;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/n\");","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"/i\");","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/p\");","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/e\");","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/t\");","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"/g\");","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"    public static final Prefix PREFIX_TAGSTATUS \u003d new Prefix(\"/ts\");","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yyccbb":9,"yongkotaro":1,"kaitinghh":1,"wang-xinrong":1,"-":9}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indices;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"            indices \u003d StatefulParserUtil.parseIndices(argMultimap.getPreamble());","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"            return new DeleteCommand(indices);","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kaitinghh":6,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"            index \u003d StatefulParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"            editPersonDescriptor.setName(StatefulParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"            editPersonDescriptor.setPhone(StatefulParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"            editPersonDescriptor.setEmail(StatefulParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        return Optional.of(StatefulParserUtil.parseTags(tagSet));","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yyccbb":6,"yongkotaro":1,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/EditTutTagListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.EditTutTagListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":" * Parses input arguments and creates a new EditTutTagListCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"public class EditTutTagListCommandParser implements Parser\u003cEditTutTagListCommand\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTutTagListCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"     * and returns a EditTutTagListCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"    public EditTutTagListCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTutTagListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"        String commandFlag \u003d argMultimap.getPreamble();","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"            EditTutTagListCommand.CommandSubtype commandSubtype \u003d StatefulParserUtil.isCreatingNewTag(commandFlag);","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"            // if the EditTutTagListCommand is to list all available tutorial tags","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"            if (EditTutTagListCommand.isListCommand(commandSubtype)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"                return new EditTutTagListCommand(commandSubtype);","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"            // if the EditTutTagListCommand is not to list all available tutorial tags, PREFIX_TAG must be present","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"            if (!StatefulParserUtil.arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"                        EditTutTagListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"            String tagName \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"            Tag.isTagNameValid(tagName);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"            return new EditTutTagListCommand(tagName, commandSubtype);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTutTagListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"yyccbb":2,"yongkotaro":1,"wang-xinrong":52}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.commons.util.StringListUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_PHONE,","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"                        PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"        List\u003cFieldContainsKeywordsPredicate\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        PersonType type \u003d StatefulParserUtil.parseFindPersonType(argMultimap.getPreamble());","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"        if (type !\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"            List\u003cString\u003e keyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"            keyword.add(type.toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"            predicates.add(new FieldContainsKeywordsPredicate(keyword));","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"yongkotaro"},"content":"        List\u003cPrefix\u003e allPrefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_ID, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kaitinghh"},"content":"        for (Prefix prefix: allPrefixes) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"            if (StatefulParserUtil.arePrefixesPresent(argMultimap, prefix)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"                List\u003cString\u003e keywords \u003d argMultimap.getAllValues(prefix);","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"kaitinghh"},"content":"                List\u003cString\u003e separated \u003d StringListUtil.separateWithSpaces(keywords);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"kaitinghh"},"content":"                try {","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"kaitinghh"},"content":"                    for (String keyword : separated) {","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"kaitinghh"},"content":"                        checkArgument(!keyword.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"kaitinghh"},"content":"                    }","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"kaitinghh"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"kaitinghh"},"content":"                    throw new ParseException(e.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"kaitinghh"},"content":"                }","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"kaitinghh"},"content":"                predicates.add(new FieldContainsKeywordsPredicate(prefix, separated));","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"kaitinghh"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"        return new FindCommand(predicates);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yyccbb":2,"yongkotaro":2,"kaitinghh":35,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAGSTATUS;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code MarkCommand}","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"     * and returns a {@code MarkCommand} object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG, PREFIX_TAGSTATUS);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e indices;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"            indices \u003d StatefulParserUtil.parseIndices(argMultimap.getPreamble());","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"        if (!StatefulParserUtil.arePrefixesPresent(argMultimap, PREFIX_TAG, PREFIX_TAGSTATUS)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG, PREFIX_TAGSTATUS);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        String tagNamesString \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        Set\u003cString\u003e tagNames \u003d StatefulParserUtil.parseTagNamesString(tagNamesString);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"        String statusIdentifier \u003d argMultimap.getValue(PREFIX_TAGSTATUS).get();","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"        // an alternative approach is to instantiate the Tag object and try to","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"        // catch the Illegal Exception Error. The tag can then be fed into the","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"        // MarkCommand. The author decided to pass in the tagName instead as the","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"        // TagName might be used to search for tags in future implementations","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"            TagStatus tagStatus \u003d TagStatus.getTagStatus(statusIdentifier);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"            tagNames.forEach(Tag::isTagNameValid);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"            return new MarkCommand(indices, tagNames, tagStatus);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"yyccbb":11,"wang-xinrong":52}},{"path":"src/main/java/seedu/address/logic/parser/RemovetagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import seedu.address.logic.commands.RemovetagCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"public class RemovetagCommandParser implements Parser\u003cRemovetagCommand\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemovetagCommand}","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"     * and returns a {@code RemovetagCommand} object for execution.","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    public RemovetagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e indices;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"            indices \u003d StatefulParserUtil.parseIndices(argMultimap.getPreamble());","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"                    RemovetagCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        if (!StatefulParserUtil.arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"                    RemovetagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"        String tagNamesString \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        Set\u003cString\u003e tagNames \u003d StatefulParserUtil.parseTagNamesString(tagNamesString);","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"            tagNames.forEach(Tag::isTagNameValid);","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"            return new RemovetagCommand(indices, tagNames);","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"yyccbb":16,"wang-xinrong":37}},{"path":"src/main/java/seedu/address/logic/parser/StatefulParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import java.util.Objects;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"import seedu.address.commons.util.StatefulStringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.EditTutTagListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"public class StatefulParserUtil {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    private static StatefulParserUtil instance \u003d null;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    private Model model;","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    private StatefulParserUtil(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        this.model \u003d model;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"     * Initializes the {@code StatefulParserUtil} singleton with a model.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"    public static void initialize(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"            instance \u003d new StatefulParserUtil(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"     * Get the instance of the {@code StatefulParserUtil} singleton.","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"    public static StatefulParserUtil getInstance() {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalStateException(\"Instance not initialized yet.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        return instance;","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"        if (!StatefulStringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"     * Parses a {@code String} consisting of indices into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"     * @throws ParseException if any substring is not a valid index.","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"    public static Set\u003cIndex\u003e parseIndices(String oneBasedIndices) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"        requireNonNull(oneBasedIndices);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"        String trimmedOneBasedIndices \u003d oneBasedIndices.trim();","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e parsedIndices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"        List\u003cString\u003e indicesList;","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"        if (trimmedOneBasedIndices.equals(\"all\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"            Model model \u003d StatefulParserUtil.getInstance().model;","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"            int size \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"            indicesList \u003d Stream.iterate(1, x -\u003e x + 1)","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"                    .limit(size)","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"                    .map(Objects::toString)","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"yyccbb"},"content":"            indicesList \u003d Arrays.asList(trimmedOneBasedIndices.split(\"\\\\s+\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"        // Java Lambda expressions do not allow propagating of checked exceptions.","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"        // To circumvent this, wrap the checked exception in an unchecked exception.","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"            parsedIndices \u003d indicesList.stream().map(x -\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"                try {","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"                    return parseIndex(x);","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"                }","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"yyccbb"},"content":"            }).collect(Collectors.toSet());","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"yyccbb"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"yyccbb"},"content":"            Throwable cause \u003d e.getCause();","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"yyccbb"},"content":"            if (cause instanceof ParseException) {","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"yyccbb"},"content":"                throw (ParseException) cause;","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"yyccbb"},"content":"            } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"yyccbb"},"content":"                throw e;","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"        return parsedIndices;","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"yyccbb"},"content":"     * Parses a {@code String type} into a {@code PersonType}.","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"yyccbb"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"kaitinghh"},"content":"     * An unspecified person type will default to student.","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"yyccbb"},"content":"     * @throws ParseException if the given {@code type} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"yyccbb"},"content":"    public static PersonType parsePersonType(String type) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"yyccbb"},"content":"        requireNonNull(type);","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"yyccbb"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"yyccbb"},"content":"        if (!PersonType.isValidPersonType(trimmedType) \u0026\u0026 !trimmedType.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"yyccbb"},"content":"            throw new ParseException(PersonType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"yyccbb"},"content":"        return PersonType.getPersonType(trimmedType);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"kaitinghh"},"content":"     * Parses a {@code String type} into a {@code PersonType} for the find command.","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"kaitinghh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"kaitinghh"},"content":"     * An unspecified person type will return null.","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"kaitinghh"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"kaitinghh"},"content":"     * @throws ParseException if the given {@code type} is invalid.","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"kaitinghh"},"content":"    public static PersonType parseFindPersonType(String type) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"kaitinghh"},"content":"        requireNonNull(type);","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"kaitinghh"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"kaitinghh"},"content":"        if (!PersonType.isValidPersonType(trimmedType) \u0026\u0026 !trimmedType.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"kaitinghh"},"content":"            throw new ParseException(PersonType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"kaitinghh"},"content":"        } else if (trimmedType.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"kaitinghh"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"kaitinghh"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"kaitinghh"},"content":"            return PersonType.getPersonType(trimmedType);","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":167,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"kaitinghh"},"content":"     * Parses a {@code String id} into a {@code Id}.","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"kaitinghh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"kaitinghh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"kaitinghh"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"kaitinghh"},"content":"    public static Id parseId(String id) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"kaitinghh"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"kaitinghh"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"kaitinghh"},"content":"        if (!Id.isValidId(trimmedId)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"kaitinghh"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"kaitinghh"},"content":"        return new Id(trimmedId);","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"wang-xinrong"},"content":"        return Tag.createTag(trimmedTag, TagStatus.DEFAULT_STATUS);","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":238,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"yyccbb"},"content":"     * Parses a {@code String} of tag names separated by whitespaces","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"yyccbb"},"content":"     * into a {@code Set\u003cString\u003e}, where each element corresponds to a","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"yyccbb"},"content":"     * trimmed tag name.","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"yyccbb"},"content":"    public static Set\u003cString\u003e parseTagNamesString(String tagNames) {","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"yyccbb"},"content":"        requireNonNull(tagNames);","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"yyccbb"},"content":"        final Set\u003cString\u003e tagNamesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":247,"author":{"gitId":"yyccbb"},"content":"        tagNamesSet.addAll(Arrays.asList(tagNames.split(\"\\\\s+\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":248,"author":{"gitId":"yyccbb"},"content":"        return tagNamesSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"wang-xinrong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":253,"author":{"gitId":"wang-xinrong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":254,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":255,"author":{"gitId":"wang-xinrong"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":256,"author":{"gitId":"wang-xinrong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":257,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":259,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":260,"author":{"gitId":"wang-xinrong"},"content":"     * @param flag Command flag on whether the EditTutTagListCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"kaitinghh"},"content":"     * @throws ParseException","lastModifiedDate":"2024-04-14"},{"lineNumber":262,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":263,"author":{"gitId":"wang-xinrong"},"content":"    public static EditTutTagListCommand.CommandSubtype isCreatingNewTag(String flag) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"wang-xinrong"},"content":"        if (flag.equals(EditTutTagListCommand.ADD_FLAG)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":265,"author":{"gitId":"wang-xinrong"},"content":"            return EditTutTagListCommand.CommandSubtype.ADD;","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":267,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":268,"author":{"gitId":"wang-xinrong"},"content":"        if (flag.equals(EditTutTagListCommand.DELETE_FLAG)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":269,"author":{"gitId":"wang-xinrong"},"content":"            return EditTutTagListCommand.CommandSubtype.DELETE;","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"wang-xinrong"},"content":"        if (flag.equals(EditTutTagListCommand.LIST_FLAG)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"wang-xinrong"},"content":"            return EditTutTagListCommand.CommandSubtype.LIST;","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":275,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":276,"author":{"gitId":"wang-xinrong"},"content":"        throw new ParseException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":278,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yyccbb":106,"kaitinghh":37,"wang-xinrong":33,"-":103}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.UniqueTutorialTagList;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"    private final UniqueTutorialTagList tutorialTags;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"        tutorialTags \u003d new UniqueTutorialTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"     * Replaces the contents of the tutorial tags list with {@code tutorialTags}.","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"     * {@code tutorialTags} must not contain duplicate tutorial tags.","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"    public void setTutorialTags(List\u003cTutorialTag\u003e tutorialTags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"        this.tutorialTags.setTutorialTags(tutorialTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"        setTutorialTags(newData.getTutorialTagList());","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"    //// tutorialTag-level operations","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"wang-xinrong"},"content":"    public boolean hasTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"        return tutorialTags.contains(tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"     * Adds a tutorialTag to the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"     * The tutorialTag must not already exist in the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"    public void addTutorialTag(TutorialTag t) {","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"        tutorialTags.add(t);","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"wang-xinrong"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"wang-xinrong"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"    public void removeTutorialTag(TutorialTag key) {","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"        tutorialTags.remove(key);","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":149,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"wang-xinrong"},"content":"    public ObservableList\u003cTutorialTag\u003e getTutorialTagList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"wang-xinrong"},"content":"        return tutorialTags.asUnmodifiableObservableList();","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"wang-xinrong"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 tutorialTags.equals(otherAddressBook.tutorialTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"wang-xinrong"},"content":"    public String getTutorialTagListString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"wang-xinrong"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Available Tutorial Tag(s): [\");","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"wang-xinrong"},"content":"        if (!tutorialTags.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"wang-xinrong"},"content":"            for (TutorialTag tag : tutorialTags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"wang-xinrong"},"content":"                sb.append(tag.getTagName()).append(\", \");","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"wang-xinrong"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"wang-xinrong"},"content":"            sb.delete(sb.length() - 2, sb.length()); // Remove the last comma and space","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"wang-xinrong"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"wang-xinrong"},"content":"            return sb.append(\" ]\").toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"wang-xinrong"},"content":"        sb.append(\"]\");","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"wang-xinrong"},"content":"        return sb.toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wang-xinrong":60,"-":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"wongkj12"},"content":"    /** Returns an unmodifiable view of the entire person list */","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"wongkj12"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"kaitinghh"},"content":"     * Applies multiple predicates to filter the filtered person list.","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"kaitinghh"},"content":"     * @param predicates List of predicates.","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"kaitinghh"},"content":"    void persistentUpdateFilteredList(List\u003c? extends Predicate\u003cPerson\u003e\u003e predicates);","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"wang-xinrong"},"content":"     * Deletes the given tutorial tag.","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"wang-xinrong"},"content":"     * The tutorial tag must exist in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"    void deleteTutorialTag(TutorialTag target);","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"     * Adds the given tutorial tag.","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"     * {@code tutorialTag} must not already exist in the address book.","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"    void addTutorialTag(TutorialTag tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"     * Returns true if a tutorial tag with the same identity as {@code tutorialTag} exists in the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"    boolean hasTutorialTag(TutorialTag tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"wang-xinrong"},"content":"    /** Returns an unmodifiable view of the filtered tutorial tag list */","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"    ObservableList\u003cTutorialTag\u003e getTutorialTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"    /** Returns a String representing the filtered tutorial tag list */","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"    String getTutorialTagListString();","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wongkj12":3,"kaitinghh":6,"wang-xinrong":24,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"    private FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"wongkj12"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"wongkj12"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"wongkj12"},"content":"        return addressBook.getPersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"wongkj12"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"kaitinghh"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"kaitinghh"},"content":"    public void persistentUpdateFilteredList(List\u003c? extends Predicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"kaitinghh"},"content":"        Predicate\u003cPerson\u003e combinedPredicate \u003d predicates.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"kaitinghh"},"content":"                .\u003cPredicate\u003cPerson\u003e\u003emap(p -\u003e (Predicate\u003cPerson\u003e) p)","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"wongkj12"},"content":"                .reduce(Predicate::and)","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"kaitinghh"},"content":"                .orElse(person -\u003e true);","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"kaitinghh"},"content":"        filteredPersons.setPredicate(combinedPredicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"wang-xinrong"},"content":"    public void deleteTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"wang-xinrong"},"content":"        addressBook.removeTutorialTag(tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"wang-xinrong"},"content":"    public void addTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"wang-xinrong"},"content":"        addressBook.addTutorialTag(tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"wang-xinrong"},"content":"    public boolean hasTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"wang-xinrong"},"content":"        return addressBook.hasTutorialTag(tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"wang-xinrong"},"content":"    public ObservableList\u003cTutorialTag\u003e getTutorialTagList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"wang-xinrong"},"content":"        return addressBook.getTutorialTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"wang-xinrong"},"content":"    public String getTutorialTagListString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"wang-xinrong"},"content":"        return addressBook.getTutorialTagListString();","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wongkj12":6,"kaitinghh":9,"wang-xinrong":25,"-":146}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"     * Returns an unmodifiable view of the tutorial tag list.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"     * This list will not contain any duplicate tutorial tags.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"    ObservableList\u003cTutorialTag\u003e getTutorialTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wang-xinrong":7,"-":17}},{"path":"src/main/java/seedu/address/model/person/FieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaitinghh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import seedu.address.commons.util.StatefulStringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"public class FieldContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"    private Prefix prefix;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"kaitinghh"},"content":"     * Constructor for predicate with a prefix","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"     * @param prefix prefix category to search within","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"     * @param keywords keywords to search for","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"    public FieldContainsKeywordsPredicate(Prefix prefix, List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"     * Constructor for predicate without a prefix. Used for type finding.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"     * @param keywords keywords to search for","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"    public FieldContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"        if (this.prefix \u003d\u003d null) { // type","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"            return keywords.stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"                    .anyMatch(keyword -\u003e StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"                            .containsSubwordIgnoreCase(person.getType().name(), keyword));","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"        } else if (this.prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"            return keywords.stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"                    .anyMatch(keyword -\u003e StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"                            .containsSubwordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"kaitinghh"},"content":"        } else if (this.prefix.equals(PREFIX_ID)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"kaitinghh"},"content":"            return keywords.stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"                    .anyMatch(keyword -\u003e StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"                            .containsSubwordIgnoreCase(person.getId().value, keyword));","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"kaitinghh"},"content":"        } else if (this.prefix.equals(PREFIX_PHONE)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"kaitinghh"},"content":"            return keywords.stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"                    .anyMatch(keyword -\u003e StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"                            .containsSubwordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"kaitinghh"},"content":"        } else if (this.prefix.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"kaitinghh"},"content":"            return keywords.stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"                    .anyMatch(keyword -\u003e StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"                            .containsSubwordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"yongkotaro"},"content":"        } else if (this.prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"yongkotaro"},"content":"            return keywords.stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"yongkotaro"},"content":"                        .anyMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"                                .anyMatch(tag -\u003e StatefulStringUtil.tagContainsWordIgnoreCase(tag, keyword)));","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"kaitinghh"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"kaitinghh"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"kaitinghh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"kaitinghh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"kaitinghh"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"kaitinghh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"kaitinghh"},"content":"        if (!(other instanceof FieldContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"kaitinghh"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate otherFieldContainsKeywordsPredicate \u003d (FieldContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"kaitinghh"},"content":"        return keywords.equals(otherFieldContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"kaitinghh"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"kaitinghh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"kaitinghh"},"content":"        return new ToStringBuilder(this).add(this.prefix + \" keywords\", keywords).toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"yyccbb":12,"yongkotaro":4,"kaitinghh":75}},{"path":"src/main/java/seedu/address/model/person/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaitinghh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":" * Represents a Person\u0027s student/staff ID in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"public class Id {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"kaitinghh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"            \"ID should start and end with a letter, with 7 digits in between\";","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z][0-9]{7}[a-zA-Z]\";","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"    public final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"     * @param id A valid id.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"    public Id(String id) {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"        requireNonNull(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"kaitinghh"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"        value \u003d id;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"        return value;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"        if (!(other instanceof Id)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"kaitinghh"},"content":"        Id otherId \u003d (Id) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"kaitinghh"},"content":"        return value.equals(otherId.value);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"kaitinghh"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"kaitinghh"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"kaitinghh"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"kaitinghh":60}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"public abstract class Person {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    final PersonType type;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    final Name name;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    final Id id;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    final Phone phone;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    final Email email;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"    Person(PersonType type, Name name, Id id, Phone phone, Email email) {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"        requireAllNonNull(type, name, id, phone, email);","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"     * Creates either a Student or a TA.","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"     * All fields are compulsory.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"     * @param type","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"     * @param name","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"     * @param id","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"     * @param phone","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"     * @param email","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"     * @param tags","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"    public static Person of(PersonType type, Name name, Id id, Phone phone, Email email,","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"                     Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"        requireAllNonNull(type, name, id, phone, email, tags);","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        if (type \u003d\u003d PersonType.STU) {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"yongkotaro"},"content":"            return new Student(name, id, phone, email, tags);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"yongkotaro"},"content":"            return new Ta(name, id, phone, email, tags);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"    public PersonType getType() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        return type;","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"kaitinghh"},"content":"    public Id getId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"kaitinghh"},"content":"        return id;","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"    public abstract Set\u003cTag\u003e getTags();","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"kaitinghh"},"content":"     * Returns true if both persons have the same id.","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"kaitinghh"},"content":"                \u0026\u0026 otherPerson.getId().equals(getId());","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yyccbb":26,"yongkotaro":6,"kaitinghh":6,"-":50}},{"path":"src/main/java/seedu/address/model/person/PersonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents the possible types of a contact entry in the tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" * Guarantees: is valid as declared in {@link #isValidPersonType(String)}","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"public enum PersonType {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"    STU,","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"    TA;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Person type should only be \u0027stu\u0027 or \u0027ta\u0027\";","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"     * Returns the PersonType enum based on the given string.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    public static PersonType getPersonType(String type) {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"        switch (type) {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"        case \"stu\":","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"            return PersonType.STU;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"        case \"ta\":","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"            return PersonType.TA;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"        default:","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"            return PersonType.STU;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"     * Returns true if a given string is a valid person type.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"    public static boolean isValidPersonType(String type) {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        return type.equals(\"stu\") || type.equals(\"ta\");","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        return name().toLowerCase();","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"yyccbb":38}},{"path":"src/main/java/seedu/address/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":" * Represents a Student in TrAcker.","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":" * A Student is a type of Person.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"public class Student extends Person {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"     * @param name","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"     * @param id","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"     * @param phone","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"     * @param email","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"     * @param tags","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    public Student(Name name, Id id, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        super(PersonType.STU, name, id, phone, email);","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"        return name.equals(otherStudent.name)","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 type.equals(otherStudent.type)","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 id.equals(otherStudent.id)","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 phone.equals(otherStudent.phone)","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 email.equals(otherStudent.email)","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 tags.equals(otherStudent.tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"        return Objects.hash(type, name, phone, email, tags);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"                .add(\"type\", type)","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"yyccbb":77}},{"path":"src/main/java/seedu/address/model/person/Ta.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":" * Represents a TA in TrAcker.","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":" * A TA is a type of Person.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"public class Ta extends Person {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"     * @param name","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"     * @param id","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"     * @param phone","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"     * @param email","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"     * @param tags","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    public Ta(Name name, Id id, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        super(PersonType.TA, name, id, phone, email);","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        if (!(other instanceof Ta)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        Ta otherTA \u003d (Ta) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"        return name.equals(otherTA.name)","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 type.equals(otherTA.type)","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 id.equals(otherTA.id)","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 phone.equals(otherTA.phone)","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 email.equals(otherTA.email)","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 tags.equals(otherTA.tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"        return Objects.hash(type, name, phone, email, tags);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"                .add(\"type\", type)","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"                .add(\"id\", id)","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"                .toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"yyccbb":77}},{"path":"src/main/java/seedu/address/model/person/TutorialTagContainsGroupPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import seedu.address.commons.util.StatefulStringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":" * Tests that a {@code TA}\u0027s {@code Tag} matches any of the tutorial groups given.","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"public class TutorialTagContainsGroupPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"    private final String tutorialGroup;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"    public TutorialTagContainsGroupPredicate(String tutorialGroup) {","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"        this.tutorialGroup \u003d tutorialGroup;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"        if (person.getType() !\u003d PersonType.TA) {","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"        return person.getTags().stream()","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"                .anyMatch(tag -\u003e StatefulStringUtil.containsTutorialGroup(tag, tutorialGroup));","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"yongkotaro"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"        if (!(other instanceof TutorialTagContainsGroupPredicate)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"        TutorialTagContainsGroupPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"yongkotaro"},"content":"                (TutorialTagContainsGroupPredicate) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"        return tutorialGroup.equals(otherNameContainsKeywordsPredicate.tutorialGroup);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"yongkotaro"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"        return new ToStringBuilder(this).add(\"tutorialGroup\", tutorialGroup).toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yyccbb":2,"yongkotaro":46}},{"path":"src/main/java/seedu/address/model/person/UniqueTutorialTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.exceptions.DuplicateTutorialTagException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.exceptions.TutorialTagNotFoundException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":" * A list of tutorial tags that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":" * A tutorial tag is considered unique by comparing using {@code TutorialTag#isSameTutorialTag(TutorialTag)}.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":" * As such, adding and updating of tutorial tags uses TutorialTag#isSameTutorialTag(TutorialTag) for equality so as to","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":" * ensure that the tutorial tag being added or updated is unique in terms of identity in the UniqueTutorialTagList.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":" * However, the removal of a tutorial tag uses TutorialTag#equals(Object) so as to ensure that the tutorial tag","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":" * with exactly the same TagName will be removed.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":" *","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"public class UniqueTutorialTagList implements Iterable\u003cTutorialTag\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    private final ObservableList\u003cTutorialTag\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"    private final ObservableList\u003cTutorialTag\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"     * Returns true if the list contains an equivalent tutorial tag as the given argument.","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"    public boolean contains(TutorialTag toCheck) {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"     * Adds a tutorial tag to the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"     * The tutorial tag must not already exist in the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"    public void add(TutorialTag toAdd) {","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"            throw new DuplicateTutorialTagException();","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"     * Removes the equivalent tutorial tag from the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"     * The tutorial tag must exist in the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"    public void remove(TutorialTag toRemove) {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"            throw new TutorialTagNotFoundException();","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"    public void setTutorialTags(UniqueTutorialTagList replacement) {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"     * Replaces the contents of this list with {@code tutorialTags}.","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"     * {@code tutorialTags} must not contain duplicate tutorial tags.","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"    public void setTutorialTags(List\u003cTutorialTag\u003e tutorialTags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"        requireAllNonNull(tutorialTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"        if (!tutorialTagsAreUnique(tutorialTags)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"            throw new DuplicateTutorialTagException();","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"        internalList.setAll(tutorialTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"wang-xinrong"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"    public ObservableList\u003cTutorialTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"wang-xinrong"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"wang-xinrong"},"content":"    public Iterator\u003cTutorialTag\u003e iterator() {","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"wang-xinrong"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"wang-xinrong"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"wang-xinrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"wang-xinrong"},"content":"        if (!(other instanceof UniqueTutorialTagList)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"wang-xinrong"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"        UniqueTutorialTagList otherUniqueTutorialTagsList \u003d (UniqueTutorialTagList) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"        return internalList.equals(otherUniqueTutorialTagsList.internalList);","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"        return internalList.toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"     * Returns true if {@code tutorialTags} contains only unique tutorial tags.","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"    private boolean tutorialTagsAreUnique(List\u003cTutorialTag\u003e tutorialTags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"        for (int i \u003d 0; i \u003c tutorialTags.size() - 1; i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"wang-xinrong"},"content":"            for (int j \u003d i + 1; j \u003c tutorialTags.size(); j++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"wang-xinrong"},"content":"                if (tutorialTags.get(i).isSameTutorialTag(tutorialTags.get(j))) {","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"wang-xinrong"},"content":"                    return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"wang-xinrong"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"wang-xinrong"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"        return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"wang-xinrong":133}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateTutorialTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":" * Signals that the operation will result in duplicate TutoiralTags (TutorialTags are considered duplicates","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":" * if they have the same TagName).","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"public class DuplicateTutorialTagException extends RuntimeException {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"    public DuplicateTutorialTagException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"        super(\"Operation would result in duplicate TutorialTags\");","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"wang-xinrong":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/TutorialTagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":" * Signals that the operation is unable to find the specified TutorialTag.","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"public class TutorialTagNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"wang-xinrong":6}},{"path":"src/main/java/seedu/address/model/tag/AssignmentTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":" * Represents an assignment tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"public class AssignmentTag extends Tag {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagName   A valid tag name.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagStatus A valid tag status.","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"    public AssignmentTag(String tagName, TagStatus tagStatus) {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"        super(tagName, tagStatus);","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"wang-xinrong":16}},{"path":"src/main/java/seedu/address/model/tag/AttendanceTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":" * Represents an attendance tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"public class AttendanceTag extends Tag {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagName   A valid tag name.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagStatus A valid tag status.","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"    public AttendanceTag(String tagName, TagStatus tagStatus) {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"        super(tagName, tagStatus);","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"wang-xinrong":16}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"public abstract class Tag {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"    private final String tagName;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"    private TagStatus tagStatus;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"    private TagType tagType;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    protected Tag(String tagName, TagStatus tagStatus) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        // require the tagStatus not to be null for now","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"        // in the future, a null tagStatus input should be set to INCOMPLETE_GOOD","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"        // by default","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(tagStatus);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"        this.tagStatus \u003d tagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"        this.tagType \u003d getTagTypeWithTagStatus(tagStatus);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"     * Creates a new Tag with specified tagName and tagStatus.","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagName   Name of the tag to be created.","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagStatus Status of the tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"     * @return A new tag of specific type corresponding to the TagStatus input.","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"    public static Tag createTag(String tagName, TagStatus tagStatus) {","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"        // require the tagStatus not to be null for now","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"        // in the future, a null tagStatus input should be set to INCOMPLETE_GOOD","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"        // by default","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"        requireNonNull(tagStatus);","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"        TagType tagType \u003d getTagTypeWithTagStatus(tagStatus);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"        switch (tagType) {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"        case ASSIGNMENT:","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"            return new AssignmentTag(tagName, tagStatus);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"        case TUTORIAL:","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"            return new TutorialTag(tagName, tagStatus);","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"        case ATTENDANCE:","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"            return new AttendanceTag(tagName, tagStatus);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"        default:","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"    public String getTagName() {","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"kaitinghh"},"content":"        return tagName;","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"    public TagStatus getTagStatus() {","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"        return tagStatus;","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"wang-xinrong"},"content":"    public TagType getTagType() {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"        return tagType;","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"wang-xinrong"},"content":"    public static TagType getTagTypeWithTagStatus(TagStatus ts) {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"wang-xinrong"},"content":"        switch (ts) {","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"wang-xinrong"},"content":"        case COMPLETE_GOOD:","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"        case COMPLETE_BAD:","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"wang-xinrong"},"content":"        case INCOMPLETE_GOOD:","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"wang-xinrong"},"content":"        case INCOMPLETE_BAD:","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"wang-xinrong"},"content":"            return TagType.ASSIGNMENT;","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"wang-xinrong"},"content":"        case PRESENT:","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"wang-xinrong"},"content":"        case ABSENT:","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"wang-xinrong"},"content":"        case ABSENT_WITH_REASON:","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"wang-xinrong"},"content":"            return TagType.ATTENDANCE;","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"        case ASSIGNED:","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"        case AVAILABLE:","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"            return TagType.TUTORIAL;","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"wang-xinrong"},"content":"            return TagType.DEFAULT_TYPE;","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"wang-xinrong"},"content":"        return \"[ \" + tagName + \" : \" + tagStatus + \" ]\";","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"    public static void isTagNameValid(String tagName) throws IllegalArgumentException {","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"wang-xinrong"},"content":"     * @param currTags  current tag set to be updated.","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagName   name of the new tag.","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagStatus tagStatus of the new tag.","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"wang-xinrong"},"content":"     * @return","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"wang-xinrong"},"content":"    public static Set\u003cTag\u003e updateTagsWithNewTag(Set\u003cTag\u003e currTags, String tagName, TagStatus tagStatus) {","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"wang-xinrong"},"content":"        // Instead of retrieving the Tag sharing the same name and update it,","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"wang-xinrong"},"content":"        // remove the potentially existing Tag of the same name from the hashset","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"wang-xinrong"},"content":"        // and then add in a new Tag with the same tagName but updated tagStatus.","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"yyccbb"},"content":"        // This is because Java Set does not provide a get() method.","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"wang-xinrong"},"content":"        Tag newTag \u003d Tag.createTag(tagName, tagStatus);","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"wang-xinrong"},"content":"        currTags.remove(newTag);","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"wang-xinrong"},"content":"        currTags.add(Tag.createTag(tagName, tagStatus));","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"wang-xinrong"},"content":"        return currTags;","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"yyccbb"},"content":"     * Merges the current set of tags with a new set of tags sharing the same status,","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"yyccbb"},"content":"     * identified by their tag names, updating the tag status of existing tags in the","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"yyccbb"},"content":"     * process.","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"yyccbb"},"content":"     * {@code updateTagsWithNewTag} method is called on each new tag.","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"yyccbb"},"content":"    public static Set\u003cTag\u003e updateTagsWithNewTags(Set\u003cTag\u003e currTags, Set\u003cString\u003e tagNames, TagStatus tagStatus) {","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"yyccbb"},"content":"        tagNames.forEach(x -\u003e updateTagsWithNewTag(currTags, x, tagStatus));","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"yyccbb"},"content":"        return currTags;","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"wang-xinrong"},"content":"     * @param currTags current tag set to be updated.","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagName  name of the new tag.","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"wang-xinrong"},"content":"     * @return","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"yyccbb"},"content":"    public static Set\u003cTag\u003e removeTagFromTagSet(Set\u003cTag\u003e currTags, String tagName) {","lastModifiedDate":"2024-04-05"},{"lineNumber":170,"author":{"gitId":"wang-xinrong"},"content":"        // remove the potentially existing Tag of the same name from the hashset.","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"wang-xinrong"},"content":"        Tag newTag \u003d Tag.createTag(tagName, TagStatus.DEFAULT_STATUS);","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"wang-xinrong"},"content":"        currTags.remove(newTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"wang-xinrong"},"content":"        return currTags;","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":177,"author":{"gitId":"yyccbb"},"content":"     * Removes the tags with the specified tag names from the current set of tags.","lastModifiedDate":"2024-04-05"},{"lineNumber":178,"author":{"gitId":"yyccbb"},"content":"     * @param currTags","lastModifiedDate":"2024-04-05"},{"lineNumber":179,"author":{"gitId":"yyccbb"},"content":"     * @param tagNames","lastModifiedDate":"2024-04-05"},{"lineNumber":180,"author":{"gitId":"yyccbb"},"content":"     * @return","lastModifiedDate":"2024-04-05"},{"lineNumber":181,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":182,"author":{"gitId":"yyccbb"},"content":"    public static Set\u003cTag\u003e removeTagsFromTagSet(Set\u003cTag\u003e currTags, Set\u003cString\u003e tagNames) {","lastModifiedDate":"2024-04-05"},{"lineNumber":183,"author":{"gitId":"yyccbb"},"content":"        currTags.removeAll(tagNames.stream()","lastModifiedDate":"2024-04-05"},{"lineNumber":184,"author":{"gitId":"yyccbb"},"content":"                .map(x -\u003e Tag.createTag(x, TagStatus.DEFAULT_STATUS))","lastModifiedDate":"2024-04-05"},{"lineNumber":185,"author":{"gitId":"yyccbb"},"content":"                .collect(Collectors.toSet()));","lastModifiedDate":"2024-04-05"},{"lineNumber":186,"author":{"gitId":"yyccbb"},"content":"        return currTags;","lastModifiedDate":"2024-04-05"},{"lineNumber":187,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":188,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":189,"author":{"gitId":"wang-xinrong"},"content":"    public boolean isAttendance() {","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"wang-xinrong"},"content":"        return tagType \u003d\u003d TagType.ATTENDANCE;","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"wang-xinrong"},"content":"    public boolean isAssignment() {","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"wang-xinrong"},"content":"        return tagType \u003d\u003d TagType.ASSIGNMENT;","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"wang-xinrong"},"content":"    public boolean isTutorial() {","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"wang-xinrong"},"content":"        return tagType \u003d\u003d TagType.TUTORIAL;","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"wongkj12"},"content":"    public boolean isAssigned() {","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"wongkj12"},"content":"        return isTutorial() \u0026\u0026 (tagStatus \u003d\u003d TagStatus.ASSIGNED);","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"wongkj12"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"wongkj12"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"wongkj12"},"content":"        return isTutorial() \u0026\u0026 (tagStatus \u003d\u003d TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"wongkj12"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yyccbb":27,"yongkotaro":1,"wongkj12":6,"kaitinghh":4,"wang-xinrong":108,"-":60}},{"path":"src/main/java/seedu/address/model/tag/TagStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":" * Represents submission / attendance status of a tag.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"public enum TagStatus {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"    COMPLETE_GOOD, // complete before deadline","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"    COMPLETE_BAD, // complete after deadline","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"    INCOMPLETE_GOOD, // incomplete before deadline","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"    INCOMPLETE_BAD, // incomplete after deadline","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"    PRESENT,","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"    ABSENT,","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"    ABSENT_WITH_REASON,","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"    ASSIGNED, AVAILABLE;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"    public static final TagStatus DEFAULT_STATUS \u003d INCOMPLETE_GOOD;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"    public static final String COMPLETE_GOOD_KEYWORD \u003d \"cg\";","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"    public static final String COMPLETE_BAD_KEYWORD \u003d \"cb\";","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"    public static final String INCOMPLETE_GOOD_KEYWORD \u003d \"ig\";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"    public static final String INCOMPLETE_BAD_KEYWORD \u003d \"ib\";","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"    public static final String PRESENT_KEYWORD \u003d \"p\";","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"    public static final String ABSENT_KEYWORD \u003d \"a\";","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"    public static final String ABSENT_WITH_REASON_KEYWORD \u003d \"awr\";","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"    public static final String ASSIGNED_KEYWORD \u003d \"as\";","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    public static final String AVAILABLE_KEYWORD \u003d \"av\";","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"    public static final String INVALID_TAGSTATUS_ERROR_MSG \u003d \"Invalid TagStatus Flag, check out the help page for \"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"            + \"valid TagStatus tags.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"     * @param status Keyword corresponding each of the TagStatus.","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"     * @return TagStatus matching the keyword.","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"    public static TagStatus getTagStatus(String status) throws IllegalArgumentException {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"        switch (status) {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"        case COMPLETE_GOOD_KEYWORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"            return COMPLETE_GOOD;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"        case COMPLETE_BAD_KEYWORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"            return COMPLETE_BAD;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"        case INCOMPLETE_GOOD_KEYWORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"            return INCOMPLETE_GOOD;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"        case INCOMPLETE_BAD_KEYWORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"            return INCOMPLETE_BAD;","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"        case PRESENT_KEYWORD:","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"            return PRESENT;","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"        case ABSENT_KEYWORD:","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"            return ABSENT;","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"        case ABSENT_WITH_REASON_KEYWORD:","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"            return ABSENT_WITH_REASON;","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"        case ASSIGNED_KEYWORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"            return ASSIGNED;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"        case AVAILABLE_KEYWORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"            return AVAILABLE;","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"        default:","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"            throw new IllegalArgumentException(INVALID_TAGSTATUS_ERROR_MSG);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wang-xinrong":61}},{"path":"src/main/java/seedu/address/model/tag/TagType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":" * Represents the different types of tags.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"public enum TagType {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"    ASSIGNMENT,","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"    ATTENDANCE,","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"    TUTORIAL;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"    public static final TagType DEFAULT_TYPE \u003d ASSIGNMENT;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"wang-xinrong":11}},{"path":"src/main/java/seedu/address/model/tag/TutorialTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":" * Represents a tutorial tag.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"public class TutorialTag extends Tag {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagName   A valid tag name.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"     * @param tagStatus A valid tag status.","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"    public TutorialTag(String tagName, TagStatus tagStatus) {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"        super(tagName, tagStatus);","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"    public boolean isSameTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"        return this.getTagName().equals(tutorialTag.getTagName());","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"        return getTagName();","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"yongkotaro":1,"wang-xinrong":23}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"                Person.of(PersonType.STU, new Name(\"Alex Yeoh\"), new Id(\"A0777777L\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"                    new Email(\"alexyeoh@example\" + \".com\"), getTagSet(\"Assignment1\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"                Person.of(PersonType.STU, new Name(\"Bernice Yu\"), new Id(\"A9128392K\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"                    new Email(\"berniceyu@example.com\"), getTagSet(\"Assignment1\", \"Assignment2\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"wongkj12"},"content":"                Person.of(PersonType.TA, new Name(\"Charlotte Oliveiro\"), new Id(\"A2222222P\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"wongkj12"},"content":"                    new Email(\"charlotte@example.com\"), getTagSet()),","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"                Person.of(PersonType.STU, new Name(\"David Li\"), new Id(\"A9128392Z\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"                    new Email(\"lidavid@example.com\"), getTagSet(\"Assignment1\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"                Person.of(PersonType.STU, new Name(\"Irfan Ibrahim\"), new Id(\"B0198266Z\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"                    new Email(\"irfan@example.com\"), getTagSet(\"Assignment1\")),","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"                Person.of(PersonType.STU, new Name(\"Roy Balakrishnan\"), new Id(\"B0000666C\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"                    new Email(\"royb@example.com\"), getTagSet(\"Assignment1\"))","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"                .map(tagName -\u003e Tag.createTag(tagName, TagStatus.DEFAULT_STATUS))","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yyccbb":6,"yongkotaro":5,"wongkj12":2,"kaitinghh":1,"wang-xinrong":2,"-":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    private final String type;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"    private final String id;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"type\") String type, @JsonProperty(\"name\") String name,","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"                             @JsonProperty(\"id\") String id,","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"        type \u003d source.getType().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"kaitinghh"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, PersonType.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"        if (!PersonType.isValidPersonType(type)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalValueException(PersonType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"        final PersonType personType \u003d PersonType.getPersonType(type);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"kaitinghh"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"kaitinghh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"kaitinghh"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"kaitinghh"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"kaitinghh"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"yongkotaro"},"content":"        return Person.of(personType, modelName, modelId, modelPhone, modelEmail, modelTags);","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yyccbb":15,"yongkotaro":3,"kaitinghh":12,"-":94}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagType;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"    private final TagStatus tagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"    private final TagType tagType;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"    public JsonAdaptedTag(@JsonProperty(\"tagName\") String tagName,","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"                          @JsonProperty(\"tagStatus\") TagStatus tagStatus,","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"                          @JsonProperty(\"tagType\") TagType tagType) {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"        this.tagStatus \u003d tagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        this.tagType \u003d tagType;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"        tagStatus \u003d source.getTagStatus();","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"        tagType \u003d source.getTagType();","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"    @JsonProperty(\"tagName\")","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"    @JsonProperty(\"tagStatus\")","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"    public TagStatus getTagStatus() {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"        return tagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"    @JsonProperty(\"tagType\")","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"    public TagType getTagType() {","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"        return tagType;","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"        return Tag.createTag(tagName, tagStatus);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yongkotaro":1,"wang-xinrong":25,"-":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTutorialTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":" * Jackson-friendly version of {@link TutorialTag}.","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"class JsonAdaptedTutorialTag {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"    private final String tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"    public JsonAdaptedTutorialTag(@JsonProperty(\"tagName\") String tagName) {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"     * Converts a given {@code TutorialTag} into this class for Jackson use.","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"    public JsonAdaptedTutorialTag(TutorialTag source) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"    @JsonProperty(\"tagName\")","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"    public String getTagName() {","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"        return tagName;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"     * Converts this Jackson-friendly adapted tutorialTag object into the model\u0027s {@code TutorialTag} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tutorialTag.","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"    public TutorialTag toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"        if (!TutorialTag.isValidTagName(tagName)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"            throw new IllegalValueException(TutorialTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"        return new TutorialTag(tagName, TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"yongkotaro":1,"wang-xinrong":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"    public static final String MESSAGE_DUPLICATE_TUTORIALTAG \u003d \"Persons list contains duplicate tutorial tag(s).\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    private final List\u003cJsonAdaptedTutorialTag\u003e tutorialTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and tutorialTags.","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"                                       @JsonProperty(\"tutorialTags\") List\u003cJsonAdaptedTutorialTag\u003e tutorialTags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"        this.tutorialTags.addAll(tutorialTags);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"        tutorialTags.addAll(source.getTutorialTagList().stream().map(JsonAdaptedTutorialTag::new)","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"        for (JsonAdaptedTutorialTag jsonAdaptedTutorialTag : tutorialTags) {","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"            TutorialTag tutorialTag \u003d jsonAdaptedTutorialTag.toModelType();","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"            if (addressBook.hasTutorialTag(tutorialTag)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TUTORIALTAG);","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"            addressBook.addTutorialTag(tutorialTag);","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wang-xinrong":18,"-":58}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t11-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yongkotaro":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"kaitinghh"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"kaitinghh"},"content":"     * Opens the warning window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"kaitinghh"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"kaitinghh"},"content":"    public void handleWarning(WarningWindow warningWindow) {","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"yyccbb"},"content":"        Stage popupStage \u003d warningWindow.getRoot();","lastModifiedDate":"2024-04-05"},{"lineNumber":161,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":162,"author":{"gitId":"yyccbb"},"content":"        // ensure that the warningWindow is always focused and must","lastModifiedDate":"2024-04-05"},{"lineNumber":163,"author":{"gitId":"yyccbb"},"content":"        // be interacted before the user can return to the main window","lastModifiedDate":"2024-04-05"},{"lineNumber":164,"author":{"gitId":"yyccbb"},"content":"        popupStage.initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"yyccbb"},"content":"        popupStage.initOwner(primaryStage);","lastModifiedDate":"2024-04-05"},{"lineNumber":166,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":167,"author":{"gitId":"kaitinghh"},"content":"        warningWindow.showAndWait();","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":187,"author":{"gitId":"yyccbb"},"content":"     * Gives the command text field focus and makes it editable","lastModifiedDate":"2024-04-05"},{"lineNumber":188,"author":{"gitId":"yyccbb"},"content":"     * whenever enter or slash keys are pressed.","lastModifiedDate":"2024-04-05"},{"lineNumber":189,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":190,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-04-05"},{"lineNumber":191,"author":{"gitId":"yyccbb"},"content":"    private void handleEnterReleased(KeyEvent event) {","lastModifiedDate":"2024-04-05"},{"lineNumber":192,"author":{"gitId":"yyccbb"},"content":"        if (event.getCode() \u003d\u003d KeyCode.ENTER || event.getCode() \u003d\u003d KeyCode.SLASH) {","lastModifiedDate":"2024-04-05"},{"lineNumber":193,"author":{"gitId":"yyccbb"},"content":"            TextField commandInputField \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":194,"author":{"gitId":"yyccbb"},"content":"                    (TextField) ((StackPane) this.commandBoxPlaceholder.getChildren().get(0)).getChildren().get(0);","lastModifiedDate":"2024-04-05"},{"lineNumber":195,"author":{"gitId":"yyccbb"},"content":"            commandInputField.requestFocus();","lastModifiedDate":"2024-04-05"},{"lineNumber":196,"author":{"gitId":"yyccbb"},"content":"            commandInputField.setEditable(true);","lastModifiedDate":"2024-04-05"},{"lineNumber":197,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":198,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":199,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"kaitinghh"},"content":"            Command command \u003d logic.parseCommand(commandText);","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"kaitinghh"},"content":"            if (command.getNeedsWarningPopup()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"kaitinghh"},"content":"                WarningWindow warningWindow \u003d new WarningWindow();","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"kaitinghh"},"content":"                warningWindow.setMessage(commandText + \" - Click OK to confirm.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"kaitinghh"},"content":"                handleWarning(warningWindow);","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"kaitinghh"},"content":"                if (warningWindow.isOkClicked()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"kaitinghh"},"content":"                    return unsafeExecuteCommand(command);","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"kaitinghh"},"content":"                } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"kaitinghh"},"content":"                    CommandResult commandResult \u003d new CommandResult(\"Execution of \" + commandText","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"kaitinghh"},"content":"                            + \" aborted\", false, false);","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"kaitinghh"},"content":"                    logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"kaitinghh"},"content":"                    resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"kaitinghh"},"content":"                    return commandResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"kaitinghh"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"kaitinghh"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"kaitinghh"},"content":"                return unsafeExecuteCommand(command);","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"kaitinghh"},"content":"    private CommandResult unsafeExecuteCommand(Command command) throws CommandException, ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"kaitinghh"},"content":"        CommandResult commandResult \u003d logic.execute(command);","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yyccbb":24,"kaitinghh":30,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"wongkj12"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"wongkj12"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"wongkj12"},"content":"    private Label index;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wongkj12"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wongkj12"},"content":"    private Label type;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"    private FlowPane assignmentTags;","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"    private FlowPane attendanceTags;","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"    private FlowPane tutorialTags;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"wongkj12"},"content":"        index.setText(Integer.toString(displayedIndex));","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"yongkotaro"},"content":"        id.setText(person.getId().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"wongkj12"},"content":"        type.setText(person.getType().toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wongkj12"},"content":"        type.getStyleClass().setAll(person.getType() \u003d\u003d PersonType.TA ? \"type-ta\" : \"type-stu\");","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"        addTagsToContainer(person, Tag::isAssignment, assignmentTags);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"        addTagsToContainer(person, Tag::isAttendance, attendanceTags);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wongkj12"},"content":"        addTagsToContainer(person, Tag::isAssigned, tutorialTags);","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"wongkj12"},"content":"        addTagsToContainer(person, Tag::isAvailable, tutorialTags);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"    private void addTagsToContainer(Person person, Predicate\u003cTag\u003e filterPredicate, FlowPane container) {","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":78,"author":{"gitId":"yongkotaro"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.getTagName()))","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"wang-xinrong"},"content":"                .filter(filterPredicate)","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"wang-xinrong"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"yongkotaro"},"content":"                    Label tagLabel \u003d new Label(tag.getTagName());","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"                    tagLabel.getStyleClass().addAll(\"label\", tag.getTagStatus().toString().toLowerCase());","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"wang-xinrong"},"content":"                    container.getChildren().add(tagLabel);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"wang-xinrong"},"content":"                });","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wongkj12":12,"yongkotaro":3,"wang-xinrong":17,"-":54}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import seedu.address.commons.util.StatefulStringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/icon.png\";","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"            logger.severe(StatefulStringUtil.getDetails(e));","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"        logger.severe(title + \" \" + e.getMessage() + StatefulStringUtil.getDetails(e));","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yyccbb":3,"yongkotaro":1,"-":84}},{"path":"src/main/java/seedu/address/ui/WarningWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaitinghh"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":" * This class is the controller for the warning window pop-up.","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":"public class WarningWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(WarningWindow.class);","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"    private static final String FXML \u003d \"WarningWindow.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"    private Label warningMessage;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"    @FXML","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"    private Button okButton;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"    @FXML","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"    private Button cancelButton;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"    private boolean isOkClicked \u003d false;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"     * Constructor for Warning Window controller","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"     * @param root","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"    public WarningWindow(Stage root) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"        super(FXML, root);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"        Scene scene \u003d root.getScene();","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"        if (scene !\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"            cancelButton.setCancelButton(true);","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"            cancelButton.requestFocus();","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"            logger.warning(\"Scene is null, unable to set default button.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"        scene.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"            if (event.getCode() \u003d\u003d KeyCode.LEFT) {","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"                okButton.requestFocus();","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"kaitinghh"},"content":"                event.consume();","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"kaitinghh"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"kaitinghh"},"content":"        });","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"kaitinghh"},"content":"        scene.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"kaitinghh"},"content":"            if (event.getCode() \u003d\u003d KeyCode.RIGHT) {","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"                cancelButton.requestFocus();","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"kaitinghh"},"content":"                event.consume();","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"kaitinghh"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"kaitinghh"},"content":"        });","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"kaitinghh"},"content":"     * Creates a new WarningWindow.","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"kaitinghh"},"content":"    public WarningWindow() {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"        this(new Stage());","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"    public void setMessage(String message) {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"kaitinghh"},"content":"        warningMessage.setText(message);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"kaitinghh"},"content":"    public boolean isOkClicked() {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"kaitinghh"},"content":"        return isOkClicked;","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"kaitinghh"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"kaitinghh"},"content":"    private void okClicked() {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"kaitinghh"},"content":"        isOkClicked \u003d true;","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"kaitinghh"},"content":"        hide();","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"kaitinghh"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"kaitinghh"},"content":"    private void cancelClicked() {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"kaitinghh"},"content":"        hide();","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"kaitinghh"},"content":"     * Shows warning page and waits for user action.","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"kaitinghh"},"content":"    public void showAndWait() {","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"kaitinghh"},"content":"        logger.fine(\"Showing warning page about the application and waiting.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"kaitinghh"},"content":"        getRoot().showAndWait();","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"kaitinghh"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"kaitinghh"},"content":"     * Returns true if the warning window is currently being shown.","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"kaitinghh"},"content":"    public boolean isShowing() {","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"kaitinghh"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"kaitinghh"},"content":"     * Hides the warning window.","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"kaitinghh"},"content":"    public void hide() {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"kaitinghh"},"content":"        getRoot().hide();","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"kaitinghh"},"content":"     * Focuses on the warning window.","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"kaitinghh"},"content":"    public void focus() {","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"kaitinghh"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"yyccbb":4,"kaitinghh":113}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"\u003cStackPane styleClass\u003d\"pane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"  \u003cTextField style\u003d\"-fx-border-radius: 10\"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"          fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"yongkotaro":6,"-":4}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: #b6c2d6;","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"wongkj12"},"content":"/*","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-color: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"wongkj12"},"content":"}*/","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"yongkotaro"},"content":"    -fx-padding: 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":171,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":211,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: grey;","lastModifiedDate":"2024-03-25"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"wongkj12"},"content":".type-stu {","lastModifiedDate":"2024-03-18"},{"lineNumber":320,"author":{"gitId":"wongkj12"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":321,"author":{"gitId":"wongkj12"},"content":"    -fx-background-color: #e38314;","lastModifiedDate":"2024-03-18"},{"lineNumber":322,"author":{"gitId":"wongkj12"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-18"},{"lineNumber":323,"author":{"gitId":"wongkj12"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2024-03-18"},{"lineNumber":324,"author":{"gitId":"wongkj12"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-18"},{"lineNumber":325,"author":{"gitId":"wongkj12"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-18"},{"lineNumber":326,"author":{"gitId":"wongkj12"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":327,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":328,"author":{"gitId":"wongkj12"},"content":".type-ta {","lastModifiedDate":"2024-03-18"},{"lineNumber":329,"author":{"gitId":"wongkj12"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":330,"author":{"gitId":"wongkj12"},"content":"    -fx-background-color: #1d913c;","lastModifiedDate":"2024-03-18"},{"lineNumber":331,"author":{"gitId":"wongkj12"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-18"},{"lineNumber":332,"author":{"gitId":"wongkj12"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2024-03-18"},{"lineNumber":333,"author":{"gitId":"wongkj12"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-18"},{"lineNumber":334,"author":{"gitId":"wongkj12"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-18"},{"lineNumber":335,"author":{"gitId":"wongkj12"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":336,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-width: 5;","lastModifiedDate":"2024-03-25"},{"lineNumber":339,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-color: #e0e0e0;","lastModifiedDate":"2024-03-25"},{"lineNumber":340,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-25"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-25"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2024-03-25"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2024-03-25"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"wang-xinrong"},"content":"#assignmentTags {","lastModifiedDate":"2024-03-26"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"wang-xinrong"},"content":"#assignmentTags .label {","lastModifiedDate":"2024-03-26"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":382,"author":{"gitId":"wang-xinrong"},"content":"#assignmentTags .label.complete_good {","lastModifiedDate":"2024-03-26"},{"lineNumber":383,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-color: green; /* Green color for tags with complete_good status */","lastModifiedDate":"2024-03-18"},{"lineNumber":384,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":385,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":386,"author":{"gitId":"wang-xinrong"},"content":"#assignmentTags .label.complete_bad {","lastModifiedDate":"2024-03-26"},{"lineNumber":387,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-color: orange; /* Red color for tags with complete_bad status */","lastModifiedDate":"2024-03-26"},{"lineNumber":388,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":389,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":390,"author":{"gitId":"wang-xinrong"},"content":"#assignmentTags .label.incomplete_good {","lastModifiedDate":"2024-03-26"},{"lineNumber":391,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-color: grey; /* Blue color for tags with incomplete_good status */","lastModifiedDate":"2024-03-26"},{"lineNumber":392,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":393,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":394,"author":{"gitId":"wang-xinrong"},"content":"#assignmentTags .label.incomplete_bad {","lastModifiedDate":"2024-03-26"},{"lineNumber":395,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-color: red; /* Orange color for tags with incomplete_bad status */","lastModifiedDate":"2024-03-26"},{"lineNumber":396,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":397,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":398,"author":{"gitId":"wang-xinrong"},"content":"#attendanceTags {","lastModifiedDate":"2024-03-26"},{"lineNumber":399,"author":{"gitId":"wang-xinrong"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-26"},{"lineNumber":400,"author":{"gitId":"wang-xinrong"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-26"},{"lineNumber":401,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":402,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":403,"author":{"gitId":"wang-xinrong"},"content":"#attendanceTags .label {","lastModifiedDate":"2024-03-26"},{"lineNumber":404,"author":{"gitId":"wang-xinrong"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-26"},{"lineNumber":405,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2024-03-26"},{"lineNumber":406,"author":{"gitId":"wang-xinrong"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-26"},{"lineNumber":407,"author":{"gitId":"wang-xinrong"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-26"},{"lineNumber":408,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-26"},{"lineNumber":409,"author":{"gitId":"wang-xinrong"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-26"},{"lineNumber":410,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":411,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":412,"author":{"gitId":"wang-xinrong"},"content":"#attendanceTags .label.present {","lastModifiedDate":"2024-03-26"},{"lineNumber":413,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-color: green; /* Green color for tags with complete_good status */","lastModifiedDate":"2024-03-26"},{"lineNumber":414,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":415,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":416,"author":{"gitId":"wang-xinrong"},"content":"#attendanceTags .label.absent {","lastModifiedDate":"2024-03-26"},{"lineNumber":417,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-color: red; /* Red color for tags with complete_bad status */","lastModifiedDate":"2024-03-26"},{"lineNumber":418,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":419,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":420,"author":{"gitId":"wang-xinrong"},"content":"#attendanceTags .label.absent_with_reason {","lastModifiedDate":"2024-03-26"},{"lineNumber":421,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-color: orange; /* Blue color for tags with incomplete_good status */","lastModifiedDate":"2024-03-26"},{"lineNumber":422,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":423,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":424,"author":{"gitId":"wang-xinrong"},"content":"#tutorialTags {","lastModifiedDate":"2024-03-29"},{"lineNumber":425,"author":{"gitId":"wang-xinrong"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-29"},{"lineNumber":426,"author":{"gitId":"wang-xinrong"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-29"},{"lineNumber":427,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":428,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":429,"author":{"gitId":"wang-xinrong"},"content":"#tutorialTags .label {","lastModifiedDate":"2024-03-29"},{"lineNumber":430,"author":{"gitId":"wongkj12"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"wang-xinrong"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-29"},{"lineNumber":432,"author":{"gitId":"wang-xinrong"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-29"},{"lineNumber":433,"author":{"gitId":"wang-xinrong"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-29"},{"lineNumber":434,"author":{"gitId":"wang-xinrong"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-29"},{"lineNumber":435,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":436,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":437,"author":{"gitId":"wongkj12"},"content":"#tutorialTags .label.assigned {","lastModifiedDate":"2024-04-04"},{"lineNumber":438,"author":{"gitId":"wongkj12"},"content":"    -fx-background-color: #3e7b91; /* Dark blue color for tags with assigned status */","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"wongkj12"},"content":"    -fx-text-fill: white /* White tex fill for tags with assigned status */","lastModifiedDate":"2024-04-04"},{"lineNumber":440,"author":{"gitId":"wongkj12"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":441,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":442,"author":{"gitId":"wongkj12"},"content":"#tutorialTags .label.available {","lastModifiedDate":"2024-04-04"},{"lineNumber":443,"author":{"gitId":"wongkj12"},"content":"    -fx-background-color: white; /* White color for tags with assigned status */","lastModifiedDate":"2024-04-04"},{"lineNumber":444,"author":{"gitId":"wongkj12"},"content":"    -fx-text-fill: black /* Black text fill for tags with assigned status */","lastModifiedDate":"2024-04-04"},{"lineNumber":445,"author":{"gitId":"wongkj12"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":446,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":447,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":448,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yongkotaro":31,"wongkj12":34,"wang-xinrong":56,"-":327}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: #c92808 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"    -fx-background: #e0e0e0;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"    -fx-border-color: grey;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yongkotaro":3,"-":17}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: grey;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"#copyButton:focused{","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: grey;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yyccbb":3,"yongkotaro":5,"-":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"TrAcker\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"    \u003cImage url\u003d\"@/images/icon.png\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"      \u003cVBox onKeyReleased\u003d\"#handleEnterReleased\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #e0e0e0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #e0e0e0; -fx-border-color: white; -fx-border-width: 1 0 0 0\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"200\" minHeight\u003d\"100\" prefHeight\u003d\"200\" style\u003d\"-fx-background-color: #e0e0e0;\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" style\u003d\"-fx-border-width:0 0 0 0; -fx-background-color: #e0e0e0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yyccbb":10,"yongkotaro":1,"-":47}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"wongkj12"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"wongkj12"},"content":"      \u003cColumnConstraints hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"wongkj12"},"content":"      \u003cColumnConstraints hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"wongkj12"},"content":"    \u003cVBox alignment\u003d\"CENTER\" minHeight\u003d\"105\" prefWidth\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wongkj12"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wongkj12"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"15\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"wongkj12"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wongkj12"},"content":"      \u003cLabel fx:id\u003d\"index\" text\u003d\"\\$id\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"wongkj12"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"wongkj12"},"content":"    \u003cSeparator orientation\u003d\"VERTICAL\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wongkj12"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"2\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"        \u003cminWidth\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"          \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"          \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"        \u003c/minWidth\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wongkj12"},"content":"        \u003cLabel fx:id\u003d\"type\" text\u003d\"\\$type\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"      \u003cVBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"        \u003cFlowPane fx:id\u003d\"assignmentTags\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"        \u003cFlowPane fx:id\u003d\"attendanceTags\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"        \u003cFlowPane fx:id\u003d\"tutorialTags\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"      \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$id\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"yongkotaro"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wongkj12":12,"yongkotaro":8,"wang-xinrong":5,"-":24}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"  \u003cTextArea wrapText\u003d\"true\"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"            fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"yongkotaro":3,"-":6}},{"path":"src/main/resources/view/WarningWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaitinghh"},"content":"#okButton, #cancelButton, #warningMessage {","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"kaitinghh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"#okButton, #cancelButton {","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"#okButton:hover {","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"    -fx-background-color: grey;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"#cancelButton:hover {","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"    -fx-background-color: grey;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"#okButton:focused, #cancelButton:focused {","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"kaitinghh"},"content":"#okButton:armed {","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"    -fx-background-color: grey;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"#cancelButton:armed {","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"    -fx-background-color: grey;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"#warningMessageContainer {","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"kaitinghh"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yyccbb":7,"kaitinghh":27}},{"path":"src/main/resources/view/WarningWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaitinghh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Warning\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"    \u003cicons\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"        \u003cImage url\u003d\"@/images/warning_icon.png\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"    \u003cscene\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":"        \u003cScene\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"                \u003cURL value\u003d\"@WarningWindow.css\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"            \u003cHBox fx:id\u003d\"warningMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kaitinghh"},"content":"                    \u003cLabel fx:id\u003d\"warningMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kaitinghh"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"                    \u003c!-- OK Button --\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"                    \u003cButton fx:id\u003d\"okButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#okClicked\" text\u003d\"OK\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"kaitinghh"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"                    \u003c!-- Cancel Button --\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"                    \u003cButton fx:id\u003d\"cancelButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#cancelClicked\" text\u003d\"Cancel\"\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"                \u003c/children\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kaitinghh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kaitinghh"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kaitinghh"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kaitinghh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"yyccbb":6,"kaitinghh":46}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"        assertNotNull(AppUtil.getImage(\"/images/icon.png\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"yongkotaro":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/StatefulStringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"public class StatefulStringUtilTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    protected StatefulStringUtil testStatefulStringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"                .containsSubwordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"            -\u003e StatefulStringUtil.containsSubwordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"            -\u003e StatefulStringUtil.containsSubwordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"                .containsSubwordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.containsSubwordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2024-04-05"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil.containsSubwordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":118,"author":{"gitId":"yyccbb"},"content":"                .containsSubwordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2024-04-05"},{"lineNumber":119,"author":{"gitId":"yyccbb"},"content":"        assertFalse(StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":120,"author":{"gitId":"kaitinghh"},"content":"                .containsSubwordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":124,"author":{"gitId":"yyccbb"},"content":"                .containsSubwordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2024-04-05"},{"lineNumber":125,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":126,"author":{"gitId":"yyccbb"},"content":"                .containsSubwordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2024-04-05"},{"lineNumber":127,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":128,"author":{"gitId":"yyccbb"},"content":"                .containsSubwordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2024-04-05"},{"lineNumber":129,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":130,"author":{"gitId":"yyccbb"},"content":"                .containsSubwordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2024-04-05"},{"lineNumber":131,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"yyccbb"},"content":"                .containsSubwordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2024-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil.containsSubwordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulStringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2024-04-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatefulStringUtil.getDetails(null));","lastModifiedDate":"2024-04-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":155,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"yongkotaro"},"content":"    //---------------- Tests for tagContainsWordIgnoreCase --------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"yongkotaro"},"content":"    public void testTagContainsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e testStatefulStringUtil.tagContainsWordIgnoreCase(WED10, null));","lastModifiedDate":"2024-04-05"},{"lineNumber":161,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yyccbb":40,"yongkotaro":8,"kaitinghh":1,"-":113}},{"path":"src/test/java/seedu/address/commons/util/StringListUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaitinghh"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"public class StringListUtilTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"    public void separateWithSpaces_stringListWithSpaces_stringListSeparatedBySpace() {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"kaitinghh"},"content":"        String[] strArr \u003d {\"alice Bob\", \"terry\", \"Gavin\"};","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"        String[] expectedStrArr \u003d {\"alice\", \"Bob\", \"terry\", \"Gavin\"};","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"        assertArrayEquals(StringListUtil.separateWithSpaces(Arrays.asList(strArr)).toArray(), expectedStrArr);","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"kaitinghh":16}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"kaitinghh"},"content":"        assertCommandException(deleteCommand, String.format(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, \"[9]\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"kaitinghh"},"content":"        CommandResult result \u003d logic.execute(logic.parseCommand(inputCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"kaitinghh"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(logic.parseCommand(inputCommand)));","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"kaitinghh"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + ID_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"yongkotaro"},"content":"                + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yongkotaro":1,"kaitinghh":5,"-":169}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"    public void execute_getNeedsWarningPopup_returnsFalse() {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"        assertFalse(addCommand.getNeedsWarningPopup());","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"        Person alice \u003d new PersonBuilder().withId(\"A0123456B\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"kaitinghh"},"content":"        Person bob \u003d new PersonBuilder().withId(\"A0012345B\").build();","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"wongkj12"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"wongkj12"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"wongkj12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"wongkj12"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"kaitinghh"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"kaitinghh"},"content":"        public void persistentUpdateFilteredList(List\u003c? extends Predicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"kaitinghh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"kaitinghh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"wang-xinrong"},"content":"        public void deleteTutorialTag(TutorialTag target) {","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"wang-xinrong"},"content":"        public void addTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":191,"author":{"gitId":"wang-xinrong"},"content":"        public boolean hasTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-01"},{"lineNumber":192,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":195,"author":{"gitId":"wang-xinrong"},"content":"        public ObservableList\u003cTutorialTag\u003e getTutorialTagList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":196,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"wang-xinrong"},"content":"        public String getTutorialTagListString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"wongkj12":5,"kaitinghh":17,"wang-xinrong":23,"-":202}},{"path":"src/test/java/seedu/address/logic/commands/AvailableCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.THU10;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.person.TutorialTagContainsGroupPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"public class AvailableCommandTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"        TutorialTagContainsGroupPredicate predicate1 \u003d new TutorialTagContainsGroupPredicate(\"WED10\");","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"        TutorialTagContainsGroupPredicate predicate2 \u003d new TutorialTagContainsGroupPredicate(\"THU10\");","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"        AvailableCommand command1 \u003d new AvailableCommand(predicate1, WED10);","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"        AvailableCommand command2 \u003d new AvailableCommand(predicate2, THU10);","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(command1.equals(command1));","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"yongkotaro"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"        AvailableCommand command1Copy \u003d new AvailableCommand(predicate1, WED10);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(command1.equals(command1Copy));","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(command1.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(command1.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"yongkotaro"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(command1.equals(command2));","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"    public void execute_invalidTutorialTag_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"yongkotaro"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"yongkotaro"},"content":"        TutorialTagContainsGroupPredicate predicate \u003d new TutorialTagContainsGroupPredicate(\"TUES08\");","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"yongkotaro"},"content":"        AvailableCommand command \u003d new AvailableCommand(predicate, new TutorialTag(\"TUES08\", TagStatus.ASSIGNED));","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"yongkotaro"},"content":"            command.execute(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"yongkotaro"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"yongkotaro"},"content":"            assertEquals(\"Specified tutorial tag name is not allowed: TUES08\", e.getMessage());","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"yongkotaro"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yongkotaro":57}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kaitinghh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kaitinghh"},"content":"    public void execute_getNeedsWarningPopup_returnsTrue() {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kaitinghh"},"content":"        assertTrue(clearCommand.getNeedsWarningPopup());","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kaitinghh":9,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAGSTATUS;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_STU;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_TA;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    public static final String VALID_TYPE_AMY \u003d \"stu\";","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    public static final String VALID_TYPE_BOB \u003d \"ta\";","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"wongkj12"},"content":"    public static final String VALID_NAME_CARL \u003d \"Carl Kurz\";","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"    public static final String VALID_ID_AMY \u003d \"A1234567Z\";","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"    public static final String VALID_ID_BOB \u003d \"A0123456B\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wongkj12"},"content":"    public static final String VALID_ID_CARL \u003d \"A2222222D\";","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"wongkj12"},"content":"    public static final String VALID_PHONE_CARL \u003d \"95352563\";","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"wongkj12"},"content":"    public static final String VALID_EMAIL_CARL \u003d \"heinz@example.com\";","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"    public static final String VALID_TAG_FRIENDS \u003d \"friends\";","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"    public static final String VALID_TAG_ASSIGNMENT1 \u003d \"Assignment1\";","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"    public static final String VALID_TAG_ASSIGNMENT2 \u003d \"Assignment2\";","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"    public static final String VALID_TAG_ASSIGNMENT3 \u003d \"Assignment3\";","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"    public static final String VALID_TAGSTATUS_COMPLETE_GOOD \u003d \"cg\";","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"    public static final String VALID_TAGSTATUS_COMPLETE_BAD \u003d \"cb\";","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"    public static final String INVALID_EDIT_TUTORIAL_TAG_FLAG \u003d \"out\";","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"    public static final String VALID_EDIT_TUTORIAL_TAG_FLAG \u003d \"add\";","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"    public static final String TYPE_DESC_AMY \u003d \" \" + TYPE_STU + \" \";","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"    public static final String TYPE_DESC_BOB \u003d \" \" + TYPE_TA + \" \";","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wongkj12"},"content":"    public static final String TYPE_DESC_CARL \u003d \" \" + TYPE_STU + \" \";","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"wongkj12"},"content":"    public static final String NAME_DESC_CARL \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kaitinghh"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + \" \" + VALID_ID_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + \" \" + VALID_ID_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wongkj12"},"content":"    public static final String ID_DESC_CARL \u003d \" \" + PREFIX_ID + \" \" + VALID_ID_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"wongkj12"},"content":"    public static final String PHONE_DESC_CARL \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"wongkj12"},"content":"    public static final String EMAIL_DESC_CARL \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_FRIENDS;","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"    public static final String TAG_DESC_ASS1_ASS2 \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"            \" \" + PREFIX_TAG + \" \" + VALID_TAG_ASSIGNMENT1 + \" \" + VALID_TAG_ASSIGNMENT2;","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"    public static final String TAG_DESC_ASS3 \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_ASSIGNMENT3;","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"    public static final String TAG_DESC_ASS1_MULTIPLE_WHITESPACES_ASS2 \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"            \" \" + PREFIX_TAG + \"   \" + VALID_TAG_ASSIGNMENT1 + \"     \" + VALID_TAG_ASSIGNMENT2;","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"    public static final String TAGSTATUS_DESC_COMPLETE_GOOD \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"            \" \" + PREFIX_TAGSTATUS + \" \" + VALID_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"    public static final String TAGSTATUS_DESC_COMPLETE_BAD \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"            \" \" + PREFIX_TAGSTATUS + \" \" + VALID_TAGSTATUS_COMPLETE_BAD;","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"wang-xinrong"},"content":"    public static final String TAG_FRIEND_TAGSTATUS_COMPLETE_GOOD \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_FRIENDS","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"            + TAGSTATUS_DESC_COMPLETE_GOOD;","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"    public static final String TAG_FRIEND_TAGSTATUS_COMPLETE_BAD \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_FRIENDS","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"yyccbb"},"content":"            + TAGSTATUS_DESC_COMPLETE_BAD;","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"    public static final String TAG_ASS1_ASS2_TAGSTATUS_COMPLETE_GOOD \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"            TAG_DESC_ASS1_ASS2 + TAGSTATUS_DESC_COMPLETE_GOOD;","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"    public static final String TAG_ASS3_TAGSTATUS_COMPLETE_BAD \u003d TAG_DESC_ASS3 + TAGSTATUS_DESC_COMPLETE_BAD;","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"    public static final String TAG_ASS1_MULTIPLE_WHITESPACES_ASS2_TAGSTATUS_COMPLETE_GOOD \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"            TAG_DESC_ASS1_MULTIPLE_WHITESPACES_ASS2 + TAGSTATUS_DESC_COMPLETE_GOOD;","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"    public static final Set\u003cString\u003e VALID_TAGNAMES_SET_FRIENDS \u003d new HashSet\u003c\u003e(List.of(VALID_TAG_FRIENDS));","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"    public static final Set\u003cString\u003e VALID_TAGNAMES_SET_ASS1_ASS2 \u003d new HashSet\u003c\u003e(List.of(VALID_TAG_ASSIGNMENT1,","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"            VALID_TAG_ASSIGNMENT2));","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"    public static final Set\u003cString\u003e VALID_TAGNAMES_SET_ASS3 \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"            VALID_TAG_ASSIGNMENT3));","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"yyccbb"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \" \" + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"kaitinghh"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID + \" \" + \"123456789\";","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"kaitinghh"},"content":"    // IDs must start and end with a letter","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"yyccbb"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \" \" + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"yyccbb"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \" \" + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"yyccbb"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \" \" + \"ass*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"    public static final String VALID_TAG_FRIEND_DESC \u003d \" \" + PREFIX_TAG + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"            + VALID_TAG_FRIENDS; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"    public static final String INVALID_TAG_TAGSTATUS_COMPLETE_GOOD \u003d INVALID_TAG_DESC + \" \" + PREFIX_TAGSTATUS","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"            + \" \" + VALID_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"wang-xinrong"},"content":"    public static final String VALID_TAG_FRIEND_TAGSTATUS_COMPLETE_GOOD \u003d VALID_TAG_FRIEND_DESC + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"wang-xinrong"},"content":"            + PREFIX_TAGSTATUS + \" \" + VALID_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"yyccbb"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"yyccbb"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"kaitinghh"},"content":"        model.updateFilteredPersonList(new FieldContainsKeywordsPredicate(PREFIX_NAME, Arrays.asList(splitName[0])));","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yyccbb":44,"wongkj12":13,"kaitinghh":9,"wang-xinrong":19,"-":101}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"kaitinghh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"kaitinghh"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"    public void execute_getNeedsWarningPopup_returnsTrue() {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {INDEX_FIRST_PERSON};","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"        assertTrue(deleteCommand.getNeedsWarningPopup());","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"    public void execute_validSingleIndexUnfilteredList_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {INDEX_FIRST_PERSON};","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"kaitinghh"},"content":"    public void execute_validMultipleIndexUnfilteredList_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"kaitinghh"},"content":"        Person personToDelete1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"kaitinghh"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {INDEX_FIRST_PERSON, INDEX_SECOND_PERSON};","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"kaitinghh"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"                Messages.format(personToDelete1)) + \"\\n\" + String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"kaitinghh"},"content":"                Messages.format(personToDelete2));","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"kaitinghh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"kaitinghh"},"content":"        expectedModel.deletePerson(personToDelete1);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"kaitinghh"},"content":"        expectedModel.deletePerson(personToDelete2);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"kaitinghh"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"kaitinghh"},"content":"    public void execute_invalidSingleIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {outOfBoundIndex};","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"kaitinghh"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"kaitinghh"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"kaitinghh"},"content":"                        \"[\" + outOfBoundIndex.getOneBased() + \"]\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"kaitinghh"},"content":"    public void execute_validSingleIndexFilteredList_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {INDEX_FIRST_PERSON};","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"kaitinghh"},"content":"    public void execute_invalidSingleIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"kaitinghh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {outOfBoundIndex};","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"kaitinghh"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"kaitinghh"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"kaitinghh"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX,","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"kaitinghh"},"content":"                        \"[\" + INDEX_SECOND_PERSON.getOneBased() + \"]\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"kaitinghh"},"content":"        Index[] firstPersonIndexArr \u003d {INDEX_FIRST_PERSON};","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e firstPersonIndexSet \u003d new HashSet\u003c\u003e(Arrays.asList(firstPersonIndexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"kaitinghh"},"content":"        Index[] secondPersonIndexArr \u003d {INDEX_SECOND_PERSON};","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e secondPersonIndexSet \u003d new HashSet\u003c\u003e(Arrays.asList(secondPersonIndexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(firstPersonIndexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(secondPersonIndexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(firstPersonIndexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {targetIndex};","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"kaitinghh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"kaitinghh"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{index\u003d[\" + targetIndex + \"]}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kaitinghh":68,"-":105}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yyccbb":2,"kaitinghh":1,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yyccbb":1,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/EditTutTagListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"class EditTutTagListCommandTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"    static final String TAGNAME_WED10 \u003d \"WED10\";","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"    static final String TAGNAME_THU10 \u003d \"THU10\";","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_tutorialTagAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommandTest.ModelStubAcceptingTutorialTagAdded modelStub \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"                new EditTutTagListCommandTest.ModelStubAcceptingTutorialTagAdded();","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"        new EditTutTagListCommand(TAGNAME_WED10, EditTutTagListCommand.CommandSubtype.ADD)","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"                .execute(modelStub);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(Arrays.asList(WED10), modelStub.tutorialTagAdded);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_tutorialTagDeletedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommandTest.ModelStubAcceptingTutorialTagAdded modelStub \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"                new EditTutTagListCommandTest.ModelStubAcceptingTutorialTagAdded();","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"        modelStub.addTutorialTag(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"        new EditTutTagListCommand(TAGNAME_WED10, EditTutTagListCommand.CommandSubtype.DELETE)","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"                .execute(modelStub);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(modelStub.hasTutorialTag(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_tutorialAddDuplicateTutorialTag_addFailed() throws Exception {","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommandTest.ModelStubAcceptingTutorialTagAdded modelStub \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"                new EditTutTagListCommandTest.ModelStubAcceptingTutorialTagAdded();","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"        modelStub.addTutorialTag(WED10);","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommand command \u003d new EditTutTagListCommand(TAGNAME_WED10,","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"                EditTutTagListCommand.CommandSubtype.ADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(modelStub));","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_listIsFiltered_showsEverything() throws Exception {","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommandTest.ModelStubAcceptingTutorialTagAdded modelStub \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"                new EditTutTagListCommandTest.ModelStubAcceptingTutorialTagAdded();","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommand command \u003d new EditTutTagListCommand(EditTutTagListCommand.CommandSubtype.LIST);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"wang-xinrong"},"content":"        CommandResult result \u003d command.execute(modelStub);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"        CommandResult expectedResult \u003d new CommandResult(EditTutTagListCommand.EMPTY_TUTORIALTAGLIST_OUTPUT);","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(expectedResult, result);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"    public void equals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommand addWed10Command \u003d new EditTutTagListCommand(TAGNAME_WED10,","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"wang-xinrong"},"content":"                EditTutTagListCommand.CommandSubtype.ADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommand addThu10Command \u003d new EditTutTagListCommand(TAGNAME_THU10,","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"wang-xinrong"},"content":"                EditTutTagListCommand.CommandSubtype.ADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"wang-xinrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(addWed10Command.equals(addWed10Command));","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommand addWed10CommandCopy \u003d new EditTutTagListCommand(TAGNAME_WED10,","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"                EditTutTagListCommand.CommandSubtype.ADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(addWed10Command.equals(addWed10CommandCopy));","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"wang-xinrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(addWed10Command.equals(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"wang-xinrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(addWed10Command.equals(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"        // different tutorialTag -\u003e returns false","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(addWed10Command.equals(addThu10Command));","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommand editTutTagListCommand \u003d new EditTutTagListCommand(TAGNAME_WED10,","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"                EditTutTagListCommand.CommandSubtype.ADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"        String expected \u003d EditTutTagListCommand.class.getCanonicalName() + \"{tagName\u003d\" + TAGNAME_WED10 + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(expected, editTutTagListCommand.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"wang-xinrong"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"wang-xinrong"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"wang-xinrong"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"wang-xinrong"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"wang-xinrong"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"wang-xinrong"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"wang-xinrong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"wang-xinrong"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"wang-xinrong"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"wang-xinrong"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"wongkj12"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"wongkj12"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"wongkj12"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"wongkj12"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"wang-xinrong"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"wang-xinrong"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"wang-xinrong"},"content":"        public void persistentUpdateFilteredList(List\u003c? extends Predicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"wang-xinrong"},"content":"        public void deleteTutorialTag(TutorialTag target) {","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"wang-xinrong"},"content":"        public void addTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"wang-xinrong"},"content":"        public boolean hasTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"wang-xinrong"},"content":"        public ObservableList\u003cTutorialTag\u003e getTutorialTagList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"wang-xinrong"},"content":"        public String getTutorialTagListString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"wang-xinrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"wang-xinrong"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"wang-xinrong"},"content":"    private class ModelStubAcceptingTutorialTagAdded extends ModelStub {","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"wang-xinrong"},"content":"        final ArrayList\u003cTutorialTag\u003e tutorialTagAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"wang-xinrong"},"content":"        public boolean hasTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"wang-xinrong"},"content":"            requireNonNull(tutorialTag);","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"wang-xinrong"},"content":"            return tutorialTagAdded.stream().anyMatch(tutorialTag::isSameTutorialTag);","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"wang-xinrong"},"content":"        public void addTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"wang-xinrong"},"content":"            requireNonNull(tutorialTag);","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"wang-xinrong"},"content":"            tutorialTagAdded.add(tutorialTag);","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"wang-xinrong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"wang-xinrong"},"content":"            return new AddressBook();","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"wang-xinrong"},"content":"        public ObservableList\u003cTutorialTag\u003e getTutorialTagList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"wang-xinrong"},"content":"            return FXCollections.observableArrayList(tutorialTagAdded);","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"wang-xinrong"},"content":"        public void deleteTutorialTag(TutorialTag target) {","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"wang-xinrong"},"content":"            tutorialTagAdded.remove(target);","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"wongkj12"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"wongkj12"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"wongkj12"},"content":"            return new AddressBook().getPersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"wongkj12"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"wongkj12"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"wang-xinrong"},"content":"        public String getTutorialTagListString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"wang-xinrong"},"content":"            return \"Available Tutorial Tag(s): [ ]\";","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"wang-xinrong"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wongkj12":11,"wang-xinrong":252}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSON_LISTED_OVERVIEW;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate[] firstPredicate \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"            {new FieldContainsKeywordsPredicate(Collections.singletonList(\"first\"))};","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate[] secondPredicate \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"            {new FieldContainsKeywordsPredicate(Collections.singletonList(\"second\"))};","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(Arrays.asList(firstPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(Arrays.asList(secondPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(Arrays.asList(firstPredicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSON_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate[] predicate \u003d {preparePredicate(\" \")};","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"kaitinghh"},"content":"        FindCommand command \u003d new FindCommand(Arrays.asList(predicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"kaitinghh"},"content":"        expectedModel.updateFilteredPersonList(predicate[0]);","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate[] predicate \u003d {preparePredicate(\"Kurz Elle Kunz\")};","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"kaitinghh"},"content":"        FindCommand command \u003d new FindCommand(Arrays.asList(predicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"kaitinghh"},"content":"        expectedModel.updateFilteredPersonList(predicate[0]);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate[] predicate \u003d {new FieldContainsKeywordsPredicate(Arrays.asList(\"keyword\"))};","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"kaitinghh"},"content":"        FindCommand findCommand \u003d new FindCommand(Arrays.asList(predicate));","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"kaitinghh"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate[0] + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"kaitinghh"},"content":"    private FieldContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"kaitinghh"},"content":"        return new FieldContainsKeywordsPredicate(PREFIX_NAME, Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yyccbb":2,"kaitinghh":21,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAGNAMES_SET_ASS1_ASS2;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAGNAMES_SET_ASS3;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ASSIGNMENT3;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_1_SET;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_2_SET;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        PersonBuilder updatedPersonBuilder \u003d new PersonBuilder(personInFilteredList);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"        VALID_TAGNAMES_SET_ASS1_ASS2.forEach(x -\u003e updatedPersonBuilder.addTag(x, TagStatus.COMPLETE_GOOD));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        Person updatedPerson \u003d updatedPersonBuilder.build();","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_1_SET, VALID_TAGNAMES_SET_ASS1_ASS2,","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_PERSON_SUCCESS, Messages.format(updatedPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), updatedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e outOfBoundIndexSet \u003d new HashSet\u003c\u003e(List.of(outOfBoundIndex));","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndexSet, VALID_TAGNAMES_SET_ASS1_ASS2,","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"wang-xinrong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"wang-xinrong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e outOfBoundIndexSet \u003d new HashSet\u003c\u003e(List.of(outOfBoundIndex));","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"wang-xinrong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndexSet, VALID_TAGNAMES_SET_ASS1_ASS2,","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"wang-xinrong"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"        final MarkCommand standardCommand \u003d new MarkCommand(INDEX_1_SET, VALID_TAGNAMES_SET_ASS1_ASS2,","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.DEFAULT_STATUS);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"wang-xinrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"        MarkCommand commandWithSameValues \u003d new MarkCommand(INDEX_1_SET, VALID_TAGNAMES_SET_ASS1_ASS2,","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.DEFAULT_STATUS);","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"wang-xinrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"        assertFalse(standardCommand.equals(new MarkCommand(INDEX_2_SET, VALID_TAGNAMES_SET_ASS1_ASS2,","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.DEFAULT_STATUS)));","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"        // different tagName -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"        assertFalse(standardCommand.equals(new MarkCommand(INDEX_1_SET,","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"                VALID_TAGNAMES_SET_ASS3, TagStatus.DEFAULT_STATUS)));","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"        // different tagStatus -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"yyccbb"},"content":"        assertFalse(standardCommand.equals(new MarkCommand(INDEX_1_SET, VALID_TAGNAMES_SET_ASS1_ASS2,","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.COMPLETE_GOOD)));","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(List.of(index));","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"yyccbb"},"content":"        MarkCommand markCommand \u003d new MarkCommand(indexSet, VALID_TAGNAMES_SET_ASS1_ASS2, TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"yyccbb"},"content":"        String expected \u003d MarkCommand.class.getCanonicalName() + \"{index\u003d\" + indexSet + \", tagName(s)\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"yyccbb"},"content":"                + VALID_TAGNAMES_SET_ASS1_ASS2 + \", tagStatus\u003d\" + TagStatus.COMPLETE_GOOD + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(expected, markCommand.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_nonExistingTutorialTagMarking_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"yyccbb"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_1_SET, VALID_TAGNAMES_SET_ASS3,","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"yyccbb"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_TUTORIAL_TAG_VALUE + VALID_TAG_ASSIGNMENT3;","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"wang-xinrong"},"content":"        assertCommandFailure(markCommand, model, expectedMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"yyccbb":30,"wang-xinrong":113}},{"path":"src/test/java/seedu/address/logic/commands/RemovetagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAGNAMES_SET_FRIENDS;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIENDS;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_1_SET;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_2_SET;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"import java.util.List;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"class RemovetagCommandTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"    void execute() {","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        Person updatedPerson \u003d new PersonBuilder(personInFilteredList).removeTag(VALID_TAG_FRIENDS).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        RemovetagCommand removetagCommand \u003d new RemovetagCommand(INDEX_1_SET, VALID_TAGNAMES_SET_FRIENDS);","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        String expectedMessage \u003d String.format(RemovetagCommand.MESSAG_REMOVETAG_SUCCESS,","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"                Messages.format(updatedPerson));","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), updatedPerson);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        assertCommandSuccess(removetagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e outOfBoundIndexSet \u003d new HashSet\u003c\u003e(List.of(outOfBoundIndex));","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"        RemovetagCommand removetagCommand \u003d new RemovetagCommand(outOfBoundIndexSet, VALID_TAGNAMES_SET_FRIENDS);","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"        assertCommandFailure(removetagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e outOfBoundIndexSet \u003d new HashSet\u003c\u003e(List.of(outOfBoundIndex));","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"        RemovetagCommand removetagCommand \u003d new RemovetagCommand(outOfBoundIndexSet, VALID_TAGNAMES_SET_FRIENDS);","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"        assertCommandFailure(removetagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"wang-xinrong"},"content":"    public void equals() {","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"        final RemovetagCommand standardCommand \u003d new RemovetagCommand(INDEX_1_SET, VALID_TAGNAMES_SET_FRIENDS);","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"wang-xinrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"        RemovetagCommand commandWithSameValues \u003d new RemovetagCommand(INDEX_1_SET, VALID_TAGNAMES_SET_FRIENDS);","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"wang-xinrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"wang-xinrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"wang-xinrong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"        assertFalse(standardCommand.equals(new RemovetagCommand(INDEX_2_SET, VALID_TAGNAMES_SET_FRIENDS)));","lastModifiedDate":"2024-04-05"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"        // different tagName -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"yyccbb"},"content":"        assertFalse(standardCommand.equals(new RemovetagCommand(INDEX_2_SET, VALID_TAGNAMES_SET_FRIENDS)));","lastModifiedDate":"2024-04-05"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(List.of(index));","lastModifiedDate":"2024-04-05"},{"lineNumber":112,"author":{"gitId":"yyccbb"},"content":"        RemovetagCommand removetagCommand \u003d new RemovetagCommand(indexSet, VALID_TAGNAMES_SET_FRIENDS);","lastModifiedDate":"2024-04-05"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"        String expected \u003d RemovetagCommand.class.getCanonicalName() + \"{index\u003d\" + indexSet + \", tagName(s)\u003d\"","lastModifiedDate":"2024-04-05"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"                + VALID_TAGNAMES_SET_FRIENDS + \"}\";","lastModifiedDate":"2024-04-05"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expected, removetagCommand.toString());","lastModifiedDate":"2024-04-05"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"yyccbb":27,"wang-xinrong":90}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_TYPE;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPE_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPE_DESC_CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"wongkj12"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"wongkj12"},"content":"        Person expectedPerson \u003d new PersonBuilder(CARL).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"wongkj12"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TYPE_DESC_CARL + NAME_DESC_CARL + ID_DESC_CARL","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"wongkj12"},"content":"                + PHONE_DESC_CARL + EMAIL_DESC_CARL,","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"kaitinghh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"wongkj12"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + ID_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"kaitinghh"},"content":"        // multiple id","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"kaitinghh"},"content":"        assertParseFailure(parser, ID_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"kaitinghh"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ID));","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"kaitinghh"},"content":"                validExpectedPersonString + ID_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"yongkotaro"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ID, PREFIX_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"kaitinghh"},"content":"                        PREFIX_PHONE));","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"kaitinghh"},"content":"        // invalid id","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"kaitinghh"},"content":"        assertParseFailure(parser, INVALID_ID_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"kaitinghh"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ID));","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":126,"author":{"gitId":"yongkotaro"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + ID_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"yongkotaro"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + ID_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"yongkotaro"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"yongkotaro"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"yongkotaro"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + ID_DESC_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"wongkj12"},"content":"                TYPE_DESC_BOB + INVALID_NAME_DESC + ID_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"wongkj12"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"kaitinghh"},"content":"        // invalid id","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"kaitinghh"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"wongkj12"},"content":"                TYPE_DESC_BOB + NAME_DESC_BOB + INVALID_ID_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"wongkj12"},"content":"                Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"wongkj12"},"content":"                TYPE_DESC_BOB + NAME_DESC_BOB + ID_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"wongkj12"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"wongkj12"},"content":"                TYPE_DESC_BOB + NAME_DESC_BOB + ID_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"wongkj12"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"yongkotaro"},"content":"                TYPE_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB + ID_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"yyccbb"},"content":"        // invalid person type","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TYPE_DESC_BOB + NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"wongkj12"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND, MESSAGE_INVALID_PERSON_TYPE);","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yyccbb":6,"wongkj12":23,"yongkotaro":7,"kaitinghh":16,"wang-xinrong":1,"-":129}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"kaitinghh"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.commands.AvailableCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.EditTutTagListCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"import seedu.address.logic.commands.RemovetagCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {INDEX_FIRST_PERSON};","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"kaitinghh"},"content":"        assertEquals(new DeleteCommand(indexSet), command);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"kaitinghh"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_NAME + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"kaitinghh"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate[] predicateList \u003d {new FieldContainsKeywordsPredicate(PREFIX_NAME, keywords)};","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"kaitinghh"},"content":"        assertEquals(new FindCommand(Arrays.asList(predicateList)), command);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(parser.parseCommand(MarkCommand.SAMPLE_COMMAND) instanceof MarkCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"yyccbb"},"content":"    public void parseCommand_removetag() throws Exception {","lastModifiedDate":"2024-04-05"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"        assertTrue(parser.parseCommand(RemovetagCommand.SAMPLE_COMMAND) instanceof RemovetagCommand);","lastModifiedDate":"2024-04-05"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"yongkotaro"},"content":"    public void parseCommand_available() throws Exception {","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(parser.parseCommand(AvailableCommand.SAMPLE_COMMAND) instanceof AvailableCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"    public void parseCommand_editTutTagList() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(parser.parseCommand(EditTutTagListCommand.SAMPLE_COMMAND) instanceof EditTutTagListCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yyccbb":3,"yongkotaro":6,"kaitinghh":12,"wang-xinrong":15,"-":97}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    private final Prefix slashP \u003d new Prefix(\"/p\");","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP);","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"        assertArgumentAbsent(argMultimap, slashP);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"        String argsString \u003d \"  Some preamble string /p Argument value \";","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"        assertArgumentPresent(argMultimap, slashP, \"Argument value\");","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        argsString \u003d \" /p   Argument value \";","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP);","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"        assertArgumentPresent(argMultimap, slashP, \"Argument value\");","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value /p pSlash value\";","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP, dashT, hatQ);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"        assertArgumentPresent(argMultimap, slashP, \"pSlash value\");","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"        argsString \u003d \"Different Preamble String ^Q 111 -t dashT-Value /p pSlash value\";","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP, dashT, hatQ);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"        assertArgumentPresent(argMultimap, slashP, \"pSlash value\");","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"yyccbb"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP, dashT, hatQ);","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"yyccbb"},"content":"        assertArgumentAbsent(argMultimap, slashP);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP, dashT, hatQ);","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"yyccbb"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value /p slashP value -t \";","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP, dashT, hatQ);","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"yyccbb"},"content":"        assertArgumentPresent(argMultimap, slashP, \"slashP value\");","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"yyccbb"},"content":"        String argsString \u003d \"SomePreambleString/p pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"yyccbb"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, slashP, dashT, hatQ);","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"yyccbb"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString/p pSlash joined-tjoined\");","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"yyccbb"},"content":"        assertArgumentAbsent(argMultimap, slashP);","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"yyccbb":25,"-":125}},{"path":"src/test/java/seedu/address/logic/parser/AvailableCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_TAG_NAME;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.TUES08;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.commands.AvailableCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.person.TutorialTagContainsGroupPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"public class AvailableCommandParserTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"    private final AvailableCommandParser parser \u003d new AvailableCommandParser();","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_incompleteArg_throwsParseException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"        String invalidTagName \u003d \"sfsdfsdff\";","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, invalidTagName,","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \" /g \",","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"                String.format(AvailableCommand.MESSAGE_NON_EMPTY_GROUP_NAME));","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_invalidTagName_throwsParseException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"        String invalidTagName \u003d \"sfs dfsd ff\";","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \" /g \" + invalidTagName,","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"                String.format(MESSAGE_INVALID_TAG_NAME));","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_nonemptyPreamble_throwsParseException() throws ParseException {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"        String input \u003d \" non-empty preamble \" + PREFIX_GROUP + \" TUES08\";","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, input, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"                AvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"yongkotaro"},"content":"    public void parse_validArgs_returnsAvailableCommand() throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"        String args \u003d \" \" + PREFIX_GROUP + \" TUES08\";","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"yongkotaro"},"content":"        AvailableCommand expectedAvailableCommand \u003d new AvailableCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"yongkotaro"},"content":"                new TutorialTagContainsGroupPredicate(\"TUES08\"), TUES08);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"yongkotaro"},"content":"        assertParseSuccess(parser, args, expectedAvailableCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yongkotaro":30,"wang-xinrong":32}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"kaitinghh"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"        Index[] indexArr \u003d {INDEX_FIRST_PERSON};","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(Arrays.asList(indexArr));","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(indexSet));","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kaitinghh":8,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG + \" \";","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"        // attempt to edit tags","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"        // attempt to parse tags after a valid field","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser, \"1\" + NAME_DESC_AMY + TAG_EMPTY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser, \"1\" + NAME_DESC_BOB + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"yongkotaro"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"yyccbb"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"yyccbb"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"yyccbb"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"yyccbb"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"yyccbb"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"yongkotaro"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"yongkotaro"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"yongkotaro"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"yongkotaro"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yyccbb":15,"yongkotaro":5,"-":155}},{"path":"src/test/java/seedu/address/logic/parser/EditTutTagListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EDIT_TUTORIAL_TAG_FLAG;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EDIT_TUTORIAL_TAG_FLAG;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIENDS;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND_DESC;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.EditTutTagListCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"class EditTutTagListCommandParserTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTutTagListCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"    private EditTutTagListCommandParser parser \u003d new EditTutTagListCommandParser();","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_emptyArguments_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"        String emptyArgument \u003d \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_FORMAT, () -\u003e parser.parse(emptyArgument));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"        // no tagFlag specified","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, VALID_TAG_FRIEND_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"        // no tagName specified","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, VALID_EDIT_TUTORIAL_TAG_FLAG, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_invalidFlag_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, INVALID_EDIT_TUTORIAL_TAG_FLAG + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, VALID_EDIT_TUTORIAL_TAG_FLAG","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"                        + \" \" + INVALID_TAG_DESC,","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_validCommand_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"        String userInput \u003d VALID_EDIT_TUTORIAL_TAG_FLAG","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"                + \" \" + VALID_TAG_FRIEND_DESC;","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"        EditTutTagListCommand expectedCommand \u003d new EditTutTagListCommand(VALID_TAG_FRIENDS,","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"                EditTutTagListCommand.CommandSubtype.ADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wang-xinrong":67}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"kaitinghh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"kaitinghh"},"content":"    public void parse_findName_returnsFindCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"Alice\", \"Bob\");","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate[] predicateList \u003d {new FieldContainsKeywordsPredicate(PREFIX_NAME, keywords)};","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"                new FindCommand(Arrays.asList(predicateList));","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"        assertParseSuccess(parser, \" /n Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"kaitinghh"},"content":"        assertParseSuccess(parser, \" /n \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"    public void parse_findType_returnsFindCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"kaitinghh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"stu\");","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate[] predicateList \u003d {new FieldContainsKeywordsPredicate(keywords)};","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"kaitinghh"},"content":"                new FindCommand(Arrays.asList(predicateList));","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"        assertParseSuccess(parser, \" stu\", expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"        // multiple whitespaces around keywords","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"        assertParseSuccess(parser, \"      stu   \", expectedFindCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kaitinghh":20,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_ASS1_ASS2_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_ASS1_MULTIPLE_WHITESPACES_ASS2_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_ASS3_TAGSTATUS_COMPLETE_BAD;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAGNAMES_SET_ASS1_ASS2;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAGNAMES_SET_ASS3;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_1_2_3_SET;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"class MarkCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"        // no index specified","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser, TAG_ASS1_ASS2_TAGSTATUS_COMPLETE_GOOD, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"        // no tag specified","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser, \"1 2\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"        // negative index","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser, \"-5\" + TAG_ASS1_ASS2_TAGSTATUS_COMPLETE_GOOD,","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"        // zero index","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser, \"0\" + TAG_ASS1_ASS2_TAGSTATUS_COMPLETE_GOOD,","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"        assertParseFailure(parser, \"1 /i string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_TAGSTATUS_COMPLETE_GOOD,","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"    public void parse_oneIndex_success() throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"        final Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e targetIndexSet \u003d new HashSet\u003c\u003e(Arrays.asList(targetIndex));","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        // one tag name","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_ASS3_TAGSTATUS_COMPLETE_BAD;","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"        MarkCommand expectedCommand \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"                new MarkCommand(targetIndexSet, VALID_TAGNAMES_SET_ASS3, TagStatus.COMPLETE_BAD);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"        // multiple tag names","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_ASS1_ASS2_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"        expectedCommand \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"                new MarkCommand(targetIndexSet, VALID_TAGNAMES_SET_ASS1_ASS2, TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"        // multiple taq names separated by multiple whitespaces","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_ASS1_MULTIPLE_WHITESPACES_ASS2_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"        expectedCommand \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"                new MarkCommand(targetIndexSet, VALID_TAGNAMES_SET_ASS1_ASS2, TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"    public void parse_multipleIndices_success() throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"        String targetIndexString \u003d \"1 2 3\";","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"        Set\u003cIndex\u003e targetIndexSet \u003d INDEX_1_2_3_SET;","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"        // one tag name","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"        String userInput \u003d targetIndexString + TAG_ASS3_TAGSTATUS_COMPLETE_BAD;","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"        MarkCommand expectedCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"                new MarkCommand(targetIndexSet, VALID_TAGNAMES_SET_ASS3, TagStatus.COMPLETE_BAD);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"yyccbb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"yyccbb"},"content":"        // multiple tag names","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"yyccbb"},"content":"        userInput \u003d targetIndexString + TAG_ASS1_ASS2_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"yyccbb"},"content":"        expectedCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"yyccbb"},"content":"                new MarkCommand(targetIndexSet, VALID_TAGNAMES_SET_ASS1_ASS2, TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"yyccbb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"yyccbb"},"content":"        // multiple taq names separated by multiple whitespaces","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"yyccbb"},"content":"        userInput \u003d targetIndexString + TAG_ASS1_MULTIPLE_WHITESPACES_ASS2_TAGSTATUS_COMPLETE_GOOD;","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"        expectedCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"                new MarkCommand(targetIndexSet, VALID_TAGNAMES_SET_ASS1_ASS2, TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"yyccbb":58,"wang-xinrong":60}},{"path":"src/test/java/seedu/address/logic/parser/RemovetagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAGNAMES_SET_FRIENDS;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_2_SET;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import seedu.address.logic.commands.RemovetagCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"class RemovetagCommandParserTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemovetagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    private RemovetagCommandParser parser \u003d new RemovetagCommandParser();","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"        // no index specified","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"        // no tag specified","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"        // no index and no field specified","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"        // negative index","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"-5\" + TAG_DESC_FRIEND,","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"        // zero index","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"0\" + TAG_DESC_FRIEND,","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC,","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"    public void parse_validCommand_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_TAG_FRIEND_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"        RemovetagCommand expectedCommand \u003d new RemovetagCommand(INDEX_2_SET, VALID_TAGNAMES_SET_FRIENDS);","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"yyccbb":7,"wang-xinrong":63}},{"path":"src/test/java/seedu/address/logic/parser/StatefulParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.parser.StatefulParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.parser.StatefulParserUtil.isCreatingNewTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.EditTutTagListCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"public class StatefulParserUtilTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        assertThrows(ParseException.class, () -\u003e StatefulParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"            -\u003e StatefulParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"kaitinghh"},"content":"    public void parsePersonType_invalidInput_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        assertThrows(ParseException.class, () -\u003e StatefulParserUtil.parsePersonType(\"prof\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"kaitinghh"},"content":"    public void parsePersonType_validInput_success() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"        assertEquals(PersonType.STU, StatefulParserUtil.parsePersonType(\" stu\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"kaitinghh"},"content":"    public void parsePersonType_nullInput_success() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"        assertEquals(PersonType.STU, StatefulParserUtil.parsePersonType(\"   \"));","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"    public void parseFindPersonType_invalidInput_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"        assertThrows(ParseException.class, () -\u003e StatefulParserUtil.parseFindPersonType(\"prof\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"kaitinghh"},"content":"    public void parseFindPersonType_validInput_success() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        assertEquals(PersonType.STU, StatefulParserUtil.parseFindPersonType(\" stu\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"kaitinghh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"kaitinghh"},"content":"    public void parseFindPersonType_nullInput_success() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"        assertNull(StatefulParserUtil.parseFindPersonType(\"   \"));","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"        assertEquals(INDEX_FIRST_PERSON, StatefulParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"        assertEquals(INDEX_FIRST_PERSON, StatefulParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatefulParserUtil.parseName((String) null));","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"        assertThrows(ParseException.class, () -\u003e StatefulParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expectedName, StatefulParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expectedName, StatefulParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatefulParserUtil.parsePhone((String) null));","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"        assertThrows(ParseException.class, () -\u003e StatefulParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expectedPhone, StatefulParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expectedPhone, StatefulParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatefulParserUtil.parseEmail((String) null));","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"yyccbb"},"content":"        assertThrows(ParseException.class, () -\u003e StatefulParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expectedEmail, StatefulParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expectedEmail, StatefulParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatefulParserUtil.parseTag(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"yyccbb"},"content":"        assertThrows(ParseException.class, () -\u003e StatefulParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"wang-xinrong"},"content":"        Tag expectedTag \u003d Tag.createTag(VALID_TAG_1, TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expectedTag, StatefulParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"wang-xinrong"},"content":"        Tag expectedTag \u003d Tag.createTag(VALID_TAG_1, TagStatus.COMPLETE_GOOD);","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expectedTag, StatefulParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"yyccbb"},"content":"        assertThrows(NullPointerException.class, () -\u003e StatefulParserUtil.parseTags(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"yyccbb"},"content":"        assertThrows(ParseException.class, () -\u003e StatefulParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"yyccbb"},"content":"        assertTrue(StatefulParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"yyccbb"},"content":"        Set\u003cTag\u003e actualTagSet \u003d StatefulParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"wang-xinrong"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(Tag.createTag(VALID_TAG_1, TagStatus.DEFAULT_STATUS),","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"wang-xinrong"},"content":"                Tag.createTag(VALID_TAG_2, TagStatus.DEFAULT_STATUS)));","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"wang-xinrong"},"content":"    public void parseEditTutTagListCommandFlag() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"wang-xinrong"},"content":"        assert(isCreatingNewTag(EditTutTagListCommand.ADD_FLAG) \u003d\u003d EditTutTagListCommand.CommandSubtype.ADD);","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"wang-xinrong"},"content":"        assert(isCreatingNewTag(EditTutTagListCommand.DELETE_FLAG) \u003d\u003d EditTutTagListCommand.CommandSubtype.DELETE);","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"wang-xinrong"},"content":"        assert(isCreatingNewTag(EditTutTagListCommand.LIST_FLAG) \u003d\u003d EditTutTagListCommand.CommandSubtype.LIST);","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"wang-xinrong"},"content":"        String invalidCommandFlag \u003d \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(ParseException.class, () -\u003e isCreatingNewTag(invalidCommandFlag));","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"yyccbb":33,"kaitinghh":26,"wang-xinrong":15,"-":142}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"yongkotaro"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"wang-xinrong"},"content":"    ///////","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"    public void hasTutorialTag_nullTutorialTag_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTutorialTag(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"wang-xinrong"},"content":"    public void hasTutorialTag_tutorialTagNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(addressBook.hasTutorialTag(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"wang-xinrong"},"content":"    public void hasTutorialTag_tutorialTagInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"wang-xinrong"},"content":"        addressBook.addTutorialTag(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(addressBook.hasTutorialTag(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"    public void hasTutorialTag_tutorialTagWithSameTagNamesInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"        addressBook.addTutorialTag(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"        TutorialTag editedWed10 \u003d new TutorialTag(\"WED10\", TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(addressBook.hasTutorialTag(editedWed10));","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"    public void deleteTutorialTag_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"wang-xinrong"},"content":"        addressBook.addTutorialTag(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"wang-xinrong"},"content":"        addressBook.removeTutorialTag(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(addressBook.hasTutorialTag(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"    public void getTutoiralList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTutorialTagList().remove(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"    ///////","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"    void equals_selfAddressbook_true() {","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"        assert(addressBook.equals(addressBook));","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wang-xinrong"},"content":"    void equals_otherTypeObject_false() {","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(addressBook.equals(new Object()));","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"wang-xinrong"},"content":"    void hashcode_staysTheSameForSameAddressBook() {","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(addressBook.hashCode(), addressBook.hashCode());","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"wang-xinrong"},"content":"    void getTutorialTagListString_forEmptyAddressBook() {","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(addressBook.getTutorialTagListString(), \"Available Tutorial Tag(s): [ ]\");","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"wang-xinrong"},"content":"    void getTutorialTagListString_forNonEmptyAddressBook() {","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"wang-xinrong"},"content":"        addressBook.addTutorialTag(WED10);","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(addressBook.getTutorialTagListString(), \"Available Tutorial Tag(s): [WED10]\");","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":171,"author":{"gitId":"wang-xinrong"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"wang-xinrong"},"content":"        public ObservableList\u003cTutorialTag\u003e getTutorialTagList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"wang-xinrong"},"content":"            return getTutorialTagList();","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"wang-xinrong"},"content":"        };","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"yongkotaro":2,"wang-xinrong":70,"-":104}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.logic.commands.EditTutTagListCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.FieldContainsKeywordsPredicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"kaitinghh"},"content":"        modelManager.updateFilteredPersonList(new FieldContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wang-xinrong"},"content":"    public void hasTutorialTag_nullTutorialTag_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTutorialTag(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wang-xinrong"},"content":"    public void hasTutorialTag_tutorialTagNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(modelManager.hasTutorialTag(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"wang-xinrong"},"content":"    public void hasTutorialTag_tutorialTagInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"wang-xinrong"},"content":"        modelManager.addTutorialTag(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(modelManager.hasTutorialTag(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"wang-xinrong"},"content":"    public void deleteTutorialTag_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"wang-xinrong"},"content":"        modelManager.addTutorialTag(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"wang-xinrong"},"content":"        modelManager.deleteTutorialTag(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(modelManager.hasTutorialTag(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"wang-xinrong"},"content":"    public void getFilteredTutorialTagList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getTutorialTagList().remove(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":163,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"wang-xinrong"},"content":"    public void getTutorialTagListString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(modelManager.getTutorialTagListString(), EditTutTagListCommand.EMPTY_TUTORIALTAGLIST_OUTPUT);","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kaitinghh":2,"wang-xinrong":35,"-":130}},{"path":"src/test/java/seedu/address/model/person/FieldContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"kaitinghh"},"content":"public class FieldContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate firstPredicate \u003d new FieldContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate secondPredicate \u003d new FieldContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"                new FieldContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_NAME,","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_NAME, Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"kaitinghh"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_NAME, Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"kaitinghh"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_NAME, Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"kaitinghh"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"kaitinghh"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"yongkotaro"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"yongkotaro"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"yongkotaro"},"content":"        // Zero keywords","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"yongkotaro"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"tag1\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"yongkotaro"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"yongkotaro"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"tag2\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"tag1\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"yongkotaro"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"yongkotaro"},"content":"        predicate \u003d new FieldContainsKeywordsPredicate(Arrays.asList(\"tag1\", \"tag2\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"tag1\").build()));","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"kaitinghh"},"content":"        FieldContainsKeywordsPredicate predicate \u003d new FieldContainsKeywordsPredicate(PREFIX_NAME, keywords);","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"kaitinghh"},"content":"        String expected \u003d FieldContainsKeywordsPredicate.class.getCanonicalName() + \"{\" + PREFIX_NAME","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"kaitinghh"},"content":"                + \" keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yongkotaro":18,"kaitinghh":17,"-":71}},{"path":"src/test/java/seedu/address/model/person/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"public class IdTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"    public void constructor_nullId_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Id(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"    public void constructor_invalidId_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"        String invalidId \u003d \"123456789\"; // invalid because it does not start and end with a letter","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Id(invalidId));","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"    public void isValidId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"        // valid ids","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(Id.isValidId(\"A1234567Z\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(Id.isValidId(\"B9876543X\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"        // invalid ids","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(Id.isValidId(\"123456789\")); // does not start and end with a letter","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(Id.isValidId(\"A123456789\")); // more than 7 digits","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(Id.isValidId(\"A12345X\")); // less than 7 digits","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(Id.isValidId(\"A12345 X\")); // contains space","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"        Id id1 \u003d new Id(\"A1234567Z\");","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"        Id id3 \u003d new Id(\"B9876543X\");","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(id1.equals(id1));","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"yongkotaro"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(id1.equals(new Id(\"A1234567Z\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"yongkotaro"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(id1.equals(id3));","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"yongkotaro"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(id1.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(id1.equals(\"A1234567Z\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"yongkotaro":54}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"        // same name, id, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"kaitinghh"},"content":"        Person editedPerson \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"        assertTrue(ALICE.isSamePerson(editedPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"        editedPerson \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"kaitinghh"},"content":"        assertTrue(ALICE.isSamePerson(editedPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"        // different id, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"kaitinghh"},"content":"        editedPerson \u003d new PersonBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"kaitinghh"},"content":"        assertFalse(ALICE.isSamePerson(editedPerson));","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"yongkotaro"},"content":"    public void testHashCode() {","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"yongkotaro"},"content":"        // Hash codes of same objects must be the same","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"yongkotaro"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(ALICE.hashCode(), aliceCopy.hashCode());","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"yongkotaro"},"content":"        // Hash codes of different objects should be different","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"yongkotaro"},"content":"        assertNotEquals(ALICE.hashCode(), BOB.hashCode());","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"        String expected \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"                Student.class.getCanonicalName() + \"{type\u003d\" + ALICE.getType() + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"kaitinghh"},"content":"                        + \", id\u003d\" + ALICE.getId()","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"kaitinghh"},"content":"                        + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"kaitinghh"},"content":"                        + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"                        + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yyccbb":13,"yongkotaro":9,"kaitinghh":13,"-":70}},{"path":"src/test/java/seedu/address/model/person/TaTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"class TaTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    void testEquals() {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"        // same value","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"        Ta fionaCopy \u003d (Ta) new PersonBuilder(FIONA).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"        assertEquals(fionaCopy, FIONA);","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"        // same object","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"        assertEquals(FIONA, FIONA);","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"        // different name","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        Ta editedFiona \u003d (Ta) new PersonBuilder(FIONA).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        assertNotEquals(editedFiona, FIONA);","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"    void testToString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        String expected \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"                Ta.class.getCanonicalName() + \"{type\u003d\" + FIONA.getType() + \", name\u003d\" + FIONA.getName()","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"                        + \", id\u003d\" + FIONA.getId()","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"                        + \", phone\u003d\" + FIONA.getPhone()","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"                        + \", email\u003d\" + FIONA.getEmail()","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"                        + \", tags\u003d\" + FIONA.getTags() + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        assertEquals(expected, FIONA.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"yyccbb":38}},{"path":"src/test/java/seedu/address/model/person/TutorialTagContainsGroupPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalPersons.JANE;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"public class TutorialTagContainsGroupPredicateTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"        TutorialTagContainsGroupPredicate predicate1 \u003d new TutorialTagContainsGroupPredicate(\"TUES08\");","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"        TutorialTagContainsGroupPredicate predicate2 \u003d new TutorialTagContainsGroupPredicate(\"TUES09\");","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(predicate1.equals(predicate1));","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"        TutorialTagContainsGroupPredicate predicate1Copy \u003d new TutorialTagContainsGroupPredicate(\"TUES08\");","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(predicate1.equals(predicate1Copy));","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(predicate1.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(predicate1.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"yongkotaro"},"content":"        // different tutorial group -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(predicate1.equals(predicate2));","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"    public void test_student_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"        TutorialTagContainsGroupPredicate predicate \u003d new TutorialTagContainsGroupPredicate(\"W10\");","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"        assertFalse(predicate.test(JANE));","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yongkotaro":39}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"yongkotaro"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yongkotaro":2,"-":172}},{"path":"src/test/java/seedu/address/model/person/UniqueTutorialTagListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.exceptions.DuplicateTutorialTagException;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.person.exceptions.TutorialTagNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"class UniqueTutorialTagListTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"    private final UniqueTutorialTagList uniqueTutorialTagList \u003d new UniqueTutorialTagList();","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"    public void contains_nullTutorialTag_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorialTagList.contains(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"    public void contains_tutorialTagNotInList_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(uniqueTutorialTagList.contains(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"    public void contains_tutorialTagInList_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"        uniqueTutorialTagList.add(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(uniqueTutorialTagList.contains(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"    public void contains_tutorialTagWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"        uniqueTutorialTagList.add(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"        TutorialTag editedWed10 \u003d new TutorialTag(\"WED10\", TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(uniqueTutorialTagList.contains(editedWed10));","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"    public void add_nullTutorialTag_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorialTagList.add(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"    public void add_duplicateTutorialTag_throwsDuplicatePersonException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"        uniqueTutorialTagList.add(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(DuplicateTutorialTagException.class, () -\u003e uniqueTutorialTagList.add(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"    public void remove_nullTutorialTag_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorialTagList.remove(null));","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"    public void remove_tutorialTagDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(TutorialTagNotFoundException.class, () -\u003e uniqueTutorialTagList.remove(WED10));","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"wang-xinrong"},"content":"        uniqueTutorialTagList.add(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"wang-xinrong"},"content":"        uniqueTutorialTagList.remove(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"        UniqueTutorialTagList expectedUniqueTutorialTagList \u003d new UniqueTutorialTagList();","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(expectedUniqueTutorialTagList, uniqueTutorialTagList);","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"wang-xinrong"},"content":"    public void setTutorialTags_nullUniqueTutorialTagList_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorialTagList","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"wang-xinrong"},"content":"                .setTutorialTags((UniqueTutorialTagList) null));","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"wang-xinrong"},"content":"    public void setTutorialTags_uniqueTutorialTagList_replacesOwnListWithProvidedUniqueTutorialTagList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"wang-xinrong"},"content":"        uniqueTutorialTagList.add(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"wang-xinrong"},"content":"        UniqueTutorialTagList expectedUniqueTutorialTagList \u003d new UniqueTutorialTagList();","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"wang-xinrong"},"content":"        expectedUniqueTutorialTagList.add(WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"wang-xinrong"},"content":"        uniqueTutorialTagList.setTutorialTags(expectedUniqueTutorialTagList);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(expectedUniqueTutorialTagList, uniqueTutorialTagList);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"wang-xinrong"},"content":"    public void setTutorialTags_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTutorialTagList","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"wang-xinrong"},"content":"                .setTutorialTags((List\u003cTutorialTag\u003e) null));","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"wang-xinrong"},"content":"    public void setTutorialTags_listWithDuplicateTutorialTags_throwsDuplicatePersonException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"wang-xinrong"},"content":"        List\u003cTutorialTag\u003e listWithDuplicateTutorialTags \u003d Arrays.asList(WED10, WED10);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(DuplicateTutorialTagException.class, () -\u003e uniqueTutorialTagList","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"wang-xinrong"},"content":"                .setTutorialTags(listWithDuplicateTutorialTags));","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"                -\u003e uniqueTutorialTagList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(uniqueTutorialTagList.asUnmodifiableObservableList().toString(),","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"                uniqueTutorialTagList.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"wang-xinrong"},"content":"    public void return_iterator_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"        assert (uniqueTutorialTagList.iterator() instanceof Iterator);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"wang-xinrong"},"content":"    public void equals_selfUniqueTutoiralTagList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"wang-xinrong"},"content":"        assert uniqueTutorialTagList.equals(uniqueTutorialTagList);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"wang-xinrong"},"content":"    public void equals_nullUniqueTutoiralTagList_fail() {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(uniqueTutorialTagList.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"wang-xinrong"},"content":"    public void equals_nonUniqueTutoiralTagListObject_fail() {","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"wang-xinrong"},"content":"        assertFalse(uniqueTutorialTagList.equals(new Object()));","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"wang-xinrong"},"content":"    public void sameHashCode_forSameUniqueTutorialTagList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"wang-xinrong"},"content":"        UniqueTutorialTagList list1 \u003d new UniqueTutorialTagList();","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"wang-xinrong"},"content":"        UniqueTutorialTagList list2 \u003d new UniqueTutorialTagList();","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"wang-xinrong"},"content":"        list1.add(WED10);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"wang-xinrong"},"content":"        list2.add(WED10);","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"wang-xinrong"},"content":"        assertEquals(list1.hashCode(), list2.hashCode());","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"wang-xinrong"},"content":"    public void differentHashCode_forDifferentUniqueTutorialTagList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"wang-xinrong"},"content":"        UniqueTutorialTagList list1 \u003d new UniqueTutorialTagList();","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"wang-xinrong"},"content":"        UniqueTutorialTagList list2 \u003d new UniqueTutorialTagList();","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"wang-xinrong"},"content":"        list1.add(WED10);","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"wang-xinrong"},"content":"        assertNotEquals(list1.hashCode(), list2.hashCode());","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wang-xinrong":152}},{"path":"src/test/java/seedu/address/model/tag/TagStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.testutil.Assert;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"class TagStatusTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"    void getTagStatus() {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"        final String emptyTagStatus \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.COMPLETE_GOOD.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.COMPLETE_GOOD_KEYWORD)));","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.COMPLETE_BAD.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.COMPLETE_BAD_KEYWORD)));","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.INCOMPLETE_GOOD.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.INCOMPLETE_GOOD_KEYWORD)));","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.INCOMPLETE_BAD.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.INCOMPLETE_BAD_KEYWORD)));","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.PRESENT.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.PRESENT_KEYWORD)));","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.ABSENT.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.ABSENT_KEYWORD)));","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.ABSENT_WITH_REASON.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.ABSENT_WITH_REASON_KEYWORD)));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.ASSIGNED.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.ASSIGNED_KEYWORD)));","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"wang-xinrong"},"content":"        assertTrue(TagStatus.AVAILABLE.equals(TagStatus.getTagStatus(","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"wang-xinrong"},"content":"                TagStatus.AVAILABLE_KEYWORD)));","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"wang-xinrong"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e TagStatus.getTagStatus(emptyTagStatus));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"wang-xinrong":39}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"    public void constructor_nullTagName_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.createTag(null, TagStatus.INCOMPLETE_GOOD));","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"    public void constructor_nullTagStatus_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.createTag(\"Test\", null));","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Tag.createTag(invalidTagName, TagStatus.INCOMPLETE_GOOD));","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"    public void constructor_validTagNameAndValidTagStatus_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"        String validTagName \u003d \"test\";","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wang-xinrong"},"content":"        assert(Tag.createTag(validTagName, TagStatus.COMPLETE_GOOD) instanceof AssignmentTag);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wang-xinrong"},"content":"        assert(Tag.createTag(validTagName, TagStatus.PRESENT) instanceof AttendanceTag);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wang-xinrong"},"content":"        assert(Tag.createTag(validTagName, TagStatus.ASSIGNED) instanceof TutorialTag);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":39,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"wang-xinrong"},"content":"    public void correct_tagType() {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wang-xinrong"},"content":"        String validTagName \u003d \"test\";","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"wang-xinrong"},"content":"        assert(Tag.createTag(validTagName, TagStatus.COMPLETE_GOOD).isAssignment());","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wang-xinrong"},"content":"        assert(Tag.createTag(validTagName, TagStatus.PRESENT).isAttendance());","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wang-xinrong"},"content":"        assert(Tag.createTag(validTagName, TagStatus.ASSIGNED).isTutorial());","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"wang-xinrong"},"content":"    public void equals_tagsWithTheSameTagName_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"wang-xinrong"},"content":"        String validTagName \u003d \"test\";","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"wang-xinrong"},"content":"        Tag tag1 \u003d Tag.createTag(validTagName, TagStatus.DEFAULT_STATUS);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wang-xinrong"},"content":"        Tag tag2 \u003d Tag.createTag(validTagName, TagStatus.DEFAULT_STATUS);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wang-xinrong"},"content":"        assert(tag1.equals(tag2));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"    public void equals_theSameTag_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"        String validTagName \u003d \"test\";","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"        Tag tag1 \u003d Tag.createTag(validTagName, TagStatus.DEFAULT_STATUS);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"        assert(tag1.equals(tag1));","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"    public void equals_tagNotEqualToNonTagObjects_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"        String validTagName \u003d \"test\";","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"        Tag tag1 \u003d Tag.createTag(validTagName, TagStatus.DEFAULT_STATUS);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"        assert(!tag1.equals(new Object()));","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"wang-xinrong":43,"-":25}},{"path":"src/test/java/seedu/address/model/tag/TutorialTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"class TutorialTagTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"    public void equals_theSameTag_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"        String validTagName \u003d \"test\";","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"        TutorialTag tag1 \u003d new TutorialTag(validTagName, TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"        assert(tag1.isSameTutorialTag(tag1));","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"    public void equals_tagWithTheSameTagName_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"        String validTagName \u003d \"test\";","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"        TutorialTag tag1 \u003d new TutorialTag(validTagName, TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"        TutorialTag tag2 \u003d new TutorialTag(validTagName, TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"        assert(tag1.isSameTutorialTag(tag2));","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wang-xinrong":21}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"    public void testGetSamplePersons() {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"        // Get the sample persons array","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"        Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"        // Check if the array is not null","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"        assertNotNull(samplePersons);","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"        // Check if the length of the array is correct","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(6, samplePersons.length);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"        // Test individual properties of each person object in the array","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"        assertPersonEquals(new PersonBuilder().withName(\"Alex Yeoh\")","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"                .withId(\"A0777777L\")","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"                .withPhone(\"87438807\")","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"                .withEmail(\"alexyeoh@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"yongkotaro"},"content":"                .withTags(\"Assignment1\")","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"yongkotaro"},"content":"                .build(), samplePersons[0]);","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"yongkotaro"},"content":"        assertPersonEquals(new PersonBuilder().withName(\"Bernice Yu\")","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"                .withId(\"A9128392K\")","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"                .withPhone(\"99272758\")","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"                .withEmail(\"berniceyu@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"                .withTags(\"Assignment1\", \"Assignment2\")","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"                .build(), samplePersons[1]);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"        assertPersonEquals(new PersonBuilder().withName(\"Charlotte Oliveiro\")","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"                .withId(\"A2222222P\")","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"yongkotaro"},"content":"                .withPhone(\"93210283\")","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"yongkotaro"},"content":"                .withEmail(\"charlotte@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"wongkj12"},"content":"                .withTags()","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"yongkotaro"},"content":"                .build(), samplePersons[2]);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"yongkotaro"},"content":"        assertPersonEquals(new PersonBuilder().withName(\"David Li\")","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"                .withId(\"A9128392Z\")","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"yongkotaro"},"content":"                .withPhone(\"91031282\")","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"yongkotaro"},"content":"                .withEmail(\"lidavid@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"yongkotaro"},"content":"                .withTags(\"Assignment1\")","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"yongkotaro"},"content":"                .build(), samplePersons[3]);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"yongkotaro"},"content":"        assertPersonEquals(new PersonBuilder().withName(\"Irfan Ibrahim\")","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"yongkotaro"},"content":"                .withId(\"B0198266Z\")","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"yongkotaro"},"content":"                .withPhone(\"92492021\")","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"yongkotaro"},"content":"                .withEmail(\"irfan@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"yongkotaro"},"content":"                .withTags(\"Assignment1\")","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"yongkotaro"},"content":"                .build(), samplePersons[4]);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"yongkotaro"},"content":"        assertPersonEquals(new PersonBuilder().withName(\"Roy Balakrishnan\")","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"yongkotaro"},"content":"                .withId(\"B0000666C\")","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"yongkotaro"},"content":"                .withPhone(\"92624417\")","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"yongkotaro"},"content":"                .withEmail(\"royb@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"yongkotaro"},"content":"                .withTags(\"Assignment1\")","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"yongkotaro"},"content":"                .build(), samplePersons[5]);","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"yongkotaro"},"content":"    // Helper method to assert properties of a person","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"yongkotaro"},"content":"    private void assertPersonEquals(Person expectedPerson, Person actualPerson) {","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"yongkotaro"},"content":"        // Check individual properties of the person objects","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(expectedPerson.getName().toString(), actualPerson.getName().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(expectedPerson.getId().toString(), actualPerson.getId().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(expectedPerson.getPhone().toString(), actualPerson.getPhone().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(expectedPerson.getEmail().toString(), actualPerson.getEmail().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(expectedPerson.getTags().size(), actualPerson.getTags().size());","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"yongkotaro"},"content":"        assertTrue(actualPerson.getTags().containsAll(expectedPerson.getTags()));","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"yongkotaro":76,"wongkj12":1}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagType;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    private static final String TYPE \u003d \"stu\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kaitinghh"},"content":"    private static final String INVALID_ID \u003d \"BBBBCCCCCC\";","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"kaitinghh"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"yongkotaro"},"content":"                new JsonAdaptedPerson(TYPE, INVALID_NAME, VALID_ID, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"                        VALID_TAGS);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kaitinghh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TYPE, null, VALID_ID, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"yongkotaro"},"content":"                VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"yongkotaro"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"yongkotaro"},"content":"                new JsonAdaptedPerson(TYPE, VALID_NAME, INVALID_ID, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"yongkotaro"},"content":"        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"yongkotaro"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"yongkotaro"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TYPE, VALID_NAME, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"yongkotaro"},"content":"                VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"yongkotaro"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"yongkotaro"},"content":"                new JsonAdaptedPerson(TYPE, VALID_NAME, VALID_ID, INVALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"kaitinghh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TYPE, VALID_NAME, VALID_ID, null, VALID_EMAIL,","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"yongkotaro"},"content":"                VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"yongkotaro"},"content":"                new JsonAdaptedPerson(TYPE, VALID_NAME, VALID_ID, VALID_PHONE, INVALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"kaitinghh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TYPE, VALID_NAME, VALID_ID,","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"yongkotaro"},"content":"                VALID_PHONE, null, VALID_TAGS);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG, TagStatus.INCOMPLETE_GOOD, TagType.DEFAULT_TYPE));","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"yongkotaro"},"content":"                new JsonAdaptedPerson(TYPE, VALID_NAME, VALID_ID, VALID_PHONE, VALID_EMAIL, invalidTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yyccbb":1,"yongkotaro":15,"kaitinghh":6,"wang-xinrong":3,"-":93}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"class JsonAdaptedTagTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"wang-xinrong"},"content":"    public void getTagName() {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"        JsonAdaptedTutorialTag wed10 \u003d new JsonAdaptedTutorialTag(WED10.getTagName());","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(wed10.getTagName(), WED10.getTagName());","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"    public void createJsonAdaptedTutorialTagFromTutorialTag() {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"        JsonAdaptedTutorialTag wed10 \u003d new JsonAdaptedTutorialTag(WED10);","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"        assertEquals(wed10.getTagName(), WED10.getTagName());","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"yongkotaro":3,"wang-xinrong":19}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"wang-xinrong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wang-xinrong"},"content":"            \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wang-xinrong"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"wang-xinrong"},"content":"            \"typicalPersonsAddressBook.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wang-xinrong"},"content":"    private static final Path DUPLICATE_TUTORIALTAG_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wang-xinrong"},"content":"            \"duplicateTutorialTagsAddressBook.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wang-xinrong"},"content":"    private static final Path INVALID_TUTORIALTAG_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wang-xinrong"},"content":"            \"invalidTutorialTagsAddressBook.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wang-xinrong"},"content":"    public void toModelType_duplicateTutorialTags_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wang-xinrong"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TUTORIALTAG_FILE,","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"wang-xinrong"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TUTORIALTAG,","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"wang-xinrong"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"wang-xinrong"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"wang-xinrong"},"content":"    public void toModelType_invalidTutorialTagFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"wang-xinrong"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TUTORIALTAG_FILE,","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"wang-xinrong"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"wang-xinrong"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wang-xinrong":23,"-":45}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"yongkotaro"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"yongkotaro"},"content":"     * Adds a new {@code TutorialTag} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"yongkotaro"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"yongkotaro"},"content":"    public AddressBookBuilder withTutorialTag(TutorialTag tutorialTag) {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"        addressBook.addTutorialTag(tutorialTag);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yongkotaro":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"kaitinghh"},"content":"import seedu.address.model.person.Id;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import seedu.address.model.person.PersonType;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    public static final String DEFAULT_TYPE \u003d \"stu\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"kaitinghh"},"content":"    public static final String DEFAULT_ID \u003d \"A1234567Z\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    private PersonType type;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"kaitinghh"},"content":"    private Id id;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        type \u003d PersonType.getPersonType(DEFAULT_TYPE);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"kaitinghh"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        type \u003d personToCopy.getType();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"kaitinghh"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"     * Sets the {@code PersonType} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"    public PersonBuilder withType(String type) {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"        this.type \u003d PersonType.getPersonType(type);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"kaitinghh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"kaitinghh"},"content":"     * Sets the {@code Id} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"kaitinghh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"kaitinghh"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"kaitinghh"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"kaitinghh"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"kaitinghh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"kaitinghh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"wang-xinrong"},"content":"     * Sets the {@code Tag} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"wang-xinrong"},"content":"    public PersonBuilder addTag(String tagName, TagStatus tagStatus) {","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"wang-xinrong"},"content":"        this.tags \u003d Tag.updateTagsWithNewTag(new HashSet\u003c\u003e(tags), tagName, tagStatus);","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"wang-xinrong"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"wang-xinrong"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"wang-xinrong"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"wang-xinrong"},"content":"     * Removes specified tag from the {@code Tag} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"wang-xinrong"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"yyccbb"},"content":"    public PersonBuilder removeTag(String tagName) {","lastModifiedDate":"2024-04-05"},{"lineNumber":117,"author":{"gitId":"yyccbb"},"content":"        this.tags \u003d Tag.removeTagFromTagSet(new HashSet\u003c\u003e(tags), tagName);","lastModifiedDate":"2024-04-05"},{"lineNumber":118,"author":{"gitId":"wang-xinrong"},"content":"        return this;","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"     * Builds the {@code Person}.","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":125,"author":{"gitId":"yongkotaro"},"content":"        return Person.of(type, name, id, phone, email, tags);","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"yyccbb":18,"yongkotaro":1,"kaitinghh":13,"wang-xinrong":13,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        sb.append(person.getType().toString() + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        sb.append(PREFIX_NAME + \" \" + person.getName().fullName + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"kaitinghh"},"content":"        sb.append(PREFIX_ID + \" \" + person.getId().value + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        sb.append(PREFIX_PHONE + \" \" + person.getPhone().value + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"        sb.append(PREFIX_EMAIL + \" \" + person.getEmail().value + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"yongkotaro"},"content":"            s -\u003e sb.append(PREFIX_TAG + \" \" + s.getTagName() + \" \")","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(\" \").append(name.fullName).append(\" \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(\" \").append(phone.value).append(\" \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(\" \").append(email.value).append(\" \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yyccbb":7,"yongkotaro":1,"kaitinghh":2,"-":41}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    public static final Set\u003cIndex\u003e INDEX_1_SET \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    public static final Set\u003cIndex\u003e INDEX_2_SET \u003d new HashSet\u003c\u003e(List.of(INDEX_SECOND_PERSON));","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    public static final Set\u003cIndex\u003e INDEX_3_SET \u003d new HashSet\u003c\u003e(List.of(INDEX_THIRD_PERSON));","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    public static final Set\u003cIndex\u003e INDEX_1_2_SET \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON));","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    public static final Set\u003cIndex\u003e INDEX_1_2_3_SET \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON,","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"            INDEX_THIRD_PERSON));","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"yyccbb":10,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalModel.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalPersons.JANE;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalPersons.JOHN;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.THU10;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":" * A utility class containing a {@code Model} object to be used in tests.","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"public class TypicalModel {","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"    public static final AddressBook AB \u003d new AddressBookBuilder().withPerson(JOHN).withPerson(JANE)","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"            .withTutorialTag(WED10).withTutorialTag(THU10).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"    public static final Model MODEL \u003d new ModelManager(AB, new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yongkotaro":20}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"kaitinghh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"wang-xinrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIENDS;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPE_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPE_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"kaitinghh"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withType(\"stu\").withName(\"Alice Pauline\").withId(\"A0111111A\")","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"yongkotaro"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"kaitinghh"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withType(\"stu\").withName(\"Benson Meier\").withId(\"A0111111C\")","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"kaitinghh"},"content":"    public static final Person CARL \u003d new PersonBuilder().withType(\"stu\").withName(\"Carl Kurz\").withId(\"A2222222D\")","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"yongkotaro"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withType(\"stu\").withName(\"Daniel Meier\")","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"yongkotaro"},"content":"            .withId(\"B3334444E\").withPhone(\"87652533\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"kaitinghh"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withType(\"stu\").withName(\"Elle Meyer\")","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"kaitinghh"},"content":"            .withId(\"B3334444F\").withPhone(\"9482224\").withEmail(\"werner@example.com\")","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"yongkotaro"},"content":"            .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withType(\"ta\").withName(\"Fiona Kunz\")","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"kaitinghh"},"content":"            .withId(\"B5678012F\").withPhone(\"9482427\").withEmail(\"lydia@example.com\")","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"yongkotaro"},"content":"            .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withType(\"ta\").withName(\"George Best\")","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"kaitinghh"},"content":"            .withId(\"A0000000X\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"yongkotaro"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"kaitinghh"},"content":"    public static final Person HOON \u003d new PersonBuilder().withType(\"stu\").withName(\"Hoon Meier\")","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"kaitinghh"},"content":"            .withId(\"A0123456W\").withPhone(\"8482424\").withEmail(\"stefan@example.com\")","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yongkotaro"},"content":"            .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"    public static final Person IDA \u003d new PersonBuilder().withType(\"ta\").withName(\"Ida Mueller\")","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"kaitinghh"},"content":"            .withId(\"P9876543N\").withPhone(\"8482131\").withEmail(\"hans@example.com\")","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"yongkotaro"},"content":"            .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"yongkotaro"},"content":"    public static final Person JANE \u003d new PersonBuilder().withType(\"stu\").withName(\"Jane Doe\").withId(\"A0111111B\")","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"yongkotaro"},"content":"            .withPhone(\"98765432\").withEmail(\"jane@example.com\").addTag(\"W10\", TagStatus.getTagStatus(\"as\"))","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"yongkotaro"},"content":"            .addTag(\"Assignment1\", TagStatus.getTagStatus(\"cg\")).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"yongkotaro"},"content":"    public static final Person JOHN \u003d new PersonBuilder().withType(\"ta\").withName(\"John Doe\").withId(\"A0111111D\")","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"yongkotaro"},"content":"            .withPhone(\"98765432\").withEmail(\"john@example.com\").addTag(\"TUES08\", TagStatus.getTagStatus(\"av\"))","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"    public static final Person AMY \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"kaitinghh"},"content":"            new PersonBuilder().withType(VALID_TYPE_AMY).withName(VALID_NAME_AMY).withId(VALID_ID_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"yongkotaro"},"content":"                    .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"wang-xinrong"},"content":"                    .withTags(VALID_TAG_FRIENDS).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"    public static final Person BOB \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"kaitinghh"},"content":"            new PersonBuilder().withType(VALID_TYPE_BOB).withName(VALID_NAME_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"yongkotaro"},"content":"                    .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"wang-xinrong"},"content":"                    .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIENDS).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"yyccbb":9,"yongkotaro":17,"kaitinghh":14,"wang-xinrong":4,"-":52}},{"path":"src/test/java/seedu/address/testutil/TypicalTutorialTag.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TagStatus;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wang-xinrong"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wang-xinrong"},"content":" * A utility class containing {@code TutorialTag} objects to be used in tests.","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wang-xinrong"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wang-xinrong"},"content":"public class TypicalTutorialTag {","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"    public static final TutorialTag TUES08 \u003d new TutorialTag(\"TUES08\", TagStatus.ASSIGNED);","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":"    public static final TutorialTag WED10 \u003d new TutorialTag(\"WED10\", TagStatus.AVAILABLE);","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":"    public static final TutorialTag THU10 \u003d new TutorialTag(\"THU10\", TagStatus.ASSIGNED);","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"yongkotaro":4,"wang-xinrong":10}},{"path":"src/test/java/seedu/address/testutil/TypicalValidTutorialTagList.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongkotaro"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.THU10;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.TUES08;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"yongkotaro"},"content":"import static seedu.address.testutil.TypicalTutorialTag.WED10;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"yongkotaro"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"yongkotaro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"yongkotaro"},"content":"import seedu.address.model.tag.TutorialTag;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"yongkotaro"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"yongkotaro"},"content":" * A utility class containing a list of {@code TutorialTag} objects to be used in tests.","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"yongkotaro"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"yongkotaro"},"content":"public class TypicalValidTutorialTagList {","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"yongkotaro"},"content":"    public static final ObservableList\u003cTutorialTag\u003e VALID_TUTORIAL_TAG_LIST \u003d initaliseValidTutorialTagList();","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"yongkotaro"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"yongkotaro"},"content":"     * Returns a list of valid {@code TutorialTag} objects.","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yongkotaro"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yongkotaro"},"content":"    public static ObservableList\u003cTutorialTag\u003e initaliseValidTutorialTagList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yongkotaro"},"content":"        ObservableList\u003cTutorialTag\u003e validTutorialTagList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"yongkotaro"},"content":"        validTutorialTagList.add(WED10);","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"yongkotaro"},"content":"        validTutorialTagList.add(THU10);","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"yongkotaro"},"content":"        validTutorialTagList.add(TUES08);","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"yongkotaro"},"content":"        return validTutorialTagList;","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yongkotaro"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yongkotaro"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yongkotaro"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"yongkotaro":28}},{"path":"src/test/java/seedu/address/ui/PersonCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wang-xinrong"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"wang-xinrong"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"wang-xinrong"},"content":"class PersonCardTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"wang-xinrong"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"wang-xinrong":4}}]
